{"version":3,"file":"static/js/829.578aa8ac.chunk.js","mappings":"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","sources":["Component/Buttons/ToggleButton.tsx","webpack://little-fighter-j/./src/App.module.scss?9d54","webpack://little-fighter-j/./src/Component/Buttons/ToggleImgButton.module.scss?fb70","Component/Buttons/ToggleImgButton.tsx","LF2/ui/component/CameraCtrl.ts","LF2/ui/component/make_sum_info.ts","LF2/ui/component/make_fighter_sum.ts","LF2/ui/component/SummaryLogic.ts","LF2/ui/component/make_team_sum_info.ts","LF2/ui/component/make_player_sum.ts","LF2/ui/component/DanmuGameLogic.ts","DanmuOverlay.tsx","webpack://little-fighter-j/./src/game_overlay.module.scss?974e","GameOverlay.ts","webpack://little-fighter-j/./src/GamePad.module.scss?7b9f","LF2/ui/LF2UIEvent.ts","LF2/ui/LF2UIKeyEvent.ts","GamePad.tsx","LF2/controller/BallController.ts","LF2/controller/CtrlDevice.ts","LF2/controller/LocalController.ts","LF2/helper/BallsHelper.ts","LF2/helper/CharactersHelper.ts","LF2/helper/EntitiesHelper.ts","LF2/helper/WeaponsHelper.ts","LF2/helper/manhattan_xz.ts","LF2/bot/DummyEnum.ts","LF2/bot/NearestTargets.ts","LF2/bot/state/BotState.ts","LF2/bot/state/BotState_Avoiding.ts","LF2/bot/state/BotState_Chasing.ts","LF2/bot/state/BotState_Idle.ts","LF2/bot/state/BotState_Following.ts","LF2/bot/utils/is_ray_hit.ts","LF2/bot/BotController.ts","LF2/ui/utils/check_field.ts","LF2/loader/check_stage_info.ts","LF2/loader/preprocess_bg_data.ts","LF2/defines/BinOp.ts","LF2/base/Expression.ts","LF2/loader/check_frame.ts","LF2/loader/check_bdy.ts","LF2/loader/check_itr.ts","LF2/loader/get_val_from_lf2.ts","LF2/loader/get_val_from_entity.ts","LF2/loader/get_val_from_world.ts","LF2/loader/get_val_from_bot_ctrl.ts","LF2/collision/is_armor_work.ts","LF2/loader/get_val_from_collision.ts","LF2/loader/preprocess_next_frame.ts","LF2/loader/preprocess_action.ts","LF2/loader/preprocess_bdy.ts","LF2/loader/preprocess_frame_pic.ts","LF2/loader/preprocess_itr.ts","LF2/loader/preprocess_frame.ts","LF2/dat_translator/cook_frame_indicator_info.ts","LF2/loader/DatMgr.ts","LF2/loader/preprocess_entity_data.ts","LF2/loader/get_import_fallbacks.ts","LF2/PlayerInfo.ts","LF2/bg/Layer.ts","LF2/bg/Background.ts","LF2/stage/Item.ts","LF2/stage/Status.ts","LF2/stage/Stage.ts","LF2/ui/read_info_value.ts","LF2/ui/ui_load_img.ts","LF2/ui/cook_ui_info.ts","LF2/ui/ui_load_txt.ts","LF2/base/StateDelegate.ts","LF2/ui/utils/parse_call_func_expression.ts","LF2/ui/action/Actor.ts","LF2/ui/component/Alignment.ts","LF2/ui/UITextLoader.ts","LF2/ui/component/BackgroundNameText.ts","LF2/base/Invoker.ts","LF2/ui/component/SlotSelLogic.ts","LF2/ui/component/StageNameText.ts","LF2/ui/component/GamePrepareLogic.ts","LF2/utils/container_help/map_no_void.ts","LF2/ui/component/ComNumButton.ts","LF2/ui/component/DemoModeLogic.ts","LF2/ui/component/DifficultyText.ts","LF2/animation/Loop.ts","LF2/animation/Animation.ts","LF2/animation/Delay.ts","LF2/animation/Easing.ts","LF2/animation/Sequence.ts","LF2/animation/Periodic.ts","LF2/animation/Sine.ts","LF2/ui/component/FlexItem.ts","LF2/ui/component/Flex.ts","LF2/ui/component/Jalousie.ts","LF2/ui/component/EndingPageLogic.ts","LF2/ui/component/FadeInOpacity.ts","LF2/ui/component/UIComponentExpressionBuilder.ts","LF2/ui/component/FadeOutOpacity.ts","LF2/ui/component/FighterHead.ts","LF2/ui/component/FighterName.ts","LF2/ui/component/FitChildren.ts","LF2/ui/component/HorizontalLayout.ts","LF2/ui/component/ImgLoop.ts","LF2/ui/component/OpacityAnimation.ts","LF2/ui/component/PositionAnimation.ts","LF2/ui/component/ScaleAnimation.ts","LF2/ui/component/SineOpacity.ts","LF2/ui/component/LaunchPageLogic.ts","LF2/ui/component/LoadingContentText.ts","LF2/ui/component/OpacityHover.ts","LF2/ui/component/PlayerCtrlType.ts","LF2/ui/component/PlayerScore.ts","LF2/ui/component/PlayerFighterThumb.ts","LF2/ui/component/PlayerKeyText.ts","LF2/ui/component/PlayerKeyEdit.ts","LF2/ui/component/PlayerName.ts","LF2/ui/component/PlayerNameInput.ts","LF2/ui/component/PlayerScoreCell.ts","LF2/ui/component/PlayerTeamName.ts","LF2/ui/component/PlayingTimeText.ts","LF2/ui/component/PrefixAndDifficultyText.ts","LF2/ui/component/RandomImgOnLayoutResume.ts","LF2/ui/component/ReachableGroup.ts","LF2/ui/component/Reachable.ts","LF2/ui/component/Sounds.ts","LF2/ui/component/StageModeLogic.ts","LF2/ui/component/StageTitleShow.ts","LF2/ui/component/StageTitleText.ts","LF2/ui/component/StageTransitions.ts","LF2/ui/component/TeamSituationText.ts","LF2/ui/component/VerticalLayout.ts","LF2/ui/component/VsModeLogic.ts","LF2/ui/component/Factory.ts","LF2/ui/UINode.ts","LF2/utils/container_help/filter.ts","LF2/ui/validate_ui_img_info.ts","LF2/ui/LF2PointerEvent.ts","LF2/utils/math/MersenneTwister.ts","LF2/collision/handle_ball_frozen.ts","LF2/collision/handle_rest.ts","LF2/collision/handle_stiffness.ts","LF2/collision/handle_ball_is_hit.ts","LF2/collision/handle_injury.ts","LF2/collision/handle_itr_kind_freeze.ts","LF2/collision/handle_fall.ts","LF2/collision/handle_itr_normal_bdy_normal.ts","LF2/collision/handle_armor.ts","LF2/collision/CollisionKeeper.ts","LF2/collision/handle_itr_kind_catch.ts","LF2/collision/handle_itr_kind_force_catch.ts","LF2/collision/handle_itr_kind_whirlwind.ts","LF2/collision/handle_itr_normal_bdy_defend.ts","LF2/collision/handle_itr_kind_magic_flute.ts","LF2/collision/handle_weapon_is_picked.ts","LF2/collision/handle_weapon_is_picked_secretly.ts","LF2/collision/handle_weapon_is_hit.ts","LF2/collision/handle_ball_hit_other.ts","LF2/collision/handle_john_shield_hit_other_ball.ts","LF2/collision/handle_weapon_hit_other.ts","LF2/collision/handle_body_goto.ts","LF2/collision/handle_healing.ts","LF2/collision/handle_super_punch_me.ts","LF2/WorldDataset.ts","LF2/utils/make_private_properties.ts","LF2/World.ts","LF2/LF2.ts","LoadingImg.tsx","Component/CharacterSelect.tsx","Component/TeamSelect.tsx","PlayerRow.tsx","LF2/utils/list_writable_properties.ts","useLocalStorage.tsx","SettingsRows.tsx","App.tsx","Component/Buttons/StatusButton.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { IStatusButtonProps, StatusButton } from \"./StatusButton\";\n\nexport interface IToggleButtonProps\n  extends Omit<IStatusButtonProps<boolean>, \"onChange\" | \"items\"> {\n  children?:\n  | [React.ReactNode, React.ReactNode]\n  | [React.ReactNode]\n  | React.ReactNode;\n  onChange?: (v: boolean) => void;\n}\nexport function ToggleButton(props: IToggleButtonProps) {\n  const { children, onChange, value, ..._p } = props;\n  const [v, set_v] = useState(false)\n  const _items = useMemo(() => {\n    if (Array.isArray(children)) {\n      const [a, b = a] = children;\n      return [\n        { value: false, label: a },\n        { value: true, label: b },\n      ];\n    }\n    return [\n      { value: false, label: children },\n      { value: true, label: children },\n    ];\n  }, [children]);\n\n  return (\n    <StatusButton\n      {..._p}\n      items={_items}\n      value={value ?? v}\n      parse={i => [i.value, i.label]}\n      onChange={(v) => (onChange ?? set_v)(!!v)} />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"game_contiainer\":\"App_game_contiainer__qPMMT\",\"game_canvas\":\"App_game_canvas__zAs50\",\"game_overlay\":\"App_game_overlay__4KlY0\",\"gone\":\"App_gone__aZUed\",\"debug_pannel\":\"App_debug_pannel__wcl1w\",\"loading_img\":\"App_loading_img__tD1mM\",\"loading_img_l\":\"App_loading_img_l__NyeNP\",\"loading_img_s\":\"App_loading_img_s__UqQzE\",\"app\":\"App_app__GuJBs\",\"editor_view\":\"App_editor_view__yjUhY\",\"top\":\"App_top__didI7\",\"main\":\"App_main__5VZ13\",\"debug_ui\":\"App_debug_ui__SMXDo\",\"mobile\":\"App_mobile__cBbeb\",\"landscape\":\"App_landscape__8ibI8\",\"debug_ui_top\":\"App_debug_ui_top__6URKy\",\"debug_ui_bottom\":\"App_debug_ui_bottom__IqgXH\",\"debug_ui_left\":\"App_debug_ui_left__lJdlT\",\"debug_ui_right\":\"App_debug_ui_right__sl4Q+\",\"portrait\":\"App_portrait__8qkSq\",\"settings_row\":\"App_settings_row__Vc4jm\"};","// extracted by mini-css-extract-plugin\nexport default {\"lf2ui_img_button\":\"ToggleImgButton_lf2ui_img_button__R4GeW\",\"inner_div\":\"ToggleImgButton_inner_div__AEB9q\",\"inner_0\":\"ToggleImgButton_inner_0__oGWlh\",\"false\":\"ToggleImgButton_false__Em5Y7\",\"inner_1\":\"ToggleImgButton_inner_1__Jt7Sp\"};","import device from \"current-device\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useForwardedRef } from \"../useForwardedRef\";\r\nimport { TShortcut, useShortcut } from \"../useShortcut\";\r\nimport styles from \"./ToggleImgButton.module.scss\";\r\nimport classNames from \"classnames\";\r\nconst is_desktop = device.desktop();\r\n\r\nexport interface IToggleImgProps\r\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"children\" | \"onToggle\"> {\r\n  checked?: boolean;\r\n  alt?: [string, string] | string;\r\n  onToggle?(v: boolean): void;\r\n  shortcut?: TShortcut;\r\n  shortcutTarget?: Window | Document | Element;\r\n  show_shortcut?: boolean;\r\n  src?: [string, string] | [string];\r\n  ref?: React.Ref<HTMLButtonElement>;\r\n}\r\nexport const ToggleImgButton: React.FC<IToggleImgProps> = React.forwardRef<\r\n  HTMLButtonElement,\r\n  IToggleImgProps\r\n>((props: IToggleImgProps, ref: React.ForwardedRef<HTMLButtonElement>) => {\r\n  const {\r\n    src: children = [],\r\n    checked = false,\r\n    onClick,\r\n    onToggle,\r\n    shortcut,\r\n    shortcutTarget = window,\r\n    show_shortcut,\r\n    className,\r\n    alt,\r\n    ...remain_props\r\n  } = props;\r\n  const [ref_btn, on_ref] = useForwardedRef<HTMLButtonElement>(ref);\r\n\r\n  const ref_checked = useRef(checked);\r\n  ref_checked.current = checked;\r\n\r\n  const ref_onToggle = useRef(onToggle);\r\n  ref_onToggle.current = onToggle;\r\n\r\n  const unchecked_src = children[1] ?? children[0];\r\n  const checked_src = children[0];\r\n\r\n  const alt_0 = Array.isArray(alt) ? alt[0] : alt;\r\n  const alt_1 = Array.isArray(alt) ? alt[1] : alt;\r\n\r\n  const _onClick: typeof onClick = (e) => {\r\n    onClick?.(e);\r\n    onToggle?.(!checked);\r\n  };\r\n  useShortcut(shortcut, props.disabled, ref_btn, shortcutTarget);\r\n\r\n  const [has_keyboard, set_has_keyboard] = useState(is_desktop);\r\n\r\n  useEffect(() => {\r\n    const o = () => set_has_keyboard(true);\r\n    window.addEventListener(\"keydown\", o, { once: true });\r\n    return () => window.removeEventListener(\"keydown\", o);\r\n  }, []);\r\n\r\n  const _show_shortcut = show_shortcut ?? has_keyboard;\r\n  const root_className = classNames(styles.lf2ui_img_button, className)\r\n  return (\r\n    <button\r\n      {...remain_props}\r\n      className={root_className}\r\n      type={props.type ?? \"button\"}\r\n      ref={on_ref}\r\n      onClick={_onClick}\r\n      title={_show_shortcut ? shortcut : \"\"}\r\n    >\r\n      <div className={styles.inner_div}>\r\n        <img\r\n          draggable={false}\r\n          className={classNames(styles.inner_0, styles[\"\" + checked])}\r\n          src={unchecked_src}\r\n          alt={alt_0}\r\n        />\r\n        <img\r\n          draggable={false}\r\n          className={classNames(styles.inner_1, styles[\"\" + checked])}\r\n          src={checked_src}\r\n          alt={alt_1}\r\n        />\r\n      </div>\r\n    </button>\r\n  );\r\n});\r\n","import { KeyStatus } from \"../../controller/KeyStatus\";\nimport { GameKey } from \"../../defines\";\nimport { Entity } from \"../../entity\";\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\nimport { UIComponent } from \"./UIComponent\";\n\n\nexport class CameraCtrl extends UIComponent {\n  static override readonly TAG = 'CameraCtrl';\n  time: number = 0;\n  free: boolean = true;\n  _staring?: Entity;\n  get staring(): Entity | undefined { return this._staring; }\n  set staring(v: Entity | undefined) { this._staring = v; };\n  readonly keys: Record<GameKey, KeyStatus> = {\n    [GameKey.L]: new KeyStatus(this),\n    [GameKey.R]: new KeyStatus(this),\n    [GameKey.U]: new KeyStatus(this),\n    [GameKey.D]: new KeyStatus(this),\n    [GameKey.a]: new KeyStatus(this),\n    [GameKey.j]: new KeyStatus(this),\n    [GameKey.d]: new KeyStatus(this)\n  };\n  get lr() {\n    const r = this.keys.R.is_end() ? 0 : 1;\n    const l = this.keys.L.is_end() ? 0 : 1;\n    return r - l;\n  }\n  override on_key_down(e: IUIKeyEvent): void {\n    this.keys[e.game_key].hit();\n  }\n  override on_key_up(e: IUIKeyEvent): void {\n    this.keys[e.game_key].end();\n  }\n  override update(dt: number): void {\n    const { lr } = this;\n    if (lr) {\n      this.free = false\n      const cam_x = this.world.renderer.cam_x;\n      this.world.lock_cam_x = cam_x + 10 * dt * lr;\n    } else if (!this.keys.j.is_end()) {\n      this.free = false\n      const cam_x = this.world.renderer.cam_x;\n      this.world.lock_cam_x = cam_x;\n    } else if (!this.keys.d.is_end()) {\n      this.world.lock_cam_x = void 0;\n      this.free = true\n    } else if (this.keys.U.is_start()) {\n      this.keys.U.use()\n      const fighters = this.lf2.characters.list()\n      const idx = fighters.indexOf(this.staring!)\n      const len = fighters.length\n      this.staring = fighters[(idx + len - 1) % len]\n      this.free = !!this.staring;\n    } else if (this.keys.D.is_start()) {\n      this.keys.D.use()\n      const fighters = this.lf2.characters.list()\n      const idx = fighters.indexOf(this.staring!)\n      const len = fighters.length\n      this.staring = fighters[(idx + 1) % len]\n      this.free = !!this.staring;\n    }\n    if (this.staring?.is_attach === false)\n      this._staring = void 0;\n    if (this.free && this.staring)\n      this.world.lock_cam_x = this.staring.position.x - this.world.screen_w / 2\n    this.time += dt;\n  }\n}\n","import { ISumInfo } from \"./ISumInfo\";\n\nexport const make_sum_info = (team: string): ISumInfo => ({\n  wins: 0,\n  loses: 0,\n  kills: 0,\n  damages: 0,\n  pickings: 0,\n  spawns: 0,\n  deads: 0,\n  team,\n  latest_dead_time: -1,\n  hp_lost: 0,\n  mp_usage: 0,\n  lost: false,\n});\n\n","import { IEntityData } from \"../../defines\";\nimport { IFighterSumInfo } from \"./IFighterSumInfo\";\nimport { make_sum_info } from \"./make_sum_info\";\n\nexport const make_fighter_sum = (data: IEntityData): IFighterSumInfo => {\n  return { ...make_sum_info(''), data };\n};\n\n","import { Entity, IEntityCallbacks, is_character } from \"../../entity\";\nimport { IWorldCallbacks } from \"../../IWorldCallbacks\";\nimport { max } from \"../../utils\";\nimport { IFighterSumInfo, IPlayerSumInfo } from \"./IFighterSumInfo\";\nimport { ITeamSumInfo } from \"./ITeamSumInfo\";\nimport { make_fighter_sum } from \"./make_fighter_sum\";\nimport { make_player_sum } from \"./make_player_sum\";\nimport { make_team_sum_info } from \"./make_team_sum_info\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class SummaryLogic extends UIComponent {\n  static override readonly TAG: string = 'SummaryLogic';\n  readonly fighters = new Map<string, IFighterSumInfo>();\n  readonly players = new Map<string, IPlayerSumInfo>();\n  readonly teams = new Map<string, ITeamSumInfo>();\n  readonly losing_teams = new Set<ITeamSumInfo>();\n\n  team_sum(team: string): ITeamSumInfo {\n    let ret = this.teams.get(team)\n    if (!ret) this.teams.set(team, ret = make_team_sum_info(team))\n    return ret;\n  }\n  fighter_sum(entity: Entity): IFighterSumInfo {\n    let ret = this.fighters.get(entity.data.id)\n    if (!ret) this.fighters.set(entity.data.id, ret = make_fighter_sum(entity.data))\n    return ret;\n  }\n  player_sum(entity: Entity): IFighterSumInfo {\n    let ret = this.players.get(entity.ctrl.player_id)\n    if (!ret) this.players.set(entity.ctrl.player_id, ret = make_player_sum(entity))\n    return ret;\n  }\n  private _world_cb: IWorldCallbacks = {\n    on_fighter_del: e => this.on_fighter_del(e),\n    on_fighter_add: e => this.on_fighter_add(e),\n  };\n  private _fighter_cb: IEntityCallbacks = {\n    on_damage_sum_changed: (e, value, prev) => {\n      // 母体还在，避免重算\n      if (e.emitter?.is_attach === true) return;\n      this.team_sum(e.team).damages += value - prev;\n      this.fighter_sum(e).damages += value - prev;\n      this.player_sum(e).damages += value - prev;\n    },\n    on_kill_sum_changed: (e, value, prev) => {\n      // 母体还在，避免重算\n      if (e.emitter?.is_attach === true) return;\n      this.team_sum(e.team).kills += value - prev;\n      this.fighter_sum(e).kills += value - prev;\n      this.player_sum(e).kills += value - prev;\n    },\n    on_picking_sum_changed: (e, value, prev) => {\n      this.team_sum(e.team).pickings += value - prev;\n      this.fighter_sum(e).pickings += value - prev;\n      this.player_sum(e).pickings += value - prev;\n    },\n    on_dead: (e) => {\n      // 分身死亡不计算\n      if (e.emitter) return;\n      const team_sum = this.team_sum(e.team);\n      team_sum.deads++;\n      team_sum.lives--;\n      team_sum.latest_dead_time = this.node.update_times;\n      if (team_sum.deads === team_sum.spawns)\n        this.losing_teams.add(team_sum)\n      this.fighter_sum(e).deads++;\n      this.player_sum(e).deads++;\n    },\n    on_hp_changed: (e, value, prev) => {\n      const team_sum = this.team_sum(e.team);\n      team_sum.hp += max(value, 0) - prev;\n      if (prev <= 0 && value > 0) {\n        // 复活\n        team_sum.deads--;\n        this.fighter_sum(e).deads--;\n        this.player_sum(e).deads--;\n        team_sum.lives++;\n      } else if (prev > value) {\n        // 失血\n        const diif = prev - value\n        team_sum.hp_lost += diif;\n        this.fighter_sum(e).hp_lost += diif;\n        this.player_sum(e).hp_lost += diif;\n      }\n    },\n    on_mp_changed: (e, value, prev) => {\n      if (prev > value) {\n        const diif = prev - value\n        this.team_sum(e.team).mp_usage += diif;\n        this.fighter_sum(e).mp_usage += diif;\n        this.player_sum(e).mp_usage += diif;\n      }\n    },\n    on_reserve_changed: (e, value, prev) => {\n      this.team_sum(e.team).reserve += value - prev;\n    },\n  };\n  on_fighter_add(e: Entity) {\n    const team_sum = this.team_sum(e.team)\n    team_sum.hp += e.hp;\n    team_sum.reserve += e.reserve;\n    team_sum.lives++\n    if (!e.emitter) { // 忽略分身计数\n      team_sum.spawns++;\n      this.losing_teams.delete(team_sum);\n      this.fighter_sum(e).spawns++;\n      this.player_sum(e).spawns++;\n    }\n    e.callbacks.add(this._fighter_cb);\n  }\n  on_fighter_del(e: Entity) {\n    e.callbacks.del(this._fighter_cb);\n  }\n  override on_start(): void {\n    super.on_start?.();\n    for (const e of this.world.entities) {\n      if (is_character(e)) {\n        this.on_fighter_add(e)\n      }\n    }\n    this.world.callbacks.add(this._world_cb);\n  }\n  override on_stop(): void {\n    super.on_stop?.();\n    this.world.callbacks.del(this._world_cb);\n  }\n\n  private _temps: ITeamSumInfo[] = []\n  override update(dt: number): void {\n    super.update?.(dt);\n\n    if (this.losing_teams.size) {\n      for (const losing_team of this.losing_teams) {\n        const is_waiting = this.node.update_times - losing_team.latest_dead_time < 180;\n        if (is_waiting) continue;\n        losing_team.loses++;\n        this._temps.push(losing_team);\n      }\n    }\n    if (this._temps.length) {\n      this._temps.forEach(i => this.losing_teams.delete(i))\n      this._temps.length = 0;\n    }\n  }\n}\n","import { ITeamSumInfo } from \"./ITeamSumInfo\";\nimport { make_sum_info } from \"./make_sum_info\";\n\n\nexport const make_team_sum_info = (team: string): ITeamSumInfo => ({\n  ...make_sum_info(team),\n  lives: 0, \n  hp: 0, \n  reserve: 0,\n});\n","import { Entity } from \"../../entity\";\nimport { IPlayerSumInfo } from \"./IFighterSumInfo\";\nimport { make_fighter_sum } from \"./make_fighter_sum\";\n\n\nexport const make_player_sum = (e: Entity): IPlayerSumInfo => {\n  return { ...make_fighter_sum(e.data), player_id: e.ctrl.player_id };\n};\n","import { Builtin_FrameId, Defines, BuiltIn_OID as OID } from \"../../defines\";\r\nimport { TeamEnum as TE } from \"../../defines/TeamEnum\";\r\nimport { Entity } from \"../../entity/Entity\";\r\nimport { Times } from \"../utils/Times\";\r\nimport { CameraCtrl } from \"./CameraCtrl\";\r\nimport { SummaryLogic } from \"./SummaryLogic\";\r\n\r\nexport class DanmuGameLogic extends SummaryLogic {\r\n  static override readonly TAG: string = 'DanmuGameLogic';\r\n  static readonly BROADCAST_ON_START = 'DanmuGameLogic_ON_START';\r\n  static readonly BROADCAST_ON_STOP = 'DanmuGameLogic_ON_STOP';\r\n\r\n  private _staring_countdown = new Times(0, 60 * 30);\r\n  private _gameover_countdown = new Times(0, 60 * 5);\r\n  private _teams = new Set<string>();\r\n  private _cam_ctrl?: CameraCtrl\r\n\r\n  time: number = 0;\r\n  override init(...args: any[]): this {\r\n    super.init(...args);\r\n    return this;\r\n  }\r\n  update_teams() {\r\n    const fighters = this.lf2.characters.list();\r\n    this._teams.clear()\r\n    for (const fighter of fighters)\r\n      this._teams.add(fighter.team);\r\n  }\r\n  override on_fighter_add(e: Entity) {\r\n    super.on_fighter_add(e);\r\n    this.update_teams()\r\n  }\r\n  override on_fighter_del(e: Entity) {\r\n    super.on_fighter_del(e);\r\n    this.update_teams()\r\n    if (!this._cam_ctrl || this._cam_ctrl?.staring !== e) return\r\n    // 聚焦角色被移除后，聚焦下一个角色\r\n    this._staring_countdown.reset();\r\n    this._cam_ctrl.staring = this.lf2.random_get(this.lf2.characters.list())\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.update_bg();\r\n    this.lf2.sounds.play_bgm('?')\r\n    this.lf2.on_component_broadcast(this, DanmuGameLogic.BROADCAST_ON_START)\r\n    this._cam_ctrl = this.node.find_component(CameraCtrl)\r\n  }\r\n  override on_stop(): void {\r\n    super.on_stop?.();\r\n    this.world.lock_cam_x = void 0;\r\n    this.lf2.on_component_broadcast(this, DanmuGameLogic.BROADCAST_ON_STOP);\r\n    this.lf2.change_bg(Defines.VOID_BG)\r\n  }\r\n\r\n  update_bg() {\r\n    for (const e of this.world.entities)\r\n      e.enter_frame({ id: Builtin_FrameId.Gone })\r\n    const fighter_enter = (v: Entity) => {\r\n      v.key_role = v.dead_gone = true;\r\n      v.name = v.data.base.name;\r\n      v.blinking = 120;\r\n    }\r\n    const way: number = 5;\r\n    switch (way) {\r\n      case 0: {\r\n        this.lf2.change_bg('?');\r\n        this.lf2.characters.add(OID.Julian, 2, TE.Team_1).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 1, TE.Team_1).forEach(fighter_enter)\r\n\r\n        this.lf2.characters.add(OID.Firzen, 3, TE.Team_2).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 1, TE.Team_2).forEach(fighter_enter)\r\n\r\n        this.lf2.characters.add(OID.LouisEX, 2, TE.Team_3).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Bat, 3, TE.Team_3).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 1, TE.Team_3).forEach(fighter_enter)\r\n\r\n        this.lf2.characters.add(OID.Deep, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Davis, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Dennis, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Woody, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Firen, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Freeze, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jack, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Mark, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Monk, 1, TE.Team_4).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Knight, 1, TE.Team_4).forEach(fighter_enter)\r\n        break\r\n      }\r\n      case 1: { // 1v1v1v1v1v1\r\n        this.lf2.change_bg('?');\r\n        this.lf2.characters.add(OID.Deep, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Davis, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Dennis, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Woody, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Firen, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Freeze, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jack, 1, '').forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Louis, 1, '').forEach(fighter_enter)\r\n        break;\r\n      }\r\n      case 2: { // mark vs monk\r\n        this.lf2.change_bg('?');\r\n        this.lf2.characters.add(OID.Monk, 8, TE.Team_1).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 2, TE.Team_1).forEach(fighter_enter)\r\n\r\n        this.lf2.characters.add(OID.Mark, 8, TE.Team_2).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Jan, 2, TE.Team_2).forEach(fighter_enter)\r\n        break;\r\n      }\r\n      case 3: {  // Justin vs Julian\r\n        this.lf2.change_bg('bg_4');\r\n        this.lf2.characters.add(OID.Justin, 4, TE.Team_1).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Justin, 4, TE.Team_2).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Justin, 4, TE.Team_3).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Julian, 1, TE.Team_4).forEach(fighter_enter)\r\n        break;\r\n      }\r\n      case 4: {\r\n        this.lf2.change_bg('?');\r\n        this.lf2.characters.add(OID.Henry, 4, TE.Team_1).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Hunter, 4, TE.Team_2).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Rudolf, 4, TE.Team_3).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.John, 4, TE.Team_4).forEach(fighter_enter)\r\n        break;\r\n      }\r\n      case 5: {\r\n        this.lf2.change_bg('bg_4');\r\n        this.lf2.characters.add(OID.John, 4, TE.Team_1).forEach(fighter_enter)\r\n        this.lf2.characters.add(OID.Sorcerer, 6, TE.Team_2).forEach(fighter_enter)\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.update_staring();\r\n    this._staring_countdown.reset()\r\n\r\n    const staring = this._cam_ctrl?.staring;\r\n    if (staring && this._cam_ctrl?.free != false) {\r\n      const { left, right } = this.world.stage;\r\n      let cam_x = staring.position.x - this.world.screen_w / 2\r\n      const max_cam_left = left;\r\n      const max_cam_right = right;\r\n      if (cam_x < max_cam_left) cam_x = max_cam_left;\r\n      if (cam_x > max_cam_right - this.world.screen_w) cam_x = max_cam_right - this.world.screen_w;\r\n      this.world.lock_cam_x = cam_x\r\n      this.world.renderer.cam_x = cam_x;\r\n    }\r\n  }\r\n  update_staring() {\r\n    if (!this._cam_ctrl) return;\r\n    const fighters = this.lf2.characters.list();\r\n    this._cam_ctrl.staring = this.lf2.random_get(fighters)\r\n  }\r\n  override update(dt: number): void {\r\n    this.time += dt;\r\n    super.update?.(dt)\r\n    this._staring_countdown.add();\r\n    if (this._staring_countdown.end()) this.update_staring()\r\n\r\n    const staring = this._cam_ctrl?.staring;\r\n    if (staring && this._cam_ctrl?.free != false)\r\n      this.world.lock_cam_x = staring.position.x - this.world.screen_w / 2\r\n    else if (!staring)\r\n      this.update_staring()\r\n\r\n    if (this._teams.size <= 1) {\r\n      if (this._gameover_countdown.end()) {\r\n        if (this._teams.size) {\r\n          for (const [k, v] of this.teams) {\r\n            if (this._teams.has(k)) v.wins += 1\r\n          }\r\n        }\r\n        this._gameover_countdown.reset()\r\n        this.update_bg()\r\n      } else {\r\n        this._gameover_countdown.add()\r\n      }\r\n    } else {\r\n      this._gameover_countdown.reset()\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { get_team_text_color } from \"./LF2/base/get_team_text_color\";\r\nimport { ILf2Callback } from \"./LF2/ILf2Callback\";\r\nimport { LF2 } from \"./LF2/LF2\";\r\nimport { DanmuGameLogic } from \"./LF2/ui/component/DanmuGameLogic\";\r\nimport { IFighterSumInfo } from \"./LF2/ui/component/IFighterSumInfo\";\r\nimport { UIComponent } from \"./LF2/ui/component/UIComponent\";\r\nimport { Times } from \"./LF2/ui/utils/Times\";\r\nimport { floor } from \"./LF2/utils\";\r\nconst n = (nn: number) => nn.toFixed(2).replace(/0+$/, '').replace(/\\.$/, '')\r\n\r\nconst t = (name: string, color: string = 'white') => {\r\n  return `<span style=\"display:inline-block;width:100px;color:${color};\">${name}</span>:`\r\n}\r\nexport class DanmuOverlayLogic implements ILf2Callback {\r\n  lf2: LF2;\r\n  component: DanmuGameLogic | undefined;\r\n  timer: ReturnType<typeof setInterval> | null = null;\r\n  ele: HTMLDivElement | null = null;\r\n  times = new Times(0, Number.MAX_SAFE_INTEGER);\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n    this.lf2.callbacks.add(this)\r\n  }\r\n  release() {\r\n    this.lf2.callbacks.del(this)\r\n  }\r\n  on_component_broadcast(component: UIComponent, msg: string) {\r\n    if (msg === DanmuGameLogic.BROADCAST_ON_START) {\r\n      this.component = component as DanmuGameLogic\r\n      this.open?.();\r\n      if (this.timer) clearInterval(this.timer)\r\n      this.timer = setInterval(() => this.update(), 1000)\r\n      this.update()\r\n    } else if (msg === DanmuGameLogic.BROADCAST_ON_STOP) {\r\n      this.component = component as DanmuGameLogic\r\n      this.close?.();\r\n      if (this.timer) clearInterval(this.timer)\r\n      this.timer = null\r\n    }\r\n  }\r\n  update(): void {\r\n    const { ele, component } = this;\r\n    if (!ele || !component) return;\r\n    ele.innerHTML = ''\r\n\r\n    const team_sum = Array.from(component.teams.values()).sort((b, a) => {\r\n      const w = a.wins - b.wins;\r\n      if (w) return w\r\n      const k = a.kills - b.kills;\r\n      if (k) return k\r\n      const d = b.deads - a.deads;\r\n      if (d) return d;\r\n      const s = a.spawns - b.spawns;\r\n      if (s) return s;\r\n      return a.damages - b.damages;\r\n    })\r\n\r\n    ele.innerHTML += `Bot \"AI\"测试中(数据不保留)\\n`\r\n    ele.innerHTML += `🎖️=击败数 ☠️=战败数 🐣=出场数 💥=伤害值 ⚔️=KD值\\n`\r\n    ele.innerHTML += `🏆=胜局数 😵=败局数\\n`\r\n    if (team_sum.length) {\r\n      ele.innerHTML += '------------------------------【队伍】------------------------------\\n'\r\n      for (const sum of team_sum) {\r\n        if (!sum.spawns) continue;\r\n        ele.innerHTML += `${t('Team ' + sum.team, get_team_text_color(sum.team))} 🏆|😵|🎖️|☠️|🐣|💥 = ${sum.wins} | ${sum.loses} | ${sum.kills} | ${sum.deads} | ${sum.spawns} | ${sum.damages}\\n`\r\n      }\r\n    }\r\n\r\n    this.times.add();\r\n    const anchor = floor(this.times.value / 16)\r\n    const remain_times = ((anchor + 1) * 16 - this.times.value - 1)\r\n    switch (anchor % 3) {\r\n      case 0: {\r\n        const fighter_sum = Array.from(component.fighters.values()).sort(sort_by_kd)\r\n        let i = 0\r\n        ele.innerHTML += `------------------------------【角色-KD排名】${remain_times}秒------------------------------\\n`\r\n        for (const sum of fighter_sum) {\r\n          const { spawns, kills, deads, damages } = sum;\r\n          if (!spawns) continue;\r\n          const { name } = sum.data.base;\r\n          if (deads) ele.innerHTML += `${t(`${++i}.${name}`)} ⚔️|🐣|💥 = ${n(kills / deads)} | ${spawns} | ${damages}\\n`\r\n          else if (kills) ele.innerHTML += `${t(`${++i}.${name}`)} 🎖️|🐣|💥 = ${n(kills)} | ${spawns} | ${damages}\\n`\r\n          else ele.innerHTML += `${t(`${++i}.${name}`)} 🐣|💥 = ${spawns} | ${damages}\\n`\r\n        }\r\n        break;\r\n      }\r\n      case 1: {\r\n        const fighter_sum = Array.from(component.fighters.values()).sort(sort_by_kills_per_spawn)\r\n        ele.innerHTML += `------------------------------【角色-场均击败排名】${remain_times}秒------------------------------\\n`\r\n        let i = 0\r\n        for (const sum of fighter_sum) {\r\n          const { spawns, kills } = sum;\r\n          if (!spawns || !kills) continue;\r\n          const { name } = sum.data.base;\r\n          ele.innerHTML += `${t(`${++i}.${name}`)} 🎖️|🐣 = ${n(kills / spawns)} | ${spawns}\\n`\r\n        }\r\n        break;\r\n      }\r\n      case 2: {\r\n        const fighter_sum = Array.from(component.fighters.values()).sort(sort_by_damages_per_spawn)\r\n        ele.innerHTML += `------------------------------【角色-场均伤害排名】${remain_times}秒------------------------------\\n`\r\n        let i = 0\r\n        for (const sum of fighter_sum) {\r\n          const { spawns, damages } = sum;\r\n          if (!spawns || !damages) continue;\r\n          const { name } = sum.data.base;\r\n          ele.innerHTML += `${t(`${++i}.${name}`)} 💥|🐣 = ${n(damages / spawns)} | ${spawns}\\n`\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  close?(): void;\r\n  open?(): void;\r\n}\r\nfunction sort_by_kd(a: IFighterSumInfo, b: IFighterSumInfo): number {\r\n  if (a.spawns && !b.spawns) return -1;\r\n  if (!a.spawns && b.spawns) return 1;\r\n  if (a.deads && b.deads) {\r\n    const akd = a.kills / a.deads;\r\n    const bkd = b.kills / b.deads;\r\n    const kd = bkd - akd;\r\n    if (kd) return kd;\r\n  }\r\n  const k = b.kills - a.kills;\r\n  if (k) return k;\r\n  const d = a.deads - b.deads;\r\n  if (d) return d;\r\n  const s = a.spawns - b.spawns;\r\n  if (s) return s;\r\n  return b.damages - a.damages;\r\n}\r\nfunction sort_by_damages_per_spawn(a: IFighterSumInfo, b: IFighterSumInfo): number {\r\n  if (a.spawns && !b.spawns) return -1;\r\n  if (!a.spawns && b.spawns) return 1;\r\n  return b.damages / b.spawns - a.damages / a.spawns;\r\n}\r\nfunction sort_by_kills_per_spawn(a: IFighterSumInfo, b: IFighterSumInfo): number {\r\n  if (a.spawns && !b.spawns) return -1;\r\n  if (!a.spawns && b.spawns) return 1;\r\n  return b.kills / b.spawns - a.kills / a.spawns;\r\n}\r\n\r\nexport function DanmuOverlay(props: { lf2: LF2 | undefined }) {\r\n  const { lf2 } = props;\r\n  const ref_div = useRef<HTMLDivElement | null>(null);\r\n  const [open, set_open] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!lf2) return;\r\n    const ele = ref_div.current;\r\n    if (!ele) return;\r\n    const logic = new DanmuOverlayLogic(lf2)\r\n    logic.ele = ele;\r\n    logic.open = () => set_open(true);\r\n    logic.close = () => set_open(false);\r\n    return () => logic.release()\r\n  }, [lf2, ref_div])\r\n\r\n  return (\r\n    <div ref={ref_div} style={{\r\n      position: 'fixed',\r\n      color: 'white',\r\n      pointerEvents: 'none',\r\n      display: open ? 'block' : 'none',\r\n      whiteSpace: 'pre-wrap',\r\n      left: 30,\r\n      top: 50,\r\n      fontSize: 20,\r\n      opacity: 0.7,\r\n      fontFamily: 'Arial',\r\n      textShadow: `-1px 1px 0 #000, 1px 1px 0 #000,1px -1px 0 #000,-1px -1px 0 #000`\r\n    }} />\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"txt_game_overlay\":\"game_overlay_txt_game_overlay__LHYv2\",\"camera_ctrl\":\"game_overlay_camera_ctrl__21+Zb\",\"btn_free_cam\":\"game_overlay_btn_free_cam__RuxPa\"};","import { Defines } from \"./LF2/defines/defines\";\r\nimport { is_num } from \"./LF2/utils/type_check\";\r\nimport { ILf2Callback } from \"./LF2/ILf2Callback\";\r\nimport type { IWorldCallbacks } from \"./LF2/IWorldCallbacks\";\r\nimport type { World } from \"./LF2/World\";\r\nimport styles from \"./game_overlay.module.scss\";\r\nimport { Button } from \"./Component/Buttons/Button\";\r\nconst ele = document.createElement.bind(document);\r\nexport class GameOverlay {\r\n  release(): void {\r\n    this.ele_fps.remove();\r\n    this.ele_ups.remove();\r\n    this.ele_sps.remove();\r\n    this.ele_cam_bar.remove();\r\n    this.ele_loading.remove();\r\n    this.ele_btn_free_cam.remove();\r\n  }\r\n  readonly world: World;\r\n  protected ele: HTMLElement | null | undefined;\r\n  protected ele_fps: HTMLElement;\r\n  protected ele_ups: HTMLElement;\r\n  protected ele_sps: HTMLElement;\r\n  protected ele_cam_bar: HTMLCanvasElement;\r\n  protected ele_loading: HTMLSpanElement;\r\n  protected ele_btn_free_cam: HTMLButtonElement;\r\n\r\n  private cam_bar_pressing = false;\r\n  private ctx_cam_bar: CanvasRenderingContext2D | null = null;\r\n  private cam_locked: boolean = false;\r\n\r\n  private _pointer_down = (e: PointerEvent) => {\r\n    if (!e.isPrimary) return;\r\n    if (!this.cam_locked) this.cam_locked = true;\r\n    this.cam_bar_pressing = true;\r\n    this.handle_cam_ctrl_pointer_event(e);\r\n  };\r\n  private _pointer_move = (e: PointerEvent) => {\r\n    if (!e.isPrimary || !this.cam_bar_pressing) return;\r\n    this.handle_cam_ctrl_pointer_event(e);\r\n  };\r\n  private _pointer_up = (e: PointerEvent) => {\r\n    if (!e.isPrimary || !this.cam_bar_pressing) return;\r\n    this.cam_bar_pressing = false;\r\n    this.handle_cam_ctrl_pointer_event(e);\r\n  };\r\n\r\n  constructor(world: World, container: HTMLElement | null | undefined) {\r\n    this.world = world;\r\n    this.ele = container;\r\n    this.ele_fps = ele(\"span\");\r\n    this.ele_fps.className = styles.txt_game_overlay;\r\n    this.ele_ups = ele(\"span\");\r\n    this.ele_ups.className = styles.txt_game_overlay;\r\n    this.ele_sps = ele(\"span\");\r\n    this.ele_sps.className = styles.txt_game_overlay;\r\n    this.ele_loading = ele(\"span\");\r\n    this.ele_loading.className = styles.txt_game_overlay;\r\n    this.ele_cam_bar = ele(\"canvas\");\r\n    this.ele_btn_free_cam = ele(\"button\");\r\n    this.init_ele_btn_free_cam();\r\n    this.init_ele_cam_bar();\r\n    world.lf2.callbacks.add(this._l_listener);\r\n    world.callbacks.add(this._w_listener);\r\n\r\n    if (!container) return;\r\n    container.innerHTML = \"\";\r\n    container.append(\r\n      this.ele_fps,\r\n      ele(\"br\"),\r\n      this.ele_ups,\r\n      ele(\"br\"),\r\n      // this.ele_sps, ele('br'),\r\n      this.ele_loading,\r\n      ele(\"br\"),\r\n      this.ele_cam_bar,\r\n      this.ele_btn_free_cam,\r\n    );\r\n  }\r\n  init_ele_btn_free_cam() {\r\n    this.ele_btn_free_cam.style.display = \"none\";\r\n    this.ele_btn_free_cam.className = `${Button.default_class_name} ${styles.btn_free_cam}`;\r\n    this.ele_btn_free_cam.innerText = \"释放\";\r\n    this.ele_btn_free_cam.type = \"button\";\r\n\r\n    this.ele_btn_free_cam.addEventListener(\"click\", () => {\r\n      this.cam_locked = false;\r\n      if (is_num(this.world.lock_cam_x)) {\r\n        this.draw_cam_bar(this.world.lock_cam_x);\r\n        this.world.lock_cam_x = void 0;\r\n      }\r\n    });\r\n  }\r\n  init_ele_cam_bar() {\r\n    this.ele_cam_bar.style.display = \"none\";\r\n    this.ele_cam_bar.className = `${Button.default_class_name} ${styles.camera_ctrl}`;\r\n\r\n    this.ctx_cam_bar = this.ele_cam_bar.getContext(\"2d\");\r\n    this.ele_cam_bar.addEventListener(\"pointerdown\", this._pointer_down);\r\n    window.addEventListener(\"pointermove\", this._pointer_move);\r\n    window.addEventListener(\"pointerup\", this._pointer_up);\r\n    window.addEventListener(\"pointercancel\", this._pointer_up);\r\n  }\r\n\r\n  cam_bar_handle_padding = 2.5;\r\n  handle_cam_ctrl_pointer_event(e: PointerEvent) {\r\n    if (!this.ctx_cam_bar) return;\r\n    const { left, width } = this.ele_cam_bar.getBoundingClientRect();\r\n    const s_width = this.world.stage.width;\r\n    const w = Math.floor((width * Defines.CLASSIC_SCREEN_WIDTH) / s_width);\r\n    const x = Math.min(\r\n      width - w - 3,\r\n      Math.max(0, Math.floor(e.pageX - left - w / 2)),\r\n    );\r\n    this.world.lock_cam_x = (s_width * x) / width;\r\n  }\r\n\r\n  draw_cam_bar(x: number) {\r\n    if (!this.ctx_cam_bar) return;\r\n    const background_w = this.world.stage.width;\r\n    const screen_w = Defines.CLASSIC_SCREEN_WIDTH;\r\n    const { width: bar_width, height } = this.ele_cam_bar;\r\n    const { player_l: player_left, player_r: player_right } = this.world.stage;\r\n    const x_l = Math.floor((bar_width * player_left) / background_w);\r\n    const x_r = Math.floor((bar_width * player_right) / background_w);\r\n    const hh = this.cam_bar_handle_padding;\r\n    const w = Math.floor((bar_width * screen_w) / background_w) - hh;\r\n    const h = height - hh * 2;\r\n    this.ctx_cam_bar.fillStyle = this.ctx_cam_bar.strokeStyle = \"#FF000055\";\r\n    this.ctx_cam_bar.fillRect(0, 0, x_l, height);\r\n    this.ctx_cam_bar.fillRect(x_r, 0, bar_width - x_r, height);\r\n    this.ctx_cam_bar.lineWidth = 1;\r\n    this.ctx_cam_bar.strokeStyle = \"#FFFFFF55\";\r\n    this.ctx_cam_bar.strokeRect(x + hh, hh, w, h);\r\n    if (this.cam_locked) {\r\n      this.ctx_cam_bar.fillStyle = \"#FFFFFF88\";\r\n      this.ctx_cam_bar.fillRect(x + hh, hh, w, h);\r\n    }\r\n  }\r\n\r\n  set FPS(v: number) {\r\n    this.ele_fps.innerText = \"FPS:\" + v.toFixed(0);\r\n  }\r\n\r\n  set UPS(v: number) {\r\n    this.ele_ups.innerText = \"UPS:\" + v.toFixed(0);\r\n  }\r\n\r\n  set SPS(v: number) {\r\n    this.ele_sps.innerText = \"SPS:\" + v.toFixed(0);\r\n  }\r\n  private ele_loading_tid: number = 0;\r\n  set loading(v: string) {\r\n    this.ele_loading.innerText = v;\r\n    this.ele_loading.style.transition = ''\r\n    this.ele_loading.style.opacity = '1'\r\n    window.clearTimeout(this.ele_loading_tid)\r\n    this.ele_loading_tid = window.setTimeout(() => {\r\n      this.ele_loading.style.transition = 'opacity 500ms'\r\n      this.ele_loading.style.opacity = '0'\r\n    }, 1000)\r\n  }\r\n\r\n  private update_timer: ReturnType<typeof setInterval> | undefined;\r\n\r\n  update_camera = () => {\r\n    this.world.update_camera();\r\n    this.world.stage.bg.update();\r\n  };\r\n\r\n  private _l_listener: Partial<ILf2Callback> = {\r\n    on_loading_content: (content, progress) =>\r\n      (this.loading = `${content}, ${progress}%`),\r\n  };\r\n  private _w_listener: Partial<IWorldCallbacks> = {\r\n    on_ups_update: (ups, sps) => {\r\n      this.UPS = ups;\r\n      this.SPS = sps;\r\n    },\r\n    on_fps_update: (fps) => (this.FPS = fps),\r\n    on_pause_change: (pause) => {\r\n      if (pause) {\r\n        this.update_timer = setInterval(this.update_camera, 1000 / 60);\r\n      } else {\r\n        clearInterval(this.update_timer);\r\n      }\r\n    },\r\n    on_stage_change: (stage) => {\r\n      if (stage.bg.id === Defines.VOID_BG.id) {\r\n        this.ele_cam_bar.style.display = this.ele_btn_free_cam.style.display =\r\n          \"none\";\r\n      } else {\r\n        this.ele_cam_bar.style.display = this.ele_btn_free_cam.style.display =\r\n          \"unset\";\r\n      }\r\n      this._w_listener.on_cam_move?.(this.world.renderer.cam_x);\r\n    },\r\n    on_cam_move: (cam_x) => {\r\n      const { width, height } = this.ele_cam_bar.getBoundingClientRect();\r\n      this.ele_cam_bar.width = width;\r\n      this.ele_cam_bar.height = height;\r\n      const s_width = this.world.stage.width;\r\n      const x = (cam_x * width) / s_width;\r\n      this.draw_cam_bar(x);\r\n    },\r\n    on_disposed: () => {\r\n      clearInterval(this.update_timer);\r\n      this.update_timer = void 0;\r\n      this.world.lf2.callbacks.del(this._l_listener);\r\n      this.world.callbacks.del(this._w_listener);\r\n    },\r\n  };\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pad_text\":\"GamePad_pad_text__K6c0S\",\"left_pad\":\"GamePad_left_pad__rGtks\",\"right_pad\":\"GamePad_right_pad__eEjYt\",\"btn_up\":\"GamePad_btn_up__mzNng\",\"btn_down\":\"GamePad_btn_down__LG9oY\",\"btn_right\":\"GamePad_btn_right__fQxRX\",\"btn_left\":\"GamePad_btn_left__b708P\",\"btn_attack\":\"GamePad_btn_attack__ZSUAy\",\"btn_jump\":\"GamePad_btn_jump__V+PYI\",\"btn_defense\":\"GamePad_btn_defense__u8+n-\"};","import { IUIEvent } from \"./UIEvent\";\r\n\r\nexport class LF2UIEvent implements IUIEvent {\r\n  protected _stopped: number = 0;\r\n  get stopped(): number { return this._stopped; }\r\n  stop_propagation(): void {\r\n    this._stopped = 1;\r\n  }\r\n  stop_immediate_propagation(): void {\r\n    this._stopped = 2;\r\n  }\r\n}\r\n","import { LGK } from \"../defines\";\r\nimport { IUIKeyEvent } from \"./IUIKeyEvent\";\r\nimport { LF2UIEvent } from \"./LF2UIEvent\";\r\n\r\nexport class LF2UIKeyEvent extends LF2UIEvent implements IUIKeyEvent {\r\n  protected _player: string;\r\n  protected _key: LGK;\r\n  protected _key_code: string;\r\n  get player(): string { return this._player; }\r\n  get game_key(): LGK { return this._key; }\r\n  get key(): string { return this._key_code; }\r\n  constructor(player: string, key: LGK, key_code: string = key) {\r\n    super();\r\n    this._player = player;\r\n    this._key = key;\r\n    this._key_code = key_code;\r\n  }\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { IToggleImgProps, ToggleImgButton } from \"./Component/Buttons/ToggleImgButton\";\r\nimport styles from \"./GamePad.module.scss\";\r\nimport { LF2 } from \"./LF2/LF2\";\r\nimport { BaseController } from \"./LF2/controller/BaseController\";\r\nimport { GameKey } from \"./LF2/defines/GameKey\";\r\nimport img_touch_btn_arrow from \"./assets/touch_btn_arrow.png\";\r\nimport img_touch_btn_a from \"./assets/touch_btn_a.png\";\r\nimport img_touch_btn_j from \"./assets/touch_btn_j.png\";\r\nimport img_touch_btn_d from \"./assets/touch_btn_d.png\";\r\nimport { LF2UIKeyEvent } from \"./LF2/ui/LF2UIKeyEvent\";\r\nexport interface IGamePadProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  lf2?: LF2;\r\n  player_id?: string;\r\n}\r\ntype TRect = { l: number; r: number; t: number; b: number };\r\ntype TCirc = { x: number; y: number; r: number };\r\nconst get_rect = (ele: React.RefObject<HTMLButtonElement | null>): TRect => {\r\n  if (!ele.current) return { l: 0, t: 0, r: 0, b: 0 };\r\n  const { x, y, width, height } = ele.current.getBoundingClientRect();\r\n  return { l: x, t: y, r: x + width, b: y + height };\r\n};\r\nconst get_circ = (ele: React.RefObject<HTMLButtonElement | null>): TCirc => {\r\n  if (!ele.current) return { x: 0, y: 0, r: 0 };\r\n  const { x, y, width, height } = ele.current.getBoundingClientRect();\r\n  return { x: x + width / 2, y: y + height / 2, r: width / 2 };\r\n};\r\nfunction copy_touch(touch: Touch) {\r\n  return {\r\n    id: touch.identifier,\r\n    x: touch.pageX,\r\n    y: touch.pageY,\r\n    r: Math.max(touch.radiusX, touch.radiusY, 20),\r\n    end: false,\r\n  };\r\n}\r\nexport default function GamePad(props: IGamePadProps) {\r\n  const { player_id, lf2, ..._p } = props;\r\n  const [controller, set_controller] = useState<BaseController | undefined>(\r\n    void 0,\r\n  );\r\n  const ref_btn_U = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_D = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_L = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_R = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_a = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_j = useRef<HTMLButtonElement | null>(null);\r\n  const ref_btn_d = useRef<HTMLButtonElement | null>(null);\r\n  const ref_left_pad = useRef<HTMLDivElement>(null);\r\n  const ref_right_pad = useRef<HTMLDivElement>(null);\r\n  const ref_pad_text = useRef<HTMLDivElement>(null);\r\n  const [refresh_tag, set_refresh_tag] = useState(0);\r\n  useEffect(() => {\r\n    if (!lf2 || !player_id) return;\r\n    return lf2.world.callbacks.add({\r\n      on_player_character_add(add_player_id) {\r\n        if (add_player_id !== player_id) return;\r\n        set_controller(lf2.player_characters.get(player_id)?.ctrl);\r\n      },\r\n      on_player_character_del(del_player_id) {\r\n        if (del_player_id !== player_id) return;\r\n        set_controller(void 0);\r\n      },\r\n    });\r\n  }, [lf2, player_id]);\r\n\r\n  const left_pad = ref_left_pad.current;\r\n  const right_pad = ref_right_pad.current;\r\n\r\n  useEffect(() => {\r\n    if (!left_pad || !right_pad) return;\r\n    const on_resize = () => {\r\n      {\r\n        const btns = [\r\n          ref_btn_U.current,\r\n          ref_btn_D.current,\r\n          ref_btn_L.current,\r\n          ref_btn_R.current,\r\n        ];\r\n        let l: number = Infinity,\r\n          r: number = 0,\r\n          b: number = 0,\r\n          t: number = Infinity;\r\n        for (const { x, y, width, height } of btns.map(\r\n          (v) =>\r\n            v?.getBoundingClientRect() || { x: 0, y: 0, width: 0, height: 0 },\r\n        )) {\r\n          l = Math.min(l, x);\r\n          t = Math.min(t, y);\r\n          r = Math.max(r, x + width);\r\n          b = Math.max(b, y + height);\r\n        }\r\n        left_pad.style.left = l + \"px\";\r\n        left_pad.style.width = r - l + \"px\";\r\n        left_pad.style.top = t + \"px\";\r\n        left_pad.style.height = b - t + \"px\";\r\n      }\r\n      {\r\n        const btns = [ref_btn_a.current, ref_btn_j.current, ref_btn_d.current];\r\n        let l: number = Infinity,\r\n          r: number = 0,\r\n          b: number = 0,\r\n          t: number = Infinity;\r\n        for (const { x, y, width, height } of btns.map(\r\n          (v) =>\r\n            v?.getBoundingClientRect() || { x: 0, y: 0, width: 0, height: 0 },\r\n        )) {\r\n          l = Math.min(l, x);\r\n          t = Math.min(t, y);\r\n          r = Math.max(r, x + width);\r\n          b = Math.max(b, y + height);\r\n        }\r\n        right_pad.style.left = l + \"px\";\r\n        right_pad.style.width = r - l + \"px\";\r\n        right_pad.style.top = t + \"px\";\r\n        right_pad.style.height = b - t + \"px\";\r\n      }\r\n      set_refresh_tag((v) => v + 1);\r\n    };\r\n    on_resize();\r\n    window.addEventListener(\"resize\", on_resize);\r\n    return () => window.removeEventListener(\"contextmenu\", on_resize);\r\n  }, [left_pad, right_pad]);\r\n\r\n  useEffect(() => {\r\n    if (!player_id || !lf2 || !left_pad) return;\r\n    const pad = left_pad;\r\n    const btn_infos = [\r\n      { key: GameKey.U, rect: get_rect(ref_btn_U), circ: get_circ(ref_btn_U) },\r\n      { key: GameKey.D, rect: get_rect(ref_btn_D), circ: get_circ(ref_btn_D) },\r\n      { key: GameKey.L, rect: get_rect(ref_btn_L), circ: get_circ(ref_btn_L) },\r\n      { key: GameKey.R, rect: get_rect(ref_btn_R), circ: get_circ(ref_btn_R) },\r\n    ];\r\n    const prev_pressings = new Map([\r\n      [GameKey.L, false],\r\n      [GameKey.R, false],\r\n      [GameKey.U, false],\r\n      [GameKey.D, false],\r\n    ]);\r\n    const touches: ReturnType<typeof copy_touch>[] = [];\r\n    const find_touch_index = (touch_id: number) => {\r\n      return touches.findIndex((v) => v.id === touch_id);\r\n    };\r\n    const pad_text = ref_pad_text.current;\r\n    if (!pad_text) return;\r\n    const handle_touchs = () => {\r\n      const curr_pressings = new Map([\r\n        [GameKey.L, false],\r\n        [GameKey.R, false],\r\n        [GameKey.U, false],\r\n        [GameKey.D, false],\r\n      ]);\r\n      for (const t of touches) {\r\n        for (const { circ, key: k } of btn_infos) {\r\n          curr_pressings.set(\r\n            k,\r\n            Math.pow(circ.x - t.x, 2) + Math.pow(circ.y - t.y, 2) <\r\n            Math.pow(t.r + circ.r, 2),\r\n          );\r\n        }\r\n      }\r\n      for (const [k, v] of curr_pressings) {\r\n        if (v === prev_pressings.get(k)) continue;\r\n        if (v) {\r\n          lf2?.ui?.on_key_down(new LF2UIKeyEvent(player_id, k));\r\n          controller?.start(k);\r\n          if (pad_text.innerText.length > 10)\r\n            pad_text.innerText = pad_text.innerText.substring(2);\r\n          pad_text.innerText += k + \"⬇\";\r\n        } else {\r\n          lf2?.ui?.on_key_up(new LF2UIKeyEvent(player_id, k));\r\n          controller?.end(k);\r\n          if (pad_text.innerText.length > 10)\r\n            pad_text.innerText = pad_text.innerText.substring(2);\r\n          pad_text.innerText += k + \"⬆\";\r\n        }\r\n        prev_pressings.set(k, v);\r\n      }\r\n    };\r\n    const on_touch_start = (e: TouchEvent) => {\r\n      e.preventDefault();\r\n      for (const t of e.changedTouches) touches.push(copy_touch(t));\r\n      handle_touchs();\r\n    };\r\n    const on_touch_move = (e: TouchEvent) => {\r\n      e.preventDefault();\r\n      for (const t of e.changedTouches) {\r\n        const idx = find_touch_index(t.identifier);\r\n        if (idx >= 0) touches.splice(idx, 1, copy_touch(t));\r\n      }\r\n      handle_touchs();\r\n    };\r\n    const on_touch_end = (e: TouchEvent) => {\r\n      for (const t of e.changedTouches) {\r\n        const idx = find_touch_index(t.identifier);\r\n        if (idx >= 0) touches.splice(idx, 1);\r\n      }\r\n      handle_touchs();\r\n    };\r\n    pad.addEventListener(\"touchstart\", on_touch_start, { passive: false });\r\n    pad.addEventListener(\"touchmove\", on_touch_move, { passive: false });\r\n    pad.addEventListener(\"touchend\", on_touch_end, { passive: false });\r\n    pad.addEventListener(\"touchcancel\", on_touch_end, { passive: false });\r\n\r\n    return () => {\r\n      pad.removeEventListener(\"touchstart\", on_touch_start);\r\n      pad.removeEventListener(\"touchmove\", on_touch_move);\r\n      pad.removeEventListener(\"touchend\", on_touch_end);\r\n      pad.removeEventListener(\"touchcancel\", on_touch_end);\r\n    };\r\n  }, [controller, lf2, player_id, refresh_tag, left_pad]);\r\n\r\n  useEffect(() => {\r\n    if (!player_id || !lf2 || !right_pad) return;\r\n\r\n    const pad = right_pad;\r\n    const btn_infos = [\r\n      { key: GameKey.a, rect: get_rect(ref_btn_a), circ: get_circ(ref_btn_a) },\r\n      { key: GameKey.j, rect: get_rect(ref_btn_j), circ: get_circ(ref_btn_j) },\r\n      { key: GameKey.d, rect: get_rect(ref_btn_d), circ: get_circ(ref_btn_d) },\r\n    ];\r\n    const prev_pressings = new Map([\r\n      [GameKey.a, false],\r\n      [GameKey.j, false],\r\n      [GameKey.d, false],\r\n    ]);\r\n    const touches: ReturnType<typeof copy_touch>[] = [];\r\n    const find_touch_index = (touch_id: number) => {\r\n      return touches.findIndex((v) => v.id === touch_id);\r\n    };\r\n    const pad_text = ref_pad_text.current;\r\n    if (!pad_text) return;\r\n    const handle_touchs = () => {\r\n      const curr_pressings = new Map([\r\n        [GameKey.a, false],\r\n        [GameKey.j, false],\r\n        [GameKey.d, false],\r\n      ]);\r\n      for (const t of touches) {\r\n        for (const { circ, key: k } of btn_infos) {\r\n          curr_pressings.set(\r\n            k,\r\n            Math.pow(circ.x - t.x, 2) + Math.pow(circ.y - t.y, 2) <\r\n            Math.pow(t.r + circ.r, 2),\r\n          );\r\n        }\r\n      }\r\n      for (const [k, v] of curr_pressings) {\r\n        if (v === prev_pressings.get(k)) continue;\r\n        if (v) {\r\n          lf2?.ui?.on_key_down(new LF2UIKeyEvent(player_id, k));\r\n          controller?.start(k);\r\n          if (pad_text.innerText.length > 10)\r\n            pad_text.innerText = pad_text.innerText.substring(2);\r\n          pad_text.innerText += k + \"⬇\";\r\n        } else {\r\n          lf2?.ui?.on_key_up(new LF2UIKeyEvent(player_id, k));\r\n          controller?.end(k);\r\n          if (pad_text.innerText.length > 10)\r\n            pad_text.innerText = pad_text.innerText.substring(2);\r\n          pad_text.innerText += k + \"⬆\";\r\n        }\r\n        prev_pressings.set(k, v);\r\n      }\r\n    };\r\n    const on_touch_start = (e: TouchEvent) => {\r\n      e.preventDefault();\r\n      for (const t of e.changedTouches) touches.push(copy_touch(t));\r\n      handle_touchs();\r\n    };\r\n    const on_touch_move = (e: TouchEvent) => {\r\n      e.preventDefault();\r\n      for (const t of e.changedTouches) {\r\n        const idx = find_touch_index(t.identifier);\r\n        if (idx >= 0) touches.splice(idx, 1, copy_touch(t));\r\n      }\r\n      handle_touchs();\r\n    };\r\n    const on_touch_end = (e: TouchEvent) => {\r\n      for (const t of e.changedTouches) {\r\n        const idx = find_touch_index(t.identifier);\r\n        if (idx >= 0) touches.splice(idx, 1);\r\n      }\r\n      handle_touchs();\r\n    };\r\n    pad.addEventListener(\"touchstart\", on_touch_start, { passive: false });\r\n    pad.addEventListener(\"touchmove\", on_touch_move, { passive: false });\r\n    pad.addEventListener(\"touchend\", on_touch_end, { passive: false });\r\n    pad.addEventListener(\"touchcancel\", on_touch_end, { passive: false });\r\n\r\n    return () => {\r\n      pad.removeEventListener(\"touchstart\", on_touch_start);\r\n      pad.removeEventListener(\"touchmove\", on_touch_move);\r\n      pad.removeEventListener(\"touchend\", on_touch_end);\r\n      pad.removeEventListener(\"touchcancel\", on_touch_end);\r\n    };\r\n  }, [controller, lf2, player_id, refresh_tag, right_pad]);\r\n  if (!player_id) return <></>;\r\n  const touch_props = (key: GameKey): IToggleImgProps => {\r\n    return {\r\n      style: { pointerEvents: \"none\" },\r\n      disabled: true,\r\n    };\r\n  };\r\n  return (\r\n    <div {..._p}>\r\n      <div className={styles.pad_text} ref={ref_pad_text} />\r\n      <div className={styles.left_pad} ref={ref_left_pad}>\r\n        <ToggleImgButton\r\n          className={styles.btn_up}\r\n          ref={ref_btn_U}\r\n          {...touch_props(GameKey.U)}\r\n          src={[img_touch_btn_arrow]}\r\n          alt=\"up\"\r\n          draggable={false}\r\n        />\r\n        <ToggleImgButton\r\n          className={styles.btn_down}\r\n          ref={ref_btn_D}\r\n          {...touch_props(GameKey.D)}\r\n          src={[img_touch_btn_arrow]}\r\n          alt=\"down\"\r\n          draggable={false}\r\n        />\r\n        <ToggleImgButton\r\n          className={styles.btn_left}\r\n          ref={ref_btn_L}\r\n          {...touch_props(GameKey.L)}\r\n          src={[img_touch_btn_arrow]}\r\n          alt=\"left\"\r\n          draggable={false}\r\n        />\r\n        <ToggleImgButton\r\n          className={styles.btn_right}\r\n          ref={ref_btn_R}\r\n          {...touch_props(GameKey.R)}\r\n          src={[img_touch_btn_arrow]}\r\n          alt=\"right\"\r\n          draggable={false}\r\n        />\r\n      </div>\r\n      <div className={styles.right_pad} ref={ref_right_pad}>\r\n        <ToggleImgButton\r\n          className={styles.btn_attack}\r\n          ref={ref_btn_a}\r\n          {...touch_props(GameKey.a)}\r\n          src={[img_touch_btn_a]}\r\n          alt=\"attack\"\r\n          draggable={false}\r\n        />\r\n        <ToggleImgButton\r\n          className={styles.btn_jump}\r\n          ref={ref_btn_j}\r\n          {...touch_props(GameKey.j)}\r\n          src={[img_touch_btn_j]}\r\n          alt=\"jump\"\r\n          draggable={false}\r\n        />\r\n        <ToggleImgButton\r\n          className={styles.btn_defense}\r\n          ref={ref_btn_d}\r\n          {...touch_props(GameKey.d)}\r\n          src={[img_touch_btn_d]}\r\n          alt=\"defense\"\r\n          draggable={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { FrameBehavior, GK, IFrameInfo, IVector3 } from \"../defines\";\r\nimport { BaseController } from \"./BaseController\";\r\nimport { ControllerUpdateResult } from \"./ControllerUpdateResult\";\r\nconst { L, R, U, D, j, d } = GK\r\nexport class BallController extends BaseController {\r\n  readonly __is_ball_ctrl__ = true;\r\n  public target_position: IVector3 | null = null\r\n  override update(): ControllerUpdateResult {\r\n    if (this.entity.chasing) {\r\n      this.target_position = this.entity.chasing.position.clone();\r\n      this.target_position.y += this.entity.chasing.frame.centery / 2\r\n    }\r\n    const { facing, hp, frame } = this.entity\r\n    \r\n    if (this.target_position) {\r\n      if (hp > 0) {\r\n      const p1 = this.entity.position;\r\n        const p2 = this.target_position;\r\n        const vx = this.entity.velocity.x;\r\n        this.entity.merge_velocities();\r\n        if (p2.x < p1.x) this.press(L).release(R)\r\n        else if (p2.x > p1.x) this.press(R).release(L)\r\n        else this.release(L, R)\r\n\r\n        if (p2.z < p1.z) this.press(U).release(D)\r\n        else if (p2.z > p1.z) this.press(D).release(U)\r\n        else this.release(U, D)\r\n\r\n        if (p1.y > p2.y) this.press(d).release(j)\r\n        else if (p1.y < p2.y) this.press(j).release(d)\r\n        else this.release(j, d)\r\n\r\n        if (vx > 0 && facing < 0) this.entity.facing = 1\r\n        else if (vx < 0 && facing > 0) this.entity.facing = -1\r\n\r\n      } else this.target_lost(frame, facing);\r\n    } else this.target_lost(frame, facing);\r\n    return super.update();\r\n  }\r\n\r\n  private target_lost(frame: IFrameInfo, facing: number) {\r\n    if (frame.behavior === FrameBehavior.JohnBiscuitLeaving) {\r\n      const p1 = this.entity.position;\r\n      this.press(facing === -1 ? L : R);\r\n      this.release(facing === -1 ? R : L, U, D);\r\n      if (p1.y > 40) this.press(d).release(j);\r\n      else if (p1.y < 40) this.press(j).release(d);\r\n      else this.release(j, d);\r\n    } else {\r\n      const p1 = this.entity.position;\r\n      this.press(facing === -1 ? L : R);\r\n      this.release(facing === -1 ? R : L, U, D);\r\n      if (p1.y > 40) this.press(d).release(j);\r\n      else if (p1.y < 40) this.press(j).release(d);\r\n      else this.release(j, d);\r\n    }\r\n  }\r\n}","export enum CtrlDevice {\n  Keyboard = 0,\n  Gamepad_1 = 1,\n  Gamepad_2 = 2,\n  Gamepad_3 = 3,\n  Gamepad_4 = 4\n}\n","import { GameKey as GK } from \"../defines/GameKey\";\r\nimport { IKeyboardCallback } from \"../ditto/keyboard/IKeyboardCallback\";\r\nimport { IKeyEvent } from \"../ditto/keyboard/IKeyEvent\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { PlayerInfo } from \"../PlayerInfo\";\r\nimport { abs } from \"../utils\";\r\nimport { BaseController } from \"./BaseController\";\r\nimport { ControllerUpdateResult } from \"./ControllerUpdateResult\";\r\nimport { CtrlDevice } from \"./CtrlDevice\";\r\n\r\ntype TKeyCodeMap = { [x in GK]?: string };\r\ntype TCodeKeyMap = { [x in string]?: GK };\r\nexport class LocalController\r\n  extends BaseController\r\n  implements IKeyboardCallback {\r\n  readonly __is_local_ctrl__ = true;\r\n  readonly player: PlayerInfo;\r\n\r\n  private _key_code_map: TKeyCodeMap = {};\r\n  private _code_key_map: TCodeKeyMap = {};\r\n  private _ax_using: number = 0;\r\n  private _ay_using: number = 0;\r\n  on_key_up(e: IKeyEvent) {\r\n    const code = e.key?.toLowerCase();\r\n    if (!code) return;\r\n    const key = this._code_key_map[code];\r\n    if (!key) return;\r\n    this.end(key);\r\n  }\r\n\r\n  on_key_down(e: IKeyEvent) {\r\n    const code = e.key?.toLowerCase();\r\n    if (!code) return;\r\n    const key = this._code_key_map[code];\r\n    if (!key) return;\r\n    this.start(key);\r\n  }\r\n\r\n  constructor(player_id: string, entity: Entity, kc?: TKeyCodeMap) {\r\n    super(player_id, entity);\r\n    this.player = this.lf2.ensure_player(player_id)\r\n    if (kc) this.set_key_code_map(kc);\r\n    this.disposer = entity.world.lf2.keyboard.callback.add(this);\r\n  }\r\n\r\n  set_key_code_map(key_code_map: TKeyCodeMap) {\r\n    this._key_code_map = {};\r\n    this._code_key_map = {};\r\n    for (const key of Object.keys(key_code_map) as GK[]) {\r\n      const code = key_code_map[key]?.toLowerCase();\r\n      if (!code) continue;\r\n      this._key_code_map[key] = code;\r\n      this._code_key_map[code] = key;\r\n    }\r\n  }\r\n\r\n  override update(): ControllerUpdateResult {\r\n    if (this.player && this.player.ctrl !== CtrlDevice.Keyboard) {\r\n      const [ax = 0, ay = 0] = this.lf2.keyboard.axes(this.player.ctrl - 1)\r\n\r\n      if (ax > 0.22) {\r\n        this._ax_using = 1\r\n        this.is_end(GK.R) && this.start(GK.R)\r\n        this.is_end(GK.L) || this.end(GK.L)\r\n      } else if (ax < -0.22) {\r\n        this._ax_using = 1\r\n        this.is_end(GK.L) && this.start(GK.L)\r\n        this.is_end(GK.R) || this.end(GK.R)\r\n      } else if (abs(ax) < 0.12 && this._ax_using) {\r\n        this._ax_using = 0\r\n        this.is_end(GK.L) || this.end(GK.L)\r\n        this.is_end(GK.R) || this.end(GK.R)\r\n      }\r\n      if (ay > 0.22) {\r\n        this._ay_using = 1\r\n        this.is_end(GK.D) && this.start(GK.D)\r\n        this.is_end(GK.U) || this.end(GK.U)\r\n      } else if (ay < -0.22) {\r\n        this._ay_using = 1\r\n        this.is_end(GK.U) && this.start(GK.U)\r\n        this.is_end(GK.D) || this.end(GK.D)\r\n      } else if (abs(ay) < 0.12 && this._ay_using) {\r\n        this._ay_using = 0\r\n        this.is_end(GK.U) || this.end(GK.U)\r\n        this.is_end(GK.D) || this.end(GK.D)\r\n      }\r\n    }\r\n    return super.update()\r\n  }\r\n}\r\nexport default LocalController;\r\n","\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { is_ball } from \"../entity/type_check\";\r\nimport { LF2 } from \"../LF2\";\r\n\r\nexport class BallsHelper {\r\n  readonly lf2: LF2;\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n  }\r\n  /**\r\n   * 列出场地上类型为Ball的实体\r\n   *\r\n   * @return {Entity[]}\r\n   * @memberof BallsHelper\r\n   */\r\n  list(): Entity[] {\r\n    const ret: Entity[] = [];\r\n    this.lf2.world.entities.forEach((v) => is_ball(v) && ret.push(v));\r\n    return ret;\r\n  }\r\n  \r\n  at(idx: number): Entity | undefined {\r\n    return this.list()[idx];\r\n  }\r\n}\r\n","\r\nimport { EntityGroup, IEntityData } from \"../defines\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { is_character } from \"../entity/type_check\";\r\nimport { LF2 } from \"../LF2\";\r\n\r\nexport class CharactersHelper {\r\n  readonly lf2: LF2;\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n  }\r\n  list(): Entity[] {\r\n    const ret: Entity[] = [];\r\n    this.lf2.world.entities.forEach((v) => is_character(v) && ret.push(v));\r\n    return ret;\r\n  }\r\n  at(idx: number): Entity | undefined {\r\n    return this.list()[idx];\r\n  }\r\n  add(\r\n    data: IEntityData | string | undefined,\r\n    num: number,\r\n    team?: string,\r\n  ): Entity[] {\r\n    if (typeof data === \"string\") data = this.lf2.datas.find_character(data);\r\n    if (!data) return [];\r\n    return this.lf2.entities.add(data, num, team);\r\n  }\r\n  add_random(num = 1, team?: string, filter?: (e: IEntityData) => boolean): Entity[] {\r\n    const ret: Entity[] = [];\r\n    while (--num >= 0) {\r\n      const d = this.lf2.random_get(\r\n        this.lf2.datas.characters.filter(v => {\r\n          return filter ? filter(v) : true\r\n        })\r\n      );\r\n      if (!d) continue;\r\n      ret.push(...this.add(d, 1, team));\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n","import { new_team } from \"../base\";\r\nimport { IEntityData } from \"../defines\";\r\nimport { TeamEnum } from \"../defines/TeamEnum\";\r\nimport { Factory } from \"../entity\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { LF2 } from \"../LF2\";\r\nimport { is_non_empty_str } from \"../utils\";\r\nimport { Randoming } from \"./Randoming\";\r\n\r\nexport class EntitiesHelper {\r\n  readonly lf2: LF2;\r\n  readonly team_randoming: Randoming<TeamEnum>;\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n    this.team_randoming = new Randoming([\r\n      TeamEnum.Team_1,\r\n      TeamEnum.Team_2,\r\n      TeamEnum.Team_3,\r\n      TeamEnum.Team_4,\r\n      // TeamEnum.Independent,\r\n    ], this.lf2)\r\n  }\r\n  list(): Entity[] {\r\n    const ret: Entity[] = [];\r\n    this.lf2.world.entities.forEach((v) => ret.push(v));\r\n    return ret;\r\n  }\r\n  at(idx: number): Entity | undefined {\r\n    return this.list()[idx];\r\n  }\r\n\r\n  add(data: IEntityData, num: number = 1, team?: string): Entity[] {\r\n    const creator = Factory.inst.get_entity_creator(data.type);\r\n    if (!creator) return [];\r\n    const ret: Entity[] = [];\r\n    while (--num >= 0) {\r\n      const entity = creator(this.lf2.world, data);\r\n      entity.ctrl = Factory.inst.get_ctrl(entity.data.id, \"\", entity)\r\n      entity.team = team === '?' ? this.team_randoming.take() : (team || new_team())\r\n      this.lf2.random_entity_info(entity).attach();\r\n      ret.push(entity);\r\n    }\r\n    return ret;\r\n  }\r\n  del_all() {\r\n    this.lf2.world.del_entities(Array.from(this.lf2.world.entities));\r\n  }\r\n}\r\n","import { EntityGroup } from \"../defines\";\r\nimport { IEntityData } from \"../defines/IEntityData\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { is_weapon } from \"../entity/type_check\";\r\nimport { LF2 } from \"../LF2\";\r\nimport { Randoming } from \"./Randoming\";\r\n\r\nexport class WeaponsHelper {\r\n  readonly lf2: LF2;\r\n  readonly random_map = new Map<string, Randoming<IEntityData>>()\r\n  readonly random_d_map = new Map<string, Randoming<IEntityData>>()\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n  }\r\n  list(): Entity[] {\r\n    const ret: Entity[] = [];\r\n    this.lf2.world.entities.forEach((v) => is_weapon(v) && ret.push(v));\r\n    return ret;\r\n  }\r\n  at(idx: number): Entity | undefined {\r\n    return this.list()[idx];\r\n  }\r\n  add(\r\n    data?: IEntityData | string,\r\n    num: number = 1,\r\n    team?: string,\r\n  ): Entity[] {\r\n    if (typeof data === \"string\") data = this.lf2.datas.find_weapon(data);\r\n    if (!data) return [];\r\n    return this.lf2.entities.add(data, num, team);\r\n  }\r\n  randoms(group: string, duplicate: boolean) {\r\n    const map = duplicate ? this.random_d_map : this.random_map\r\n    let ret = map.get(group);\r\n    if (!ret) {\r\n      let list = this.lf2.datas.weapons;\r\n      if (group) list = list.filter(v => v.base.group?.some(g => g === group))\r\n      if (!list.length) return void 0;\r\n      ret = new Randoming(list, this.lf2, duplicate)\r\n      map.set(group, ret)\r\n    }\r\n    return ret;\r\n  }\r\n  add_random(num = 1, duplicate = false, group: string = ''): Entity[] {\r\n    const randoms = this.randoms(group, duplicate)\r\n\r\n    const ret: Entity[] = [];\r\n    if (!randoms) return ret;\r\n\r\n    while (--num >= 0) {\r\n      const d = randoms.take();\r\n      if (!d) continue;\r\n      ret.push(...this.add(d, 1));\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n","import { Entity } from \"../entity\";\nimport { abs } from \"../utils\";\n/**\n * 获取两实体在XZ平面上的曼哈顿距离\n *\n * @export\n * @param {Entity} a 实体A\n * @param {Entity} b 实体B\n * @return {number} XZ平面上的曼哈顿距离\n */\nexport function manhattan_xz(a: Entity, b: Entity): number {\n  return abs(a.position.x - b.position.x) + abs(a.position.z - b.position.z);\n}\n\n","import { GK, StateEnum } from \"../defines\";\r\nimport { BotController } from \"./BotController\";\r\nexport enum DummyEnum {\r\n  LockAtMid_Stand = \"1\",\r\n  LockAtMid_Defend = \"2\",\r\n  LockAtMid_RowingWhenFalling = \"3\",\r\n  LockAtMid_JumpAndRowingWhenFalling = \"4\",\r\n  AvoidEnemyAllTheTime = \"5\",\r\n  LockAtMid_dUa = \"6\",\r\n  LockAtMid_dUj = \"7\",\r\n  LockAtMid_dDa = \"8\",\r\n  LockAtMid_dDj = \"9\",\r\n  LockAtMid_dLa = \"10\",\r\n  LockAtMid_dLj = \"11\",\r\n  LockAtMid_dRa = \"12\",\r\n  LockAtMid_dRj = \"13\",\r\n  LockAtMid_dja = \"14\",\r\n  LockAtMid_dUa_auto = \"15\",\r\n  LockAtMid_dUj_auto = \"16\",\r\n  LockAtMid_dDa_auto = \"17\",\r\n  LockAtMid_dDj_auto = \"18\",\r\n  LockAtMid_dLa_auto = \"18\",\r\n  LockAtMid_dLj_auto = \"19\",\r\n  LockAtMid_dRa_auto = \"20\",\r\n  LockAtMid_dRj_auto = \"21\",\r\n  LockAtMid_dja_auto = \"22\"\r\n}\r\nexport const dummy_updaters: Record<DummyEnum, IDummyUpdater | undefined> = {\r\n  [DummyEnum.LockAtMid_Stand]: {\r\n    update: (self) => {\r\n      self.lock_when_stand_and_rest();\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_Defend]: {\r\n    update: (self) => {\r\n      const keys = [GK.d]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys);\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_RowingWhenFalling]: {\r\n    update: (self) => {\r\n      self.lock_when_stand_and_rest();\r\n      if (self.entity.frame.state === StateEnum.Falling) {\r\n        self.key_down(GK.j).key_up(GK.j);\r\n      }\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_JumpAndRowingWhenFalling]: {\r\n    update: (self) => {\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h || self.entity.frame.state === StateEnum.Falling) {\r\n        self.key_down(GK.j).key_up(GK.j);\r\n      } else {\r\n        self.end(GK.j);\r\n      }\r\n    }\r\n  },\r\n  [DummyEnum.AvoidEnemyAllTheTime]: {\r\n    update: (self) => {\r\n      // self.avoid_enemy();\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dUa]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.U, GK.a]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dUj]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.U, GK.j]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dDa]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.D, GK.a]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dDj]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.D, GK.j]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dLa]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.L, GK.a]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dLj]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.L, GK.j]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dRa]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.R, GK.a]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dRj]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.L, GK.j]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dja]: {\r\n    update: (self) => {\r\n      const keys = [GK.d, GK.j, GK.a]\r\n      const h = self.lock_when_stand_and_rest();\r\n      if (h) self.key_down(...keys).key_up(...keys)\r\n    }\r\n  },\r\n  [DummyEnum.LockAtMid_dUa_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dUj_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dDa_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dDj_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dLj_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dRa_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dRj_auto]: undefined,\r\n  [DummyEnum.LockAtMid_dja_auto]: undefined\r\n}\r\nexport interface IDummyUpdater {\r\n  update(self: BotController): void\r\n}","import { Entity } from \"../entity\";\nimport { manhattan_xz } from \"../helper/manhattan_xz\";\nimport { IBotTarget } from \"./IBotTarget\";\n\nexport class NearestTargets {\n  targets: IBotTarget[] = [];\n  max: number = 5;\n  entities = new Set<Entity>();\n\n  constructor(max: number) { this.max = max; }\n  get(): IBotTarget | undefined { return this.targets[0]; }\n\n  look(self: Entity, other: Entity, defendable: number = 0) {\n    const { targets } = this;\n    if (!self || this.entities.has(other)) return;\n\n    const distance = manhattan_xz(self, other);\n    const len = targets.length;\n    if (len < this.max) {\n      targets.push({ entity: other, distance, defendable });\n      this.entities.add(other);\n      return;\n    } else {\n      for (let i = 0; i < len; ++i) {\n        const target = targets[i];\n        if (distance > target.distance)\n          continue;\n        this.targets.splice(i, 0, { entity: other, distance, defendable });\n        this.entities.add(other);\n        const { entity } = this.targets[this.max];\n        this.entities.delete(entity);\n        this.targets.length = this.max;\n        break;\n      }\n    }\n  }\n\n  del(condition: (target: IBotTarget) => boolean) {\n    this.targets = this.targets.filter((target) => {\n      const ret = !condition(target);\n      if (!ret) this.entities.delete(target.entity);\n      return ret;\n    });\n  }\n\n  sort(self: Entity) {\n    this.targets.sort((a, b) => {\n      a.distance = manhattan_xz(self, a.entity);\n      b.distance = manhattan_xz(self, b.entity);\n      return a.distance - b.distance;\n    });\n  }\n}\n","import type { IState } from \"../../base/FSM\";\nimport { GK, ItrKind, LGK, StateEnum } from \"../../defines\";\nimport { find, random_get } from \"../../utils\";\nimport type { BotController } from \"../BotController\";\nimport type { BotStateEnum } from \"../../defines/BotStateEnum\";\nimport { KEY_NAME_LIST } from \"../../controller\";\n\nexport abstract class BotState_Base implements IState<BotStateEnum> {\n  abstract key: BotStateEnum;\n  readonly ctrl: BotController\n  constructor(ctrl: BotController) {\n    this.ctrl = ctrl;\n  }\n  defend_test(): boolean {\n    const { ctrl: c } = this;\n    const me = c.entity;\n    const { facing } = me\n    if (c.defends.targets.length <= 0)\n      return false\n    if (facing < 0) c.key_down(GK.R).key_up(GK.L)\n    else c.key_down(GK.L).key_up(GK.R)\n    c.start(GK.d).end(GK.d)\n    return true;\n  }\n  random_jumping() {\n    const c = this.ctrl;\n    const { state } = c.entity.frame;\n    const desire = c.desire()\n    switch (state) {\n      case StateEnum.Running: {\n        (\n          desire < c.dash_desire ?\n            c.key_down :\n            c.key_up\n        ).call(c, GK.j)\n        break;\n      }\n      case StateEnum.Standing:\n      case StateEnum.Walking: {\n        (\n          desire < c.jump_desire ?\n            c.key_down :\n            c.key_up\n        ).call(c, GK.j)\n        break;\n      }\n      default:\n        c.key_up(GK.j);\n    }\n  }\n  update(dt: number): BotStateEnum | undefined | void {\n    const c = this.ctrl\n    const me = c.entity;\n    if (c.world.stage.is_stage_finish) {\n      c.key_down(GK.R).key_up(...KEY_NAME_LIST);\n      if (find(me.v_rests, v => v[1].itr.kind === ItrKind.Block)) {\n        c.start(GK.a).end(GK.a);\n      }\n    }\n  }\n  enter?(): void;\n  leave?(): void;\n  handle_defends(): boolean {\n    const { ctrl: c } = this;\n    const me = c.entity;\n    if (\n      c.defends.targets.length <= 0 ||\n      c.action_desire() > c.d_desire\n    ) return me.frame.state === StateEnum.Defend;\n\n    if (c.defends.targets[0].defendable === 1) {\n      const dx = c.defends.targets[0].entity.position.x - me.position.x\n      const t_facing = c.defends.targets[0].entity.facing\n      if (dx > 0 && t_facing < 0) c.keep_press(GK.R)\n      if (dx < 0 && t_facing > 0) c.keep_press(GK.L)\n      c.fast_click(GK.d).key_up(GK.L, GK.R)\n    } else {\n      // 不可防御的攻击\n    }\n    return true\n  }\n  handle_block() {\n    const { ctrl: c } = this;\n    const { entity: me } = c\n    if (find(me.v_rests, v => v[1].itr.kind === ItrKind.Block)) {\n      c.start(GK.a).end(GK.a)\n    }\n  }\n  handle_bot_actions(): boolean {\n    const { ctrl: c } = this;\n    const me = c.entity;\n    const { bot } = me.data.base\n\n    if (!bot) return false;\n    const keys_list: LGK[][] = []\n    let action_ids = bot.frames?.[me.frame.id]\n    if (action_ids) for (const aid of action_ids) {\n      const keys = this.ctrl.handle_action(bot.actions[aid])\n      if (keys) keys_list.push(keys)\n    }\n\n    action_ids = bot.states?.[me.frame.state]\n    if (action_ids) for (const aid of action_ids) {\n      const keys = this.ctrl.handle_action(bot.actions[aid])\n      if (keys) keys_list.push(keys)\n    }\n\n    if (!keys_list.length) return false\n\n    const keys = random_get(keys_list)\n    if (keys) this.ctrl.start(...keys).end(...keys)\n\n    return true\n  }\n}\n","\nimport { GK, ItrKind, StateEnum } from \"../../defines\";\nimport { BotStateEnum } from \"../../defines/BotStateEnum\";\nimport { manhattan_xz } from \"../../helper/manhattan_xz\";\nimport { find } from \"../../utils\";\nimport { BotState_Base } from \"./BotState\";\nexport class BotState_Avoiding extends BotState_Base {\n  readonly key = BotStateEnum.Avoiding;\n  override update(dt: number) {\n    super.update(dt)\n    if (this.handle_defends()) return;\n    if (this.handle_bot_actions()) return;\n    this.random_jumping()\n\n    const { ctrl: c } = this;\n    if (c.following) return BotStateEnum.Following;\n    const me = c.entity;\n    const en = c.get_chasing()?.entity\n    const av = c.get_avoiding()?.entity\n    const { state } = me.frame;\n\n    if (en && av && manhattan_xz(me, av) < manhattan_xz(me, en))\n      return BotStateEnum.Avoiding;\n    else if (en)\n      return BotStateEnum.Chasing;\n    else if (!av)\n      return BotStateEnum.Idle\n\n    switch (state) {\n      case StateEnum.Normal:\n      case StateEnum.Standing:\n      case StateEnum.Walking:\n      case StateEnum.Running:\n        if (this.defend_test())\n          return;\n    }\n    if (find(me.v_rests, v => v[1].itr.kind === ItrKind.Block)) {\n      c.start(GK.a).end(GK.a)\n    }\n    const { x, z } = me.position;\n    const { x: enemy_x, z: enemy_z } = av.position;\n    const distance = c.manhattan_to(av);\n    if (distance > 200) {\n      c.end(GK.L, GK.R, GK.U, GK.D);\n      return;\n    }\n\n    const { left, right, near, far } = c.lf2.world.bg;\n    let x_d: 0 | -1 | 1 = 0;\n    if (enemy_x <= x) {\n      x_d = enemy_x < right - 200 ? 1 : -1;\n    } else {\n      x_d = enemy_x > left + 200 ? -1 : 1;\n    }\n    switch (x_d) {\n      case 1:\n        if (distance < 25) c.db_hit(GK.R).end(GK.L);\n        else c.is_end(GK.R) && c.start(GK.R).end(GK.L);\n        break;\n      case -1:\n        if (distance < 25) c.db_hit(GK.L).end(GK.R);\n        else c.is_end(GK.L) && c.start(GK.L).end(GK.R);\n        break;\n    }\n\n    let z_d: 0 | -1 | 1 = 0;\n    if (z <= enemy_z) {\n      z_d = enemy_z > far + 50 ? 1 : -1;\n    } else {\n      z_d = enemy_z < near - 50 ? -1 : 1;\n    }\n    switch (z_d) {\n      case 1:\n        c.is_end(GK.U) && c.start(GK.U).end(GK.D);\n        break;\n      case -1:\n        c.is_end(GK.D) && c.start(GK.D).end(GK.U);\n        break;\n    }\n\n  }\n}\n","import { KEY_NAME_LIST } from \"../../controller/BaseController\";\nimport { Defines, GK, ItrKind, StateEnum } from \"../../defines\";\nimport { manhattan_xz } from \"../../helper/manhattan_xz\";\nimport { abs, between, find } from \"../../utils\";\nimport { BotState_Base } from \"./BotState\";\nimport { BotStateEnum } from \"../../defines/BotStateEnum\";\n\nexport class BotState_Chasing extends BotState_Base {\n  readonly key = BotStateEnum.Chasing;\n  override update(dt: number) {\n    super.update(dt)\n    if (this.handle_defends()) return;\n    if (this.handle_bot_actions()) return;\n    this.random_jumping()\n\n    const { ctrl: c } = this;\n    if (c.following) return BotStateEnum.Following;\n    const me = c.entity;\n    const en = c.get_chasing()?.entity\n    const av = c.get_avoiding()?.entity\n    if (en && av && manhattan_xz(me, av) < manhattan_xz(me, en))\n      return BotStateEnum.Avoiding;\n    else if (!en)\n      return BotStateEnum.Idle;\n\n    const { facing: a_facing } = me\n    const { x: my_x, z: my_z, y: my_y } = me.position;\n    const { next_x: en_x, next_z: en_z, next_y: en_y } = c.guess_entity_pos(en);\n    const { state } = me.frame;\n\n    const dist_av_x = a_facing * (en_x - my_x)\n    const dist_av_y = en_y - my_y\n    const dist_av_z = en_z - my_z\n\n    /** \n     * 敌人与自己的距离X\n     * 敌人在背后时为负数\n     * 敌人在正面时为正数\n     */\n    const dist_en_x = a_facing * (en_x - my_x)\n    /** \n     * 敌人与自己的距离y\n     * 敌人在上方时为正数\n     * 敌人在下面时为负数数\n     */\n    const dist_en_y = en_y - my_y\n\n    /**\n     * 敌人与自己的距离X\n     */\n    const abs_dx = abs(my_x - en_x)\n    /**\n     * 敌人与自己的距离Z\n     */\n    const abs_dz = abs(my_z - en_z)\n\n    const x_reach = abs_dx <= c.w_atk_x;\n    const z_reach = abs_dz <= c.w_atk_z;\n\n    const out_of_range = c.en_out_of_range = (\n      abs_dx > Defines.AI_STAY_CHASING_RANGE &&\n      c.behavior === 'stay'\n    ) || (\n        me.team !== c.world.stage.team && (\n          en_x < c.world.stage.player_l - 80 ||\n          en_x > c.world.stage.player_r + 80\n        )\n      )\n\n    switch (state) {\n      case StateEnum.Normal:\n        if (this.defend_test()) return;\n        break;\n      case StateEnum.Running: {\n        if (this.defend_test()) return;\n        this.handle_block()\n\n        if (a_facing > 0 && (abs_dx < c.w_atk_x || out_of_range)) { // 避免跑过头停下\n          c.keep_press(GK.L)\n        } else if (a_facing < 0 && (abs_dx < c.w_atk_x || out_of_range)) { // 避免跑过头停下\n          c.keep_press(GK.R)\n        } else if (\n          c.desire() < c.r_atk_desire &&\n          between(dist_en_x, 0, c.r_atk_x) &&\n          between(abs_dz, 0, c.r_atk_z)\n        ) {\n          // 概率跑攻\n          c.fast_click(GK.a).key_up(GK.R, GK.L)\n        } else if (c.desire() < c.r_stop_desire) {\n          // 概率刹车\n          c.fast_click(a_facing < 0 ? GK.R : GK.L)\n        } else break;\n        return\n      }\n      case StateEnum.Injured:\n        if (c.action_desire() < c.d_desire)\n          c.fast_click(GK.d)\n        break;\n      case StateEnum.Catching:\n        // shit, louisEx air-push frame's state is StateEnum.Catching...\n        if (me.catching) c.fast_click(GK.a)\n        break;\n      case StateEnum.Attacking:\n      case StateEnum.BurnRun:\n      case StateEnum.Z_Moveable:\n        if (my_z < en_z - c.w_atk_z) {\n          c.keep_press(GK.D);\n        } else if (my_z > en_z + c.w_atk_z) {\n          c.keep_press(GK.U);\n        } else {\n          c.key_up(GK.D, GK.U);\n        }\n        break;\n      case StateEnum.Standing:\n      case StateEnum.Walking: {\n        if (this.defend_test()) return;\n        if (find(me.v_rests, v => v[1].itr.kind === ItrKind.Block)) {\n          c.start(GK.a).end(GK.a)\n        }\n        if (!out_of_range) {\n          const { r_desire } = c;\n          if (r_desire > 0) {\n            c.db_hit(GK.R).end(GK.R);\n          } else if (r_desire < 0) {\n            c.db_hit(GK.L).end(GK.L);\n          } else {\n            break;\n          }\n        }\n        break;\n      }\n      case StateEnum.Dash: {\n        this.handle_block()\n        if (\n          between(dist_en_x, 0, c.d_atk_x) &&\n          between(abs_dz, 0, c.d_atk_z)\n        ) {\n          c.keep_press(GK.a)\n          return\n        }\n        break;\n      }\n      case StateEnum.Jump: {\n        if (\n          my_y > 10 &&\n          between(dist_en_x, 0, c.j_atk_x) &&\n          between(abs_dz, 0, c.j_atk_z) &&\n          between(dist_en_y, c.j_atk_y_min, c.j_atk_y_max)\n        ) {\n          // 跳攻\n          c.fast_click(GK.a)\n        } else if (!out_of_range) {\n          if (my_x < en_x && abs_dx > c.w_atk_x) {\n            // 转向\n            c.keep_press(GK.R);\n          } else if (my_x > en_x && abs_dx > c.w_atk_x) {\n            // 转向\n            c.keep_press(GK.L);\n          } else {\n            c.key_up(GK.L, GK.R);\n            break;\n          }\n        }\n        return\n      }\n      default:\n        c.key_up(...KEY_NAME_LIST);\n\n    }\n    if (!out_of_range) {\n      if (my_x < en_x - c.w_atk_x) c.keep_press(GK.R);\n      else if (my_x > en_x + c.w_atk_x) c.keep_press(GK.L);\n      else c.key_up(GK.L, GK.R);\n      if (my_z < en_z - c.w_atk_z) c.keep_press(GK.D)\n      else if (my_z > en_z + c.w_atk_z) c.keep_press(GK.U)\n      else c.key_up(GK.U, GK.D);\n    } else if (me.facing > 0 && my_x > en_x) {\n      c.fast_click(GK.L)\n    } else if (me.facing < 0 && my_x < en_x) {\n      c.fast_click(GK.R)\n    } else {\n      c.key_up(GK.L, GK.R, GK.U, GK.D);\n    }\n    if (\n      between(dist_en_x, 0, c.w_atk_x) &&\n      between(abs_dz, 0, c.w_atk_z)\n    ) {\n      c.fast_click(GK.a)\n    } else {\n      c.key_up(GK.a)\n    }\n    if (x_reach && z_reach) {\n      /** 回头 */\n      if (abs_dx <= 5) {\n        c.key_up(GK.L, GK.R)\n      } else if (my_x > en_x && me.facing > 0) {\n        c.key_down(GK.L).key_up(GK.R);\n      } else if (my_x < en_x && me.facing < 0) {\n        c.key_down(GK.R).key_up(GK.L);\n      }\n    }\n  }\n\n}\n\n","import { KEY_NAME_LIST } from \"../../controller/BaseController\";\nimport { BotStateEnum } from \"../../defines/BotStateEnum\";\nimport { manhattan_xz } from \"../../helper/manhattan_xz\";\nimport { BotState_Base } from \"./BotState\";\n\nexport class BotState_Idle extends BotState_Base {\n  readonly key = BotStateEnum.Idle;\n  override enter(): void {\n    this.ctrl.key_up(...KEY_NAME_LIST)\n  }\n  override update(dt: number) {\n    super.update(dt)\n    if (this.handle_defends()) return;\n    if (this.handle_bot_actions()) return;\n    this.random_jumping()\n\n    const { ctrl: c } = this;\n    if (c.following) return BotStateEnum.Following;\n    const me = c.entity;\n    const en = c.get_chasing()?.entity\n    const av = c.get_avoiding()?.entity\n\n    if (en && av && manhattan_xz(me, av) < manhattan_xz(me, en))\n      return BotStateEnum.Avoiding;\n    else if (en)\n      return BotStateEnum.Chasing;\n    else if (av)\n      return BotStateEnum.Avoiding;\n    this.ctrl.key_up(...KEY_NAME_LIST)\n  }\n}\n\n\n","import { KEY_NAME_LIST } from \"../../controller\";\nimport { BotStateEnum, Defines, GK, StateEnum } from \"../../defines\";\nimport { manhattan_xz } from \"../../helper/manhattan_xz\";\nimport { between } from \"../../utils\";\nimport { BotState_Base } from \"./BotState\";\n\n\nexport class BotState_Following extends BotState_Base {\n  readonly key = BotStateEnum.Following;\n  override enter(): void {\n    this.ctrl.key_up(...KEY_NAME_LIST);\n  }\n  override update(dt: number) {\n    super.update(dt);\n\n    if (this.handle_defends()) return;\n    this.random_jumping();\n\n    const { ctrl: c } = this;\n    const me = c.entity;\n\n    if (c.following) {\n      const [en_x, , en_z] = c.following\n      const { x: my_x, z: my_z } = me.position;\n      const offset_x = Defines.AI_FOLLOWING_RANGE_X\n      const offset_z = Defines.AI_FOLLOWING_RANGE_Z\n      const bound_l = en_x - offset_x;\n      const bound_r = en_x + offset_x;\n      const bound_t = en_z - offset_z;\n      const bound_b = en_z + offset_z;\n\n      switch (me.frame.state) {\n        case StateEnum.Standing:\n        case StateEnum.Walking:\n          this.handle_block()\n          if (my_x < bound_l) c.fast_click(GK.R);\n          else if (my_x > bound_r) c.fast_click(GK.L);\n          else c.key_up(GK.R, GK.L);\n          if (my_z < bound_t) c.keep_press(GK.D);\n          else if (my_z > bound_b) c.keep_press(GK.U);\n          else c.key_up(GK.U, GK.D);\n          break;\n        case StateEnum.Dash:\n        case StateEnum.Jump:\n        case StateEnum.Running:\n          this.handle_block()\n          if (my_x > bound_r) c.keep_press(GK.L);\n          else if (my_x < bound_l) c.keep_press(GK.R);\n          else c.keep_press(me.facing < 0 ? GK.R : GK.L);\n          if (my_z < bound_t) c.keep_press(GK.D);\n          else if (my_z > bound_b) c.keep_press(GK.U);\n          else c.key_up(GK.U, GK.D);\n          break;\n      }\n      if (\n        !between(my_x, bound_l, bound_r) ||\n        !between(my_z, bound_t, bound_b)\n      ) return\n    }\n\n\n    delete c.following;\n    this.ctrl.key_up(...KEY_NAME_LIST);\n    const en = c.get_chasing()?.entity;\n    const av = c.get_avoiding()?.entity;\n\n    if (en && av && manhattan_xz(me, av) < manhattan_xz(me, en))\n      return BotStateEnum.Avoiding;\n    else if (en)\n      return BotStateEnum.Chasing;\n    else if (av)\n      return BotStateEnum.Avoiding;\n    else\n      return BotStateEnum.Idle;\n  }\n}\n","import { Defines, type IBotRay } from \"../../defines\";\nimport type { Entity } from \"../../entity\";\nimport { abs, between, pow, project_to_line } from \"../../utils\";\n\nexport function is_ray_hit(a: Entity, b: Entity, ray: IBotRay) {\n  const p0 = a.position;\n  const p1 = b.position;\n\n  const {\n    x, z,\n    min_x = 0, max_x = 10000,\n    min_z = 0, max_z = 10000,\n    max_d = Defines.DAFUALT_QUBE_LENGTH_POW2,\n    reverse = false,\n  } = ray\n\n  const dx = p1.x - p0.x;\n  const dz = p1.z - p0.z;\n  if (!between(a.facing * dx, min_x, max_x))\n    return reverse;\n  if (!between(abs(dz), min_z, max_z))\n    return reverse;\n\n  const [px, pz] = project_to_line(dx, dz, x * a.facing, z)\n  const hit = pow(dx - px, 2) + pow(dz - pz, 2) < max_d\n  return reverse ? !hit : hit;\n}\n","import FSM from \"../base/FSM\";\r\nimport { BaseController, CONFLICTS_KEY_MAP, KEY_NAME_LIST } from \"../controller/BaseController\";\r\nimport {\r\n  ATTCKING_ITR_KINDS,\r\n  ATTCKING_STATES,\r\n  BotStateEnum,\r\n  Defines,\r\n  Difficulty,\r\n  GK,\r\n  IBotAction, IBotDataSet,\r\n  LGK, StateEnum\r\n} from \"../defines\";\r\nimport { Entity, is_ball, is_character, is_weapon } from \"../entity\";\r\nimport { manhattan_xz } from \"../helper/manhattan_xz\";\r\nimport { PlayerInfo } from \"../PlayerInfo\";\r\nimport { abs, clamp, floor, max } from \"../utils\";\r\nimport { DummyEnum, dummy_updaters } from \"./DummyEnum\";\r\nimport { IBotTarget } from \"./IBotTarget\";\r\nimport { NearestTargets } from \"./NearestTargets\";\r\nimport { BotState_Avoiding, BotState_Chasing, BotState_Idle } from \"./state\";\r\nimport { BotState_Following } from \"./state/BotState_Following\";\r\nimport { is_ray_hit } from \"./utils/is_ray_hit\";\r\n\r\nexport class BotController extends BaseController implements Required<IBotDataSet> {\r\n\r\n  readonly player: PlayerInfo | undefined;\r\n  readonly fsm = new FSM<BotStateEnum>()\r\n    .add(\r\n      new BotState_Idle(this),\r\n      new BotState_Chasing(this),\r\n      new BotState_Avoiding(this),\r\n      new BotState_Following(this)\r\n    )\r\n    .use(BotStateEnum.Idle)\r\n\r\n  readonly __is_bot_ctrl__ = true;\r\n\r\n  /** 走攻触发范围X(敌人正对) */\r\n  w_atk_f_x = Defines.AI_W_ATK_F_X;\r\n  /** 走攻触发范围X(敌人背对) */\r\n  w_atk_b_x = Defines.AI_W_ATK_B_X;\r\n\r\n  w_atk_m_x = Defines.AI_W_ATK_M_X;\r\n\r\n  /** 走攻触发范围Z */\r\n  w_atk_z = Defines.AI_W_ATK_Z;\r\n  data_set: IBotDataSet | undefined;\r\n  behavior?: 'stay' | 'move';\r\n  following?: [number, number, number];\r\n  en_out_of_range: boolean = false;\r\n  /** 走攻触发范围X */\r\n  get w_atk_x() {\r\n    const chasing = this.get_chasing()?.entity;\r\n    if (!chasing) return 0;\r\n    return this.entity.facing === chasing.facing ?\r\n      this.w_atk_f_x :\r\n      this.w_atk_b_x;\r\n  }\r\n\r\n\r\n  /** 跑攻欲望值 */\r\n  r_atk_desire = Defines.AI_R_ATK_DESIRE;\r\n  /** 跑攻触发范围X(敌人正对) */\r\n  r_atk_f_x = Defines.AI_R_ATK_F_X;\r\n  /** 跑攻触发范围X(敌人背对) */\r\n  r_atk_b_x = Defines.AI_R_ATK_F_X;\r\n  /** 跑攻触发范围Z */\r\n  r_atk_z = Defines.AI_R_ATK_Z;\r\n  /** 跑攻触发范围X */\r\n  get r_atk_x() {\r\n    const chasing = this.get_chasing()?.entity;\r\n    if (!chasing) return 0;\r\n    return this.entity.facing === chasing.facing ? this.r_atk_b_x : this.r_atk_f_x;\r\n  }\r\n\r\n  /** 冲跳攻触发范围X(敌人正对) */\r\n  d_atk_f_x = Defines.AI_D_ATK_F_X;\r\n  /** 冲跳攻触发范围X(敌人正对) */\r\n  d_atk_b_x = Defines.AI_D_ATK_B_X;\r\n  /** 冲跳攻触发范围Z */\r\n  d_atk_z = Defines.AI_D_ATK_Z;\r\n  /** 冲跳攻触发范围X */\r\n  get d_atk_x() {\r\n    const chasing = this.get_chasing()?.entity;\r\n    if (!chasing) return 0;\r\n    return this.entity.facing === chasing.facing ? this.d_atk_b_x : this.d_atk_f_x;\r\n  }\r\n\r\n  /** 跳攻触发范围X(敌人正对) */\r\n  j_atk_f_x = Defines.AI_J_ATK_F_X;\r\n  /** 跳攻触发范围X(敌人正对) */\r\n  j_atk_b_x = Defines.AI_J_ATK_B_X;\r\n  /** 跳攻触发范围Z */\r\n  j_atk_z = Defines.AI_J_ATK_Z;\r\n  /** 跳攻触发范围Y */\r\n  j_atk_y_min = Defines.AI_J_ATK_Y_MIN;\r\n  j_atk_y_max = Defines.AI_J_ATK_Y_MAX;\r\n  /** 跳攻触发范围X */\r\n  get j_atk_x() {\r\n    const chasing = this.get_chasing()?.entity;\r\n    if (!chasing) return 0;\r\n    return this.entity.facing === chasing.facing ? this.j_atk_b_x : this.j_atk_f_x;\r\n  }\r\n\r\n  jump_desire = Defines.AI_J_DESIRE;\r\n  dash_desire = Defines.AI_D_DESIRE;\r\n\r\n  /** 最小欲望值：跑步 */\r\n  r_desire_min = Defines.AI_R_DESIRE_MIN;\r\n\r\n  /** 最大欲望值：跑步 */\r\n  r_desire_max = Defines.AI_R_DESIRE_MAX;\r\n\r\n  /** \r\n   * 最小起跑范围X \r\n   * 距离敌人小于于等于此距离时，此时奔跑欲望值最小\r\n   */\r\n  r_x_min = Defines.AI_R_X_MIN;\r\n\r\n  /** \r\n   * 最大起跑范围X \r\n   * 距离敌人大于等于此距离时，此时奔跑欲望值最大\r\n   */\r\n  r_x_max = Defines.AI_R_X_MAX;\r\n\r\n  get r_desire(): -1 | 1 | 0 {\r\n    const chasing = this.get_chasing()?.entity;\r\n    if (!chasing) return 0;\r\n    let dx = abs(this.entity.position.x - chasing.position.x) - this.r_x_min\r\n    if (dx < 0) return 0;\r\n    let should_run = false\r\n    const r_x_r = this.r_x_max - this.r_x_min\r\n    if (r_x_r === 0) {\r\n      dx = floor(clamp(dx, 0, r_x_r) / r_x_r)\r\n      should_run = this.desire() <\r\n        this.r_desire_min + (this.r_desire_max - this.r_desire_min) * dx;\r\n    } else {\r\n      should_run = this.desire() < this.r_x_min;\r\n    }\r\n    if (!should_run) return 0;\r\n    return this.entity.position.x > chasing.position.x ? -1 : 1\r\n  }\r\n\r\n  /** 欲望值：停止跑步 */\r\n  r_stop_desire = Defines.AI_R_STOP_DESIRE;\r\n\r\n  /** 防御 */\r\n  d_desire = Defines.AI_DEF_DESIRE;\r\n\r\n  get_chasing(): IBotTarget | undefined {\r\n    return this.chasings.get()\r\n  }\r\n\r\n  get_avoiding(): IBotTarget | undefined {\r\n    return this.avoidings.get()\r\n  }\r\n\r\n  chasings = new NearestTargets(5);\r\n  avoidings = new NearestTargets(5);\r\n  defends = new NearestTargets(5);\r\n\r\n  private _dummy?: DummyEnum;\r\n  get dummy(): DummyEnum | undefined {\r\n    return this._dummy;\r\n  }\r\n  set dummy(v) {\r\n    this.end(...Object.values(GK));\r\n    this._dummy = v;\r\n  }\r\n  constructor(player_id: string, entity: Entity) {\r\n    super(player_id, entity);\r\n    this.player = this.lf2.players.get(player_id)\r\n  }\r\n  manhattan_to(a: Entity) {\r\n    const { x, z } = this.entity.position;\r\n    const { x: x1, z: z1 } = a.position;\r\n    return abs(x1 - x) + abs(z1 - z);\r\n  }\r\n\r\n  /**\r\n   * 判断是否应该追击某个对象\r\n   *\r\n   * @param {(Entity | null)} [e]\r\n   * @return {*}  {boolean}\r\n   * @memberof BotController\r\n   */\r\n  should_chase(e?: Entity | null): boolean {\r\n    return !!(\r\n      this.entity.hp > 0 &&\r\n      e?.is_attach &&\r\n      e.hp > 0 &&\r\n      e.frame.state !== StateEnum.Lying &&\r\n      !e.invisible &&\r\n      !e.blinking &&\r\n      !e.invulnerable\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 判断是否应该躲避某个对象\r\n   *\r\n   * @param {(Entity | null)} [e]\r\n   * @return {*}  {boolean}\r\n   * @memberof BotController\r\n   */\r\n  should_avoid(e?: Entity | null): boolean {\r\n    if (\r\n      this.entity.hp <= 0 ||\r\n      !e?.is_attach ||\r\n      e.hp <= 0\r\n    ) return false;\r\n\r\n    const dxz = manhattan_xz(this.entity, e)\r\n    return !!(\r\n      dxz < 300 && (\r\n        e.frame.state === StateEnum.Lying ||\r\n        e.invisible ||\r\n        e.blinking ||\r\n        e.invulnerable ||\r\n        !e.frame.bdy?.length\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * 判断是否应该防御某个对象\r\n   *\r\n   * @param {(Entity | null)} [e]\r\n   * @return {*}  {boolean}\r\n   * @memberof BotController\r\n   */\r\n  should_defend(e?: Entity | null): 0 | 1 | 2 {\r\n    if (\r\n      e?.is_attach != true ||\r\n      this.entity.toughness ||\r\n      this.entity.invisible ||\r\n      this.entity.blinking ||\r\n      this.entity.invulnerable) return 0\r\n\r\n    const { itr: itrs } = e\r\n    if (!ATTCKING_STATES.some(v => v === e.frame.state))\r\n      return 0\r\n\r\n    const hit = is_ray_hit(e, this.entity, {\r\n      x: max(e.velocity.x, 1),\r\n      z: e.velocity.z,\r\n      min_x: -80,\r\n      max_x: max(abs(10 * e.velocity.x), 60),\r\n      min_z: -2 * Defines.DAFUALT_QUBE_LENGTH,\r\n      max_z: max(abs(10 * e.velocity.z), 2 * Defines.DAFUALT_QUBE_LENGTH)\r\n    })\r\n    if (!hit) return 0;\r\n\r\n    if (itrs?.length) {\r\n      let has_atk_itr_kind = false;\r\n      let just_a_rest = true\r\n      for (const itr of itrs) {\r\n        if (!ATTCKING_ITR_KINDS.some(v => itr.kind === v)) continue;\r\n        has_atk_itr_kind = true;\r\n        if (Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE === itr.bdefend) {\r\n          return 2;\r\n        }\r\n        if (itr.vrest) just_a_rest = false\r\n      }\r\n      if (!has_atk_itr_kind) return 0;\r\n      if (just_a_rest && e.a_rest) return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  look_other(other: Entity) {\r\n    if (is_character(other)) {\r\n      if (this.entity.is_ally(other)) {\r\n        return;\r\n      }\r\n      if (this.should_avoid(other)) {\r\n        this.avoidings.look(this.entity, other)\r\n        return;\r\n      }\r\n      const dd = this.should_defend(other)\r\n      if (dd) {\r\n        this.defends.look(this.entity, other, dd)\r\n        return;\r\n      }\r\n      if (this.should_chase(other)) {\r\n        this.chasings.look(this.entity, other)\r\n        return;\r\n      }\r\n\r\n    } else if (is_ball(other) || is_weapon(other)) {\r\n      if (this.entity.is_ally(other)) {\r\n        return;\r\n      }\r\n      const dd = this.should_defend(other)\r\n      if (dd) {\r\n        this.defends.look(this.entity, other, dd)\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  预判敌人位置(有点粗暴)\r\n   */\r\n  guess_entity_pos(entity: Entity) {\r\n    const { x: px, z: pz, y: py } = entity.position;\r\n    const { x: vx, z: vz, y: vy } = entity.velocity;\r\n    let x = px + vx;\r\n    let z = pz + vz;\r\n    let y = py + vy;\r\n    switch (entity.frame.state) {\r\n      case StateEnum.Jump:\r\n        x += 2 * vx;\r\n        z += 1 * vz;\r\n        y += 1 * vy;\r\n        break;\r\n      case StateEnum.Running:\r\n        x += 3 * vx;\r\n        z += 1.5 * vz;\r\n        y += 1.5 * vy;\r\n        break;\r\n      case StateEnum.Dash:\r\n        x += 4 * vx;\r\n        z += 2 * vz;\r\n        y += 2 * vy\r\n        break;\r\n    }\r\n    return { x: px, z: pz, next_x: x, next_z: z, next_y: y };\r\n  }\r\n\r\n  key_up(...ks: LGK[]): this {\r\n    for (const k of ks) if (!this.is_end(k)) this.end(k)\r\n    return this;\r\n  }\r\n  key_down(...ks: LGK[]): this {\r\n    for (const k of ks) if (this.is_end(k)) this.start(k)\r\n    return this;\r\n  }\r\n  fast_click(...ks: LGK[]): this {\r\n    for (const k of ks) {\r\n      this.key_down(k).key_up(k)\r\n      const ck = CONFLICTS_KEY_MAP[k]\r\n      if (ck) this.key_up(ck)\r\n    }\r\n    return this;\r\n  }\r\n  keep_press(...ks: LGK[]): this {\r\n    for (const k of ks) {\r\n      this.key_down(k)\r\n      const ck = CONFLICTS_KEY_MAP[k]\r\n      if (ck) this.key_up(ck)\r\n    }\r\n    return this;\r\n  }\r\n  desire() {\r\n    return this.lf2.random_in(0, Defines.MAX_AI_DESIRE)\r\n  }\r\n\r\n  override update() {\r\n    if (this.data_set !== this.entity.data.base.bot?.dataset) {\r\n      this.data_set = this.entity.data.base.bot?.dataset\r\n      Object.assign(this, this.entity.data.base.bot?.dataset)\r\n    }\r\n    if (this.dummy) {\r\n      dummy_updaters[this.dummy]?.update(this);\r\n    } else if (this.world.stage.is_chapter_finish) {\r\n      this.key_up(...KEY_NAME_LIST)\r\n    } else if (this.entity.hp <= 0) {\r\n      this.key_up(...KEY_NAME_LIST)\r\n    } else {\r\n      this.chasings.del(({ entity }) => !this.should_chase(entity))\r\n      this.chasings.sort(this.entity)\r\n\r\n      this.avoidings.del(({ entity }) => !this.should_avoid(entity))\r\n      this.avoidings.sort(this.entity)\r\n\r\n      this.defends.del(({ entity }) => !this.should_defend(entity))\r\n      this.defends.sort(this.entity)\r\n\r\n      this.fsm.update(1)\r\n    }\r\n    return super.update();\r\n  }\r\n  lock_when_stand_and_rest() {\r\n    if (\r\n      this.entity.frame.state === StateEnum.Standing &&\r\n      this.entity.resting <= 0\r\n    ) {\r\n      this.entity.position.x = this.world.bg.width / 2;\r\n      this.entity.position.z = (this.world.bg.near + this.world.far) / 2;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  action_desire(): number {\r\n    let ret = this.desire(); // 默认action设置的desire是crazy的好了。\r\n    for (let i = Difficulty.MAX - this.lf2.difficulty; i > 0; --i) {\r\n      ret += this.lf2.random_in(0, ret);\r\n    }\r\n    return ret;\r\n  }\r\n  handle_action(action: IBotAction | undefined): LGK[] | false {\r\n    if (!action) return false\r\n    const { facing } = this.entity;\r\n    const { status, e_ray, judger, desire, keys } = action;\r\n    const action_desire = this.action_desire();\r\n    if (!desire || action_desire > desire) return false;\r\n    if (status && !status.some(v => v === this.fsm.state?.key))\r\n      return false;\r\n    if (e_ray) {\r\n      const chasing = this.get_chasing()?.entity;\r\n      if (!chasing) return false;\r\n      let ray_hit = false\r\n      for (const r of e_ray) {\r\n        ray_hit = is_ray_hit(this.entity, chasing, r);\r\n        if (ray_hit) break;\r\n      }\r\n      if (!ray_hit) return false;\r\n    }\r\n\r\n    if (judger && !judger.run(this))\r\n      return false;\r\n    const ks = keys.map<LGK>(v => {\r\n      if (v === 'F') return facing > 0 ? GK.R : GK.L;\r\n      if (v === 'B') return facing > 0 ? GK.R : GK.L;\r\n      return v\r\n    })\r\n    return ks;\r\n  }\r\n\r\n  move() {\r\n    this.behavior = 'move'\r\n  }\r\n  stay() {\r\n    this.behavior = 'stay'\r\n  }\r\n  goto(x: number, y: number, z: number) {\r\n    this.following = [x, y, z]\r\n  }\r\n}\r\n","import { is_positive_int as is_non_nagative_int } from \"../../utils\";\r\n\r\nabstract class _Checker {\r\n  abstract check(value: any): boolean\r\n}\r\nclass _OneOf extends _Checker {\r\n  readonly values: any[];\r\n  constructor(values: any[]) {\r\n    super();\r\n    this.values = values\r\n  }\r\n  override check(value: any): boolean {\r\n    return this.values.some(v => v === value)\r\n  }\r\n  override toString(): string {\r\n    return `one_of(${this.values.map(v => JSON.stringify(v)).join()})`\r\n  }\r\n}\r\nclass _ArrayOf {\r\n\r\n}\r\nclass _NonNagativeInt extends _Checker {\r\n  override check(value: any): boolean {\r\n    return is_non_nagative_int(value)\r\n  }\r\n}\r\nexport function one_of(...values: any[]): _OneOf {\r\n  return new _OneOf(values)\r\n}\r\nexport function arr_of(): _ArrayOf {\r\n  return new _ArrayOf()\r\n}\r\nexport function non_nagative_int() {\r\n  return new _NonNagativeInt()\r\n}\r\nexport type Expected = _OneOf | _ArrayOf | _NonNagativeInt |\r\n  \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" |\r\n  \"object\" | \"function\"\r\n\r\nexport function check_field<T extends {}>(\r\n  obj: T,\r\n  obj_name: string,\r\n  field_name: keyof T,\r\n  expected: Expected | Expected[],\r\n  error?: string[]\r\n) {\r\n  const { TAG } = check_field;\r\n  const value = obj[field_name]\r\n  const type_name = typeof value;\r\n  const expecteds: Expected[] = Array.isArray(expected) ? expected : [expected];\r\n  const expected_type_name = expecteds.some(expected => {\r\n    if (expected instanceof _ArrayOf) {\r\n      if (Array.isArray(value))\r\n        return true;\r\n    } else if (expected instanceof _Checker) {\r\n      if (expected.check(value)) return true\r\n    } else if (type_name === expected) {\r\n      return true;\r\n    }\r\n  }) ? void 0 : expecteds.map(v => JSON.stringify(v)).join(\" | \")\r\n\r\n  if (expected_type_name) {\r\n    const msg = `[${TAG}] ${obj_name}.${field_name.toString()} ` +\r\n      `must be ${expecteds}, but got ${value}.`\r\n    error?.push(msg);\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\ncheck_field.TAG = 'check_field';\r\n","import type { IStageInfo, IStagePhaseInfo } from \"../defines\";\r\nimport { arr_of, check_field } from \"../ui/utils/check_field\";\r\n\r\nexport function check_stage_info(info: IStageInfo, errors?: string[]): boolean {\r\n  const my_errors: string[] = []\r\n  check_field(info, 'stage', 'bg', 'string', my_errors)\r\n  check_field(info, 'stage', 'id', 'string', my_errors)\r\n  check_field(info, 'stage', 'name', 'string', my_errors)\r\n\r\n  check_field(info, 'stage', 'phases', arr_of(), my_errors)\r\n\r\n\r\n  // phases\r\n\r\n\r\n  check_field(info, 'stage', 'next', ['string', 'undefined'], my_errors);\r\n  check_field(info, 'stage', 'chapter', ['string', 'undefined'], my_errors);\r\n\r\n  // TODO: more checking\r\n  errors?.push(...my_errors);\r\n  return !my_errors.length;\r\n}\r\n\r\nexport function check_phase_info(stage: IStageInfo, info: IStagePhaseInfo, idx: number, errors: string[] = []) {\r\n  const my_errors: string[] = []\r\n  const name = `${stage.name}.phase[${idx}]`\r\n  check_field(info, name, 'bound', 'number', my_errors)\r\n  check_field(info, name, 'desc', ['string', 'undefined'], my_errors)\r\n  return !my_errors.length;\r\n}","import type { IBgData } from \"../defines\";\r\nimport type { LF2 } from \"../LF2\";\r\nimport { is_non_blank_str } from \"../utils/type_check/is_str\";\r\nimport type { ImageInfo } from \"./ImageInfo\";\r\n\r\nexport function preprocess_bg_data(lf2: LF2, data: IBgData, jobs: Promise<ImageInfo>[]): IBgData {\r\n  const { layers, base: { shadow } } = data;\r\n  is_non_blank_str(shadow) && jobs.push(lf2.images.load_img(shadow, shadow));\r\n  for (const { file } of layers)\r\n    is_non_blank_str(file) && jobs.push(lf2.images.load_img(file, file));\r\n  return data\r\n}\r\npreprocess_bg_data.TAG = \"preprocess_bg_data\"","export enum BinOp {\r\n  LESS = \"<\",\r\n  LESS_OR_EQUAL = \"<=\",\r\n  EQUAL = \"==\",\r\n  GREATER_OR_EQUAL = \">=\",\r\n  GREATER = \">\",\r\n  NOT_EQUAL = \"!=\",\r\n  IncludedBy = \"}}\",\r\n  Include = \"{{\",\r\n  NotIncludedBy = \"!}\",\r\n  NotInclude = \"!{\",\r\n}\r\n\r\nexport type TBinOp =\r\n  | \"==\"\r\n  | \">=\"\r\n  | \"<=\"\r\n  | \"!=\"\r\n  | \"<\"\r\n  | \">\"\r\n  | \"{{\"\r\n  | \"}}\"\r\n  | \"!{\"\r\n  | \"!}\"\r\n  | BinOp;\r\n","import { BinOp, TBinOp } from \"../defines/BinOp\";\r\nimport {\r\n  IExpression,\r\n  IJudger,\r\n  IValGetterGetter\r\n} from \"../defines/IExpression\";\r\nexport function ALWAY_FALSE<T = unknown>(\r\n  text: string,\r\n  err?: string,\r\n): IJudger<T> {\r\n  return { run: () => false, text, err, result: false };\r\n}\r\nconst a_included_b = (a: any[], b: any[]) => {\r\n  return !b.length || b.findIndex((i) => a.indexOf(i) < 0) === -1;\r\n};\r\nexport const predicate_maps: Record<BinOp, (a: any, b: any) => boolean> = {\r\n  // eslint-disable-next-line eqeqeq\r\n  \"==\": (a, b) => a == b,\r\n  // eslint-disable-next-line eqeqeq\r\n  \"!=\": (a, b) => a != b,\r\n  \">=\": (a, b) => a >= b,\r\n  \"<=\": (a, b) => a <= b,\r\n  \"<\": (a, b) => a < b,\r\n  \">\": (a, b) => a > b,\r\n  \"{{\": a_included_b,\r\n  \"}}\": (a: any[], b: any[]) => a_included_b(b, a),\r\n  \"!{\": (a: any[], b: any[]) => !a_included_b(a, b),\r\n  \"!}\": (a: any[], b: any[]) => !a_included_b(b, a),\r\n};\r\n\r\nexport class Expression<T1, T2 = T1> implements IExpression<T1, T2> {\r\n  readonly is_expression = true;\r\n  static is = (v: any): v is Expression<unknown> => v?.is_expression === true;\r\n  readonly children: IExpression<T1, T2>[] = [];\r\n  readonly get_val_getter: IValGetterGetter<T1 | T2>;\r\n  err?: string | undefined;\r\n  text: string = \"\";\r\n  result?: boolean | undefined;\r\n  before: string = \"\";\r\n  not: boolean = false;\r\n\r\n  op: any;\r\n  val_1: any;\r\n  val_2: any;\r\n\r\n  constructor(\r\n    arg_0: string | null,\r\n    get_val_getter: IValGetterGetter<T1 | T2>,\r\n  ) {\r\n    this.get_val_getter = get_val_getter;\r\n    if (typeof arg_0 === \"string\") {\r\n      this.text = arg_0.replace(/\\s|\\n|\\r/g, \"\");\r\n      let p = 0;\r\n      const count = this.text.length + 1;\r\n      let i = 0;\r\n      let letter: string = \"\";\r\n      let before: string = \"\";\r\n      for (; i < count; ++i) {\r\n        letter = this.text[i] || '';\r\n        if (\"!\" === letter && this.text[i + 1] === \"(\") {\r\n          const child = new Expression<T1, T2>(\r\n            this.text.substring(i + 2),\r\n            get_val_getter,\r\n          );\r\n          child.not = true;\r\n          child.before = before;\r\n          i += child.text.length + 2;\r\n          p = i + 2;\r\n          this.children.push(child);\r\n        } else if (\"(\" === letter) {\r\n          const child = new Expression<T1, T2>(\r\n            this.text.substring(i + 1),\r\n            get_val_getter,\r\n          );\r\n          child.before = before;\r\n          i += child.text.length + 1;\r\n          p = i + 1;\r\n          this.children.push(child);\r\n        } else if (\"|\" === letter || \"&\" === letter) {\r\n          if (p < i) {\r\n            const child = new Expression<T1, T2>(null, get_val_getter);\r\n            child.judger(this.text.substring(p, i).replace(/\\)*$/g, \"\"))\r\n            child.before = before;\r\n            this.children.push(child);\r\n            before = letter;\r\n          } else {\r\n            before = letter;\r\n          }\r\n          p = i + 1;\r\n        } else if (\")\" === letter || '' === letter) {\r\n          if (p < i) {\r\n            const child = new Expression<T1, T2>(null, get_val_getter);\r\n            child.judger(this.text.substring(p, i))\r\n            child.before = before;\r\n            this.children.push(child);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      this.text = this.text.substring(0, i);\r\n    }\r\n  }\r\n  private alway_false(err: string): void {\r\n    this.err = err\r\n    this.result = false;\r\n    this.run = () => false;\r\n  }\r\n  private judger(text: string): void {\r\n    this.text = text\r\n    if (!text) return this.alway_false(\"[empty text]\")\r\n\r\n    const reg_result =\r\n      text.match(/(\\S*)\\s*(==|!=|<=|>=|\\{\\{|\\}\\}|!\\{|!\\})\\s?(\\S*)/) ||\r\n      text.match(/(\\S*)\\s*(=|<|>)\\s?(\\S*)/);\r\n    if (!reg_result) return this.alway_false(`[wrong expression: ${text}]`);\r\n    const [, word_1, op, word_2] = reg_result;\r\n    this.op = op;\r\n    if (!word_1 || !word_2) return this.alway_false(`[wrong expression: ${text}]`);\r\n    const predicate = predicate_maps[op as TBinOp];\r\n    if (!predicate) return this.alway_false(`wrong operator: ${op}`);\r\n\r\n    const getter_1 = this.get_val_getter(word_1);\r\n    const getter_2 = this.get_val_getter(word_2);\r\n    let val_1: any = word_1;\r\n    let val_2: any = word_2;\r\n    if (\r\n      op === BinOp.Include ||\r\n      op === BinOp.IncludedBy ||\r\n      op === BinOp.NotInclude ||\r\n      op === BinOp.IncludedBy\r\n    ) {\r\n      if (!getter_1) val_1 = word_1.split(\",\");\r\n      if (!getter_2) val_2 = word_2.split(\",\");\r\n    }\r\n    if (!getter_1 && !getter_2) {\r\n      const result = this.result = predicate(\r\n        this.val_1 = val_1,\r\n        this.val_2 = val_2\r\n      );\r\n      console.warn(\r\n        \"[Expression] warning,\",\r\n        JSON.stringify(text),\r\n        \"always got\",\r\n        result,\r\n      );\r\n      this.run = () => result\r\n      return;\r\n    }\r\n    this.run = (t) => this.result = predicate(\r\n      this.val_1 = getter_1 ? getter_1(t, word_1, op as BinOp) : val_1,\r\n      this.val_2 = getter_2 ? getter_2(t, word_2, op as BinOp) : val_2,\r\n    )\r\n  }\r\n  run = (e: T1): boolean => {\r\n    let ret = false;\r\n    const len = this.children.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      const child = this.children[i]!;\r\n      if (!child.before) {\r\n        ret = child.run(e);\r\n      } else if (child.before === \"|\") {\r\n        ret = ret || child.run(e);\r\n      } else if (child.before === \"&\") {\r\n        ret = ret && child.run(e);\r\n      }\r\n    }\r\n    return this.result = this.not ? !ret : ret;\r\n  };\r\n}","import type { IEntityData, IFrameInfo } from \"../defines\";\r\nimport { check_bdy } from \"./check_bdy\";\r\nimport { check_field, one_of, non_nagative_int } from \"../ui/utils/check_field\";\r\nimport { check_itr } from \"./check_itr\";\r\n\r\n/**\r\n * 检查frame每个字段是否正常\r\n *\r\n * @export\r\n * @param {Readonly<IEntityData>} data\r\n * @param {Readonly<IFrameInfo>} frame\r\n */\r\nexport function check_frame(data: Readonly<IEntityData>, frame: Readonly<IFrameInfo>, errors?: string[]): boolean {\r\n  const my_errors: string[] = []\r\n  const frame_name = `${data.base.name}#frame`\r\n  check_field(frame, frame_name, 'id', 'string', my_errors);\r\n  check_field(frame, frame_name, 'name', 'string', my_errors);\r\n  check_field(frame, frame_name, 'state', 'number', my_errors);\r\n  check_field(frame, frame_name, 'wait', 'number', my_errors);\r\n  // TODO: pic\r\n  // TODO: next\r\n  check_field(frame, frame_name, 'dvx', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'dvy', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'dvz', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'acc_x', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'acc_y', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'acc_z', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'vxm', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'vym', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'vzm', ['number', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'centerx', 'number', my_errors);\r\n  check_field(frame, frame_name, 'centery', 'number', my_errors);\r\n  check_field(frame, frame_name, 'sound', ['string', 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'hp', ['number', 'undefined'], my_errors);\r\n  // TODO: hold\r\n  // TODO: hit\r\n\r\n  frame.bdy?.forEach((v, i) => check_bdy(data, frame, v, i, my_errors));\r\n  frame.itr?.forEach((v, i) => check_itr(data, frame, v, i, my_errors));\r\n  // TODO: wpoint\r\n  // TODO: bpoint\r\n  // TODO: opoint\r\n  // TODO: cpoint\r\n  // TODO: indicator_info\r\n  check_field(frame, frame_name, 'invisible', [non_nagative_int(), 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'no_shadow', [one_of(0, 1), 'undefined'], my_errors);\r\n  check_field(frame, frame_name, 'jump_flag', [one_of(1, 0), 'undefined'], my_errors);\r\n  // TODO: on_dead\r\n  // TODO: on_exhaustion\r\n  // TODO: on_landing\r\n  // TODO: behavior\r\n  // TODO: on_hit_ground\r\n\r\n  if (errors) errors.push(...my_errors)\r\n  return !my_errors.length\r\n}\r\ncheck_frame.TAG = 'check_frame'\r\n","import type { IEntityData, IFrameInfo, IBdyInfo } from \"../defines\";\r\n\r\n/**\r\n * 检查bdy每个字段是否正常\r\n *\r\n * @export\r\n * @param {Readonly<IEntityData>} data\r\n * @param {Readonly<IFrameInfo>} frame\r\n */\r\n\r\nexport function check_bdy(\r\n  data: Readonly<IEntityData>,\r\n  frame: Readonly<IFrameInfo>,\r\n  bdy: Readonly<IBdyInfo>,\r\n  idx: number,\r\n  errors?: string[]\r\n): boolean {\r\n  return true\r\n}\r\n\r\n\r\n","import type { IEntityData, IFrameInfo, IItrInfo } from \"../defines\";\r\n\r\n\r\nexport function check_itr(\r\n  data: Readonly<IEntityData>,\r\n  frame: Readonly<IFrameInfo>,\r\n  itr: Readonly<IItrInfo>,\r\n  idx: number,\r\n  errors?: string[]\r\n) {\r\n  return true\r\n}\r\n","import { IValGetter, IValGetterGetter } from \"../defines/IExpression\";\nimport { LF2Val } from \"../defines/LF2Val\";\nimport { LF2 } from \"../LF2\";\n\nexport const get_val_from_lf2: IValGetterGetter<LF2> = (\n  word: string\n): IValGetter<LF2> | undefined => {\n  switch (word as LF2Val) {\n    default:\n      return () => word\n  }\n};\n","import { CheatType, I_K, ItrKind } from \"../defines\";\r\nimport { E_Val } from \"../defines/EntityVal\";\r\nimport { IValGetter, IValGetterGetter } from \"../defines/IExpression\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { is_ball, is_character, is_weapon } from \"../entity/type_check\";\r\nimport { find } from \"../utils/container_help\";\r\nimport { between, clamp, round } from \"../utils/math\";\r\nimport { get_val_from_world } from \"./get_val_from_world\";\r\n\r\nexport const entity_val_getters: Record<E_Val, (e: Entity) => any> = {\r\n  [E_Val.TrendX]: e => {\r\n    if (e.velocity_0.x < 0) return -e.facing;\r\n    if (e.velocity_0.x > 0) return e.facing;\r\n    return 0;\r\n  },\r\n  [E_Val.PressFB]: e => e.ctrl.LR * e.facing,\r\n  [E_Val.PressUD]: e => e.ctrl.UD,\r\n  [E_Val.PressLR]: e => e.ctrl.LR,\r\n  [E_Val.Holding_W_Type]: e => e.holding?.data.base.type ?? 0,\r\n  [E_Val.HP_P]: e => clamp(round((100 * e.hp) / e.hp_max), 0, 100),\r\n  [E_Val.LF2_NET_ON]: e => e.lf2.is_cheat_enabled(CheatType.LF2_NET) ? 1 : 0,\r\n  [E_Val.HERO_FT_ON]: e => e.lf2.is_cheat_enabled(CheatType.HERO_FT) ? 1 : 0,\r\n  [E_Val.GIM_INK_ON]: e => e.lf2.is_cheat_enabled(CheatType.GIM_INK) ? 1 : 0,\r\n  [E_Val.HAS_TRANSFORM_DATA]: e => e.transform_datas ? 1 : 0,\r\n  [E_Val.Catching]: e => e.catching ? 1 : 0,\r\n  [E_Val.CAUGHT]: e => e.catcher ? 1 : 0,\r\n  [E_Val.RequireSuperPunch]: e => {\r\n    for (const [, { itr, attacker }] of e.v_rests) {\r\n      if (itr.kind !== ItrKind.SuperPunchMe) continue;\r\n      // 小于0时，眩晕者在攻击者左侧，否则在右侧\r\n      const diff_x = e.position.x - attacker.position.x;\r\n      if ((between(diff_x, -20, 20)) ||\r\n        (diff_x < -20 && e.facing === 1) ||\r\n        (diff_x > 20 && e.facing === -1)) return 1;\r\n    }\r\n    return 0;\r\n  },\r\n  [E_Val.HitByCharacter]: e => find(e.collided_list, (c) => is_character(c.attacker)) ? 1 : 0,\r\n  [E_Val.HitByWeapon]: e => find(e.collided_list, (c) => is_weapon(c.attacker)) ? 1 : 0,\r\n  [E_Val.HitByBall]: e => find(e.collided_list, (c) => is_ball(c.attacker)) ? 1 : 0,\r\n  [E_Val.HitByState]: e => e.collided_list.map((i) => i.aframe.state),\r\n  [E_Val.HitByItrKind]: e => e.collided_list.map((i) => i.itr.kind),\r\n  [E_Val.HitByItrEffect]: e => e.collided_list.map((i) => i.itr.effect),\r\n  [E_Val.HitOnCharacter]: e => find(e.collision_list, (c) => is_character(c.victim)) ? 1 : 0,\r\n  [E_Val.HitOnWeapon]: e => find(e.collision_list, (c) => is_weapon(c.victim)) ? 1 : 0,\r\n  [E_Val.HitOnBall]: e => find(e.collision_list, (c) => is_ball(c.victim)) ? 1 : 0,\r\n  [E_Val.HitOnState]: e => e.collision_list.map((i) => i.bframe.state),\r\n  [E_Val.HitOnSth]: e => e.collision_list.length,\r\n  [E_Val.HP]: e => e.hp,\r\n  [E_Val.MP]: e => e.mp,\r\n  [E_Val.VX]: e => e.velocity.x,\r\n  [E_Val.VY]: e => e.velocity.y,\r\n  [E_Val.VZ]: e => e.velocity.z,\r\n  [E_Val.FrameState]: e => e.frame.state,\r\n  [E_Val.Shaking]: e => e.shaking,\r\n  [E_Val.Holding]: e => e.holding ? 1 : 0,\r\n  [E_Val.HpRecoverable]: e => e.hp_r - e.hp,\r\n  [E_Val.LastestCollidedItrKind]: e => e.lastest_collided?.itr.kind\r\n}\r\nexport const entity_world_val_getters = new Map<string, undefined | IValGetter<Entity>>();\r\n\r\nexport const get_val_getter_from_entity: IValGetterGetter<Entity> = (word: string): IValGetter<Entity> | undefined => {\r\n  const val_getter = entity_val_getters[word as E_Val]\r\n  if (val_getter) return val_getter;\r\n\r\n  if (entity_world_val_getters.has(word)) {\r\n    return entity_world_val_getters.get(word)\r\n  }\r\n  const world_val_getter = get_val_from_world(word);\r\n  if (!world_val_getter) {\r\n    entity_world_val_getters.set(word, world_val_getter)\r\n    return void 0\r\n  }\r\n  const fallback: IValGetter<Entity> = (e, ...arg) => world_val_getter(e.world, ...arg)\r\n  entity_world_val_getters.set(word, fallback)\r\n  return fallback;\r\n};\r\n\r\n\r\n","import { WorldVal } from \"../defines/WorldVal\";\nimport { IValGetterGetter, IValGetter } from \"../defines/IExpression\";\nimport { World } from \"../World\";\nimport { get_val_from_lf2 } from \"./get_val_from_lf2\";\n\n\nexport const get_val_from_world: IValGetterGetter<World> = (\n  word: string\n): IValGetter<World> | undefined => {\n  switch (word as WorldVal) {\n    default:\n      const fallback = get_val_from_lf2(word);\n      return (e, ...arg) => fallback?.(e.lf2, ...arg);\n  }\n};\n","import { BotController } from \"../bot/BotController\";\nimport { ATTCKING_STATES } from \"../defines\";\nimport { BotVal } from \"../defines/BotVal\";\nimport { IValGetter, IValGetterGetter } from \"../defines/IExpression\";\nimport { abs } from \"../utils\";\nimport { get_val_getter_from_entity } from \"./get_val_from_entity\";\nexport const bot_val_getters: Record<BotVal, (e: BotController) => any> = {\n  [BotVal.Desire]: e => e.desire(),\n  [BotVal.BotState]: e => e.fsm.state?.key ?? '',\n  [BotVal.EnemyY]: e => e.get_chasing()?.entity?.position.y,\n  [BotVal.EnemyDiffY]: e => {\n    const chasing = e.get_chasing()?.entity;\n    if (!chasing) return NaN;\n    return chasing.position.y - e.entity.position.y;\n  },\n  [BotVal.EnemyX]: e => e.get_chasing()?.entity?.position.x,\n  [BotVal.EnemyDiffX]: e => {\n    const chasing = e.get_chasing()?.entity;\n    if (!chasing) return NaN;\n    return e.entity.facing * (chasing.position.x - e.entity.position.x);\n  },\n  [BotVal.EnemyState]: e => e.get_chasing()?.entity?.frame.state,\n  [BotVal.Safe]: e => {\n    if (e.defends.entities.size) return 0;\n    const chasing = e.get_chasing()?.entity;\n    const avoiding = e.get_avoiding()?.entity;\n    if (chasing && abs(chasing.position.x - e.entity.position.x) < 200 && abs(chasing.position.z - e.entity.position.z) < 150) return 0;\n    if (chasing && ATTCKING_STATES.some(v => chasing.frame.state === v)) return 0;\n    if (avoiding && abs(avoiding.position.x - e.entity.position.x) < 200 && abs(avoiding.position.z - e.entity.position.z) < 150) return 0;\n    if (avoiding && ATTCKING_STATES.some(v => avoiding.frame.state === v)) return 0;\n    return 1;\n  },\n  [BotVal.EnemyOutOfRange]: e => e.en_out_of_range ? 1 : 0\n\n}\nexport const bot_entity_val_getters = new Map<string, IValGetter<BotController>>();\n\nexport const get_val_from_bot_ctrl: IValGetterGetter<BotController> = (word) => {\n  const val_getter = bot_val_getters[word as BotVal]\n  if (val_getter) return val_getter;\n  let fallback = bot_entity_val_getters.get(word);\n  if (!fallback) {\n    const val_getter = get_val_getter_from_entity(word);\n    fallback = val_getter ? (e, ...arg) => val_getter(e.entity, ...arg) : () => word\n    bot_entity_val_getters.set(word, fallback)\n  }\n  return fallback;\n};\n","import { ICollision } from \"../base\";\nimport { StateEnum, ItrEffect, Defines } from \"../defines\";\n\n/**\n * 判断护甲是否生效\n * @param collision\n * @returns\n */\nexport function is_armor_work(collision: ICollision): boolean {\n  const { victim } = collision;\n  const { armor } = victim;\n\n  /* 无护甲 或 护甲耐久为0 */\n  if (!armor || victim.toughness <= 0)\n    return false;\n\n  /* 受击帧护甲无效 */\n  const { bframe } = collision;\n  if (bframe.state === StateEnum.Caught ||\n    bframe.state === StateEnum.Injured ||\n    bframe.state === StateEnum.Falling ||\n    bframe.state === StateEnum.Frozen ||\n    bframe.state === StateEnum.Lying ||\n    bframe.state === StateEnum.Tired ||\n    bframe.state === StateEnum.BrokenDefend ||\n    bframe.state === StateEnum.Burning) {\n    return false;\n  }\n\n  /* 非全时护甲时，站立、行走、奔跑、跳跃、跑跳以外的帧无效 */\n  if (armor?.fulltime === false && (\n    StateEnum.Standing !== bframe.state &&\n    StateEnum.Walking !== bframe.state &&\n    StateEnum.Running !== bframe.state &&\n    StateEnum.Jump !== bframe.state &&\n    StateEnum.Dash !== bframe.state\n  )) {\n    return false;\n  }\n  const { itr } = collision;\n  const { effect } = itr;\n\n  /* 判断是否防火 */\n  if (!armor.fireproof && (\n    effect === ItrEffect.Fire ||\n    effect === ItrEffect.MFire1 ||\n    effect === ItrEffect.MFire2 ||\n    effect === ItrEffect.FireExplosion\n  )) return false;\n\n  /* 判断是否防冰 */\n  if (!armor.antifreeze && (\n    effect === ItrEffect.Ice2 ||\n    effect === ItrEffect.Ice\n  )) return false;\n\n  /* 判断是否强制破防 */\n  const { bdefend = 0 } = itr;\n  if (bdefend >= Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE) return false;\n\n  const { aframe } = collision;\n  if (aframe.state === StateEnum.Ball_3006) return false;\n\n  return true;\n}\n","import { ICollision } from \"../base/ICollision\";\r\nimport { is_armor_work } from \"../collision/is_armor_work\";\r\nimport { CheatType, EntityGroup } from \"../defines\";\r\nimport { CollisionVal } from \"../defines/CollisionVal\";\r\nimport { IValGetter, IValGetterGetter } from \"../defines/IExpression\";\r\nimport { floor } from \"../utils\";\r\n\r\nconst map: Record<CollisionVal, IValGetter<ICollision>> = {\r\n  [CollisionVal.AttackerType]: c => c.attacker.data.type,\r\n  [CollisionVal.VictimType]: c => c.victim.data.type,\r\n  [CollisionVal.ItrKind]: c => c.itr.kind,\r\n  [CollisionVal.ItrEffect]: c => c.itr.effect,\r\n  [CollisionVal.SameTeam]: c => c.attacker.is_ally(c.victim) ? 1 : 0,\r\n  [CollisionVal.SameFacing]: c => c.attacker.facing === c.victim.facing ? 1 : 0,\r\n  [CollisionVal.AttackerState]: c => c.aframe.state,\r\n  [CollisionVal.VictimState]: c => c.bframe.state,\r\n  [CollisionVal.AttackerHasHolder]: c => c.attacker.holder ? 1 : 0,\r\n  [CollisionVal.VictimHasHolder]: c => c.victim.holder ? 1 : 0,\r\n  [CollisionVal.AttackerHasHolding]: c => c.attacker.holding ? 1 : 0,\r\n  [CollisionVal.VictimHasHolding]: c => c.victim.holding ? 1 : 0,\r\n  [CollisionVal.AttackerOID]: c => c.attacker.data.id,\r\n  [CollisionVal.VictimOID]: c => c.victim.data.id,\r\n  [CollisionVal.BdyKind]: c => c.bdy.kind,\r\n  [CollisionVal.VictimFrameId]: c => c.bframe.id,\r\n  [CollisionVal.VictimFrameIndex_ICE]: c => c.victim.data.indexes?.ice,\r\n  [CollisionVal.ItrFall]: c => c.itr.fall,\r\n  [CollisionVal.AttackerThrew]: c => c.attacker.throwinjury !== void 0 ? 1 : 0,\r\n  [CollisionVal.VictimThrew]: c => c.victim.throwinjury !== void 0 ? 1 : 0,\r\n  [CollisionVal.VictimIsChasing]: c => c.victim === c.attacker.chasing ? 1 : 0,\r\n  [CollisionVal.VictimIsFreezableBall]: c => c.victim.group?.some(v => v === EntityGroup.FreezableBall) ? 1 : 0,\r\n  [CollisionVal.AttackerIsFreezableBall]: c => c.attacker.group?.some(v => v === EntityGroup.FreezableBall) ? 1 : 0,\r\n  [CollisionVal.ArmorWork]: (collision: ICollision) => is_armor_work(collision) ? 1 : 0,\r\n  [CollisionVal.V_FrameBehavior]: c => c.victim.frame.behavior,\r\n  [CollisionVal.NoItrEffect]: c => c.itr.effect === void 0 ? 1 : 0,\r\n  [CollisionVal.A_HP_P]: c => floor(100 * c.attacker.hp / c.attacker.hp_max),\r\n  [CollisionVal.V_HP_P]: c => floor(100 * c.victim.hp / c.victim.hp_max),\r\n  [CollisionVal.LF2_NET_ON]: c => c.attacker.lf2.is_cheat_enabled(CheatType.LF2_NET) ? 1 : 0,\r\n  [CollisionVal.BdyHitFlag]: c => c.bdy.hit_flag,\r\n  [CollisionVal.ItrHitFlag]: c => c.itr.hit_flag,\r\n  [CollisionVal.BdyCode]: c => c.bdy.code,\r\n  [CollisionVal.ItrCode]: c => c.itr.code\r\n};\r\nexport const get_val_geter_from_collision: IValGetterGetter<ICollision> = (\r\n  word: string,\r\n): IValGetter<ICollision> | undefined => {\r\n  return (map as any)[word];\r\n};\r\n","import { Expression } from \"../base/Expression\";\r\nimport { INextFrame, TNextFrame } from \"../defines\";\r\nimport { get_val_getter_from_entity } from \"./get_val_from_entity\";\r\n\r\n\r\nexport function preprocess_next_frame(nf: INextFrame): INextFrame;\r\nexport function preprocess_next_frame(nf: INextFrame[]): INextFrame[];\r\nexport function preprocess_next_frame(nf: TNextFrame): TNextFrame;\r\nexport function preprocess_next_frame(nf: TNextFrame): TNextFrame {\r\n  if (Array.isArray(nf))\r\n    return nf.map(i => preprocess_next_frame(i))\r\n  if (typeof nf.expression !== \"string\") return nf;\r\n  nf.judger = new Expression(nf.expression, get_val_getter_from_entity);\r\n  return nf;\r\n}\r\npreprocess_next_frame.Tag = 'preprocess_next_frame'\r\n","import { Expression } from \"../base/Expression\";\r\nimport type { TAction } from \"../defines\";\r\nimport { ActionType } from \"../defines/ActionType\";\r\nimport type { LF2 } from \"../LF2\";\r\nimport { is_non_blank_str } from \"../utils\";\r\nimport { get_val_geter_from_collision } from \"./get_val_from_collision\";\r\nimport { preprocess_next_frame } from \"./preprocess_next_frame\";\r\n\r\nexport function preprocess_action(lf2: LF2, action: TAction, jobs: Promise<void>[]): TAction {\r\n  action.tester = action.test ? new Expression(\r\n    action.test, get_val_geter_from_collision\r\n  ) : void 0\r\n  switch (action.type) {\r\n    case ActionType.A_Sound:\r\n    case ActionType.V_Sound:\r\n      for (const sound of action.data.path) {\r\n        if (is_non_blank_str(sound) && !lf2.sounds.has(sound))\r\n          jobs.push(lf2.sounds.load(sound, sound));\r\n      }\r\n      break;\r\n    case ActionType.A_NextFrame:\r\n    case ActionType.V_NextFrame:\r\n    case ActionType.A_Defend:\r\n    case ActionType.V_Defend:\r\n    case ActionType.A_BrokenDefend:\r\n    case ActionType.V_BrokenDefend:\r\n      preprocess_next_frame(action.data);\r\n      break;\r\n  }\r\n  return action;\r\n}\r\npreprocess_action.TAG = \"preprocess_action\";","import { Expression } from \"../base/Expression\";\r\nimport { IBdyInfo, IEntityData } from \"../defines\";\r\nimport { HitFlag } from \"../defines/HitFlag\";\r\nimport type { LF2 } from \"../LF2\";\r\nimport { get_val_geter_from_collision } from \"./get_val_from_collision\";\r\nimport { preprocess_action } from \"./preprocess_action\";\r\n\r\nexport function preprocess_bdy(lf2: LF2, bdy: IBdyInfo, data: IEntityData, jobs: Promise<void>[]): IBdyInfo {\r\n  const prefab = bdy.prefab_id ? data.bdy_prefabs?.[bdy.prefab_id] : void 0;\r\n  if (prefab) bdy = { ...prefab, ...bdy };\r\n  bdy.hit_flag = bdy.hit_flag ?? HitFlag.AllEnemy\r\n  bdy.tester = bdy.test ? new Expression(\r\n    bdy.test,\r\n    get_val_geter_from_collision\r\n  ) : void 0;\r\n  bdy.actions?.forEach((n, i, l) => l[i] = preprocess_action(lf2, n, jobs));\r\n  return bdy;\r\n}\r\n\r\npreprocess_bdy.TAG = 'preprocess_bdy'","import { IEntityData, IFrameInfo, IFramePictureInfo, ITexturePieceInfo } from \"../defines\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { LF2 } from \"../LF2\";\r\nimport { find } from \"../utils\";\r\nimport { ImageInfo } from \"./ImageInfo\";\r\n\r\nconst cache_key = (a: IFramePictureInfo, b: ImageInfo): string => {\r\n  return [a.tex, a.x, a.y, a.w, a.h, b.w, b.h, b.scale].join();\r\n}\r\nconst cache_map = new Map<string, IFramePictureInfo>();\r\nexport function preprocess_frame_pic(lf2: LF2, data: IEntityData, frame: IFrameInfo): IFramePictureInfo | undefined {\r\n  const { pic } = frame;\r\n  if (!pic) return pic;\r\n\r\n  const pic_info = find(data.base.files, ([,v]) => v.id === pic.tex)?.[1];\r\n  if (!pic_info) {\r\n    Ditto.warn(preprocess_frame_pic.TAG, \"file info not found, pic:\", pic);\r\n    return pic;\r\n  }\r\n  const p = lf2.images.find_by_pic_info(pic_info);\r\n  if (!p) {\r\n    Ditto.warn(preprocess_frame_pic.TAG, \"img info not found\", pic_info);\r\n    return pic;\r\n  };\r\n  const ck = cache_key(pic, p)\r\n  let ret = cache_map.get(ck);\r\n  if (ret) return ret;\r\n  \r\n  const scale_img_w = p.w / p.scale;\r\n  const scale_img_h = p.h / p.scale;\r\n  const f_i_1: ITexturePieceInfo = {\r\n    tex: pic.tex!,\r\n    x: pic.x / scale_img_w,\r\n    y: 1 - (pic.y + pic.h) / scale_img_h,\r\n    w: pic.w / scale_img_w,\r\n    h: pic.h / scale_img_h,\r\n    pixel_w: pic.w,\r\n    pixel_h: pic.h,\r\n  };\r\n  const f_i_2: ITexturePieceInfo = {\r\n    ...f_i_1, x: -f_i_1.x - f_i_1.w,\r\n  };\r\n  ret = { ...pic, 1: f_i_1, [-1]: f_i_2 };\r\n  cache_map.set(ck, ret)\r\n\r\n  return ret;\r\n}\r\n\r\npreprocess_frame_pic.TAG = \"preprocess_frame_pic\"","import { Expression } from \"../base/Expression\";\r\nimport type { IEntityData, IItrInfo } from \"../defines\";\r\nimport { HitFlag } from \"../defines/HitFlag\";\r\nimport type { LF2 } from \"../LF2\";\r\nimport { get_val_geter_from_collision } from \"./get_val_from_collision\";\r\nimport { preprocess_action } from \"./preprocess_action\";\r\nimport { preprocess_next_frame } from \"./preprocess_next_frame\";\r\n\r\n/**\r\n * Description placeholder\r\n *\r\n * @export\r\n * @param {IItrInfo} itr 处理前的itr\r\n * @param {IEntityData} data \r\n * @returns {IItrInfo} 处理后的itr\r\n */\r\nexport function preprocess_itr(lf2: LF2, itr: IItrInfo, data: IEntityData, jobs: Promise<void>[]): IItrInfo {\r\n  const prefab = itr.prefab_id !== void 0 ? data.itr_prefabs?.[itr.prefab_id] : void 0;\r\n  if (prefab) itr = { ...prefab, ...itr };\r\n  if (itr.catchingact) preprocess_next_frame(itr.catchingact);\r\n  if (itr.caughtact) preprocess_next_frame(itr.caughtact);\r\n  if (itr.test)\r\n    itr.tester = new Expression(itr.test, get_val_geter_from_collision);\r\n  itr.hit_flag = itr.hit_flag ?? HitFlag.AllEnemy\r\n  itr.actions?.forEach((n, i, l) => l[i] = preprocess_action(lf2, n, jobs));\r\n  return itr;\r\n}\r\n\r\npreprocess_itr.TAG = \"cook_frame\";\r\n\r\n","import { LF2 } from \"../LF2\";\r\nimport { cook_frame_indicator_info } from \"../dat_translator/cook_frame_indicator_info\";\r\nimport { IFrameInfo } from \"../defines\";\r\nimport { IEntityData } from \"../defines/IEntityData\";\r\nimport read_nums from \"../ui/utils/read_nums\";\r\nimport { traversal } from \"../utils/container_help/traversal\";\r\nimport { preprocess_bdy } from \"./preprocess_bdy\";\r\nimport { preprocess_frame_pic } from \"./preprocess_frame_pic\";\r\nimport { preprocess_itr } from \"./preprocess_itr\";\r\nimport { preprocess_next_frame } from \"./preprocess_next_frame\";\r\n\r\nexport function preprocess_frame(lf2: LF2, data: IEntityData, frame: IFrameInfo, jobs: Promise<void>[]): IFrameInfo {\r\n\r\n  cook_frame_indicator_info(frame);\r\n\r\n  if (frame.sound && !lf2.sounds.has(frame.sound))\r\n    jobs.push(lf2.sounds.load(frame.sound, frame.sound))\r\n\r\n  if (frame.seqs) {\r\n    frame.seq_map = new Map();\r\n    traversal(frame.seqs, (k, v, o) => {\r\n      if (!v) return;\r\n      const nf = preprocess_next_frame(v)\r\n      frame.seq_map!.set(k, o[k] = nf)\r\n    });\r\n  }\r\n  traversal(frame.hit, (k, v, o) => { if (v) o[k] = preprocess_next_frame(o[k]!) });\r\n  traversal(frame.hold, (k, v, o) => { if (v) o[k] = preprocess_next_frame(v) });\r\n  traversal(frame.key_down, (k, v, o) => { if (v) o[k] = preprocess_next_frame(v) });\r\n  traversal(frame.key_up, (k, v, o) => { if (v) o[k] = preprocess_next_frame(v) });\r\n\r\n  if (frame.next) frame.next = preprocess_next_frame(frame.next);\r\n  if (frame.on_dead) frame.on_dead = preprocess_next_frame(frame.on_dead);\r\n  if (frame.on_exhaustion) frame.on_exhaustion = preprocess_next_frame(frame.on_exhaustion);\r\n  if (frame.on_landing) frame.on_landing = preprocess_next_frame(frame.on_landing);\r\n\r\n  frame.bdy?.forEach((n, i, l) => l[i] = preprocess_bdy(lf2, n, data, jobs))\r\n  frame.itr?.forEach((n, i, l) => l[i] = preprocess_itr(lf2, n, data, jobs))\r\n\r\n  const unchecked_frame = frame as any;\r\n  if (unchecked_frame) {\r\n    if (unchecked_frame.center) {\r\n      const [x, y] = read_nums(unchecked_frame.center, 2, [\r\n        frame.centerx ?? 0,\r\n        frame.centery ?? 0,\r\n      ]);\r\n      frame.centerx = x;\r\n      frame.centery = y;\r\n    }\r\n  }\r\n  frame.pic = preprocess_frame_pic(lf2, data, frame);\r\n  return frame\r\n}\r\npreprocess_frame.TAG = \"preprocess_frame\";\r\n\r\n","import { IFrameInfo } from \"../defines/IFrameInfo\";\r\nimport { IQube } from \"../defines/IQube\";\r\n\r\nexport function cook_frame_indicator_info(frame: IFrameInfo) {\r\n  const { pic, bdy, itr, opoint, cpoint, bpoint, wpoint } = frame;\r\n  if (!pic || !(\"w\" in pic)) return;\r\n  const f_qube_1: IQube = {\r\n    x: -frame.centerx,\r\n    y: frame.centery - pic.h,\r\n    w: pic.w,\r\n    h: pic.h,\r\n    z: 0,\r\n    l: 0,\r\n  };\r\n  const f_qube_2: IQube = {\r\n    ...f_qube_1,\r\n    x: frame.centerx - f_qube_1.w,\r\n  };\r\n  frame.indicator_info = {\r\n    1: f_qube_1,\r\n    [-1]: f_qube_2,\r\n  };\r\n\r\n  opoint?.forEach((o) => {\r\n    const w = 2;\r\n    const h = 2;\r\n    const rect_1: IQube = {\r\n      w,\r\n      h,\r\n      x: f_qube_1.x + o.x - w / 2,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - h / 2,\r\n      z: o.z || 0,\r\n      l: 0,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  });\r\n  if (cpoint) {\r\n    const o = cpoint;\r\n    const w = 2;\r\n    const h = 2;\r\n    const rect_1: IQube = {\r\n      w,\r\n      h,\r\n      x: f_qube_1.x + o.x - w / 2,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - h / 2,\r\n      z: o.z || 0,\r\n      l: 0,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  }\r\n  if (bpoint) {\r\n    const o = bpoint;\r\n    const w = 2;\r\n    const h = 2;\r\n    const rect_1: IQube = {\r\n      w,\r\n      h,\r\n      x: f_qube_1.x + o.x - w / 2,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - h / 2,\r\n      z: o.z || 0,\r\n      l: 0,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  }\r\n  if (wpoint) {\r\n    const o = wpoint;\r\n    const w = 2;\r\n    const h = 2;\r\n    const rect_1: IQube = {\r\n      w,\r\n      h,\r\n      x: f_qube_1.x + o.x - w / 2,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - h / 2,\r\n      z: o.z || 0,\r\n      l: 0,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  }\r\n  bdy?.forEach((o) => {\r\n    const rect_1: IQube = {\r\n      w: o.w,\r\n      h: o.h,\r\n      x: f_qube_1.x + o.x,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - o.h,\r\n      z: o.z,\r\n      l: o.l,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - o.w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  });\r\n  itr?.forEach((o) => {\r\n    const rect_1: IQube = {\r\n      w: o.w,\r\n      h: o.h,\r\n      x: f_qube_1.x + o.x,\r\n      y: f_qube_1.y + f_qube_1.h - o.y - o.h,\r\n      z: o.z,\r\n      l: o.l,\r\n    };\r\n    const rect_2: IQube = {\r\n      ...rect_1,\r\n      x: f_qube_2.x + f_qube_1.w - o.w - o.x,\r\n    };\r\n    o.indicator_info = { 1: rect_1, [-1]: rect_2 };\r\n  });\r\n}\r\n","import { LF2 } from \"../LF2\";\r\nimport { BotController } from \"../bot/BotController\";\r\nimport { BallController } from \"../controller/BallController\";\r\nimport { InvalidController } from \"../controller/InvalidController\";\r\nimport { IBgData, IDataLists, IStageInfo } from \"../defines\";\r\nimport { EntityEnum } from \"../defines/EntityEnum\";\r\nimport { IDataMap } from \"../defines/IDataMap\";\r\nimport { IEntityData } from \"../defines/IEntityData\";\r\nimport { Defines } from \"../defines/defines\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { Factory } from \"../entity\";\r\nimport { TData } from \"../entity/Entity\";\r\nimport {\r\n  is_ball_data,\r\n  is_bg_data,\r\n  is_character_data,\r\n  is_entity_data,\r\n  is_weapon_data,\r\n} from \"../entity/type_check\";\r\nimport { Randoming } from \"../helper/Randoming\";\r\nimport { is_non_blank_str, is_str } from \"../utils/type_check\";\r\nimport { check_stage_info } from \"./check_stage_info\";\r\nimport { preprocess_bg_data } from \"./preprocess_bg_data\";\r\nimport { preprocess_entity_data } from \"./preprocess_entity_data\";\r\n\r\nexport interface IDataListMap {\r\n  background: IBgData[];\r\n  [EntityEnum.Entity]: IEntityData[];\r\n  [EntityEnum.Fighter]: IEntityData[];\r\n  [EntityEnum.Weapon]: IEntityData[];\r\n  [EntityEnum.Ball]: IEntityData[];\r\n  all: TData[];\r\n}\r\n\r\nconst create_data_list_map = (): IDataListMap => ({\r\n  background: [Defines.VOID_BG],\r\n  [EntityEnum.Entity]: [],\r\n  [EntityEnum.Fighter]: [],\r\n  [EntityEnum.Weapon]: [],\r\n  [EntityEnum.Ball]: [],\r\n  all: [],\r\n});\r\n\r\nclass Inner {\r\n  readonly mgr: DatMgr;\r\n  readonly id: number;\r\n  get cancelled(): boolean {\r\n    return this.mgr.inner_id !== this.id;\r\n  }\r\n  data_list_map = create_data_list_map();\r\n  data_map = new Map<string, IEntityData>();\r\n  stages: IStageInfo[] = [Defines.VOID_STAGE];\r\n  get lf2() {\r\n    return this.mgr.lf2;\r\n  }\r\n\r\n  constructor(mgr: DatMgr, id: number) {\r\n    this.mgr = mgr;\r\n    this.id = id;\r\n  }\r\n\r\n  private async _cook_data(data: TData): Promise<TData> {\r\n    const jobs: Promise<any>[] = [];\r\n    if (is_bg_data(data)) data = preprocess_bg_data(this.lf2, data, jobs)\r\n    if (is_ball_data(data))\r\n      Factory.inst.set_ctrl_creator(data.id, (a, b) => new BallController(a, b));\r\n    else if (is_weapon_data(data))\r\n      Factory.inst.set_ctrl_creator(data.id, (a, b) => new InvalidController(a, b));\r\n    else if (is_character_data(data))\r\n      Factory.inst.set_ctrl_creator(data.id, (a, b) => new BotController(a, b));\r\n\r\n    if (is_entity_data(data)) data = await preprocess_entity_data(this.lf2, data, jobs);\r\n    return data;\r\n  }\r\n\r\n  private async _add_data(index_id: string | number, raw_data: TData) {\r\n    const data = (await this._cook_data(raw_data)) as IEntityData; // fixme\r\n    const _index_id = \"\" + index_id;\r\n    const _data_id = \"\" + data.id;\r\n    if (_data_id === \"spark\") debugger;\r\n    if (_data_id !== _index_id) {\r\n      Ditto.warn(\r\n        DatMgr.TAG + \"::_add_data\",\r\n        `index_id not equal to data_id,`,\r\n        `index_id: ${_index_id}, data_id: ${_data_id},`,\r\n        `will use index_id as data key.`,\r\n      );\r\n    }\r\n    if (this.data_map.has(_index_id)) {\r\n      Ditto.warn(\r\n        DatMgr.TAG + \"::_add_data\",\r\n        \"id duplicated, old data will be overwritten!\",\r\n        \"old data:\",\r\n        this.data_map.get(_index_id),\r\n        \"new data:\",\r\n        data,\r\n      );\r\n    }\r\n    this.data_map.set(_index_id, data);\r\n  }\r\n\r\n  async load() {\r\n    for (const k of Object.keys(Defines.BuiltIn_Imgs)) {\r\n      const src = (Defines.BuiltIn_Imgs as any)[k];\r\n      if (!is_non_blank_str(src)) continue;\r\n      this.lf2.on_loading_content(`${src}`, 0);\r\n      await this.lf2.images.load_img(src, src);\r\n    }\r\n\r\n    for (const k of Object.keys(Defines.BuiltIn_Dats)) {\r\n      const src = (Defines.BuiltIn_Dats as any)[k];\r\n      if (!is_non_blank_str(src)) continue;\r\n      this.lf2.on_loading_content(`${src}`, 0);\r\n      await this._add_data(src, await this.lf2.import_json(src).then(r => r[0]));\r\n    }\r\n\r\n    const { objects = [], backgrounds = [] } =\r\n      await this.lf2.import_json<Partial<IDataLists>>(\"data/data.json5\").then(r => r[0])\r\n        .catch(() => ({} as Partial<IDataLists>));\r\n    if (this.cancelled) throw new Error(\"cancelled\");\r\n\r\n    if (this.cancelled) throw new Error(\"cancelled\");\r\n    for (const { id, file } of objects) {\r\n      if (this.cancelled) throw new Error(\"cancelled\");\r\n\r\n      this.lf2.on_loading_content(`${file}`, 0);\r\n      await this._add_data(id, await this.lf2.import_json(file).then(r => r[0]));\r\n    }\r\n    for (const { id, file } of backgrounds) {\r\n      if (this.cancelled) throw new Error(\"cancelled\");\r\n      this.lf2.on_loading_content(`${file}`, 0);\r\n      await this._add_data(id, await this.lf2.import_json(file).then(r => r[0]));\r\n    }\r\n    for (const [, v] of this.data_map) {\r\n      if (this.cancelled) throw new Error(\"cancelled\");\r\n      const t = v.type as keyof IDataMap;\r\n      this.data_list_map[t]?.push(v as any);\r\n      this.data_list_map.all.push(v as any);\r\n    }\r\n\r\n    const stage_file = \"data/stage.json5\";\r\n    this.lf2.on_loading_content(`${stage_file}`, 0);\r\n\r\n    const stages = await this.lf2.import_json<IStageInfo[]>(\"data/stage.json5\").then(r => r[0]).catch(e => [])\r\n\r\n    if (!this.stages.find(v => v.id === Defines.VOID_STAGE.id))\r\n      this.stages.unshift(Defines.VOID_STAGE)\r\n\r\n    for (const stage of stages) {\r\n      const idx = this.stages.findIndex(v => v.id === stage.id);\r\n      check_stage_info(stage)\r\n      if (idx < 0) this.stages.push(stage);\r\n      this.stages[idx] = stage;\r\n    }\r\n\r\n\r\n\r\n    this.lf2.on_loading_content(`${stage_file}`, 100);\r\n  }\r\n  process_entity_data(data: IEntityData): void { }\r\n}\r\n\r\nexport default class DatMgr {\r\n  static readonly TAG: string = \"DatMgr\";\r\n\r\n  find_group(group: string) {\r\n    const f = (v: IEntityData) => v.base.group?.some(g => g === group)\r\n    return {\r\n      characters: this.characters.filter(f),\r\n      weapons: this.weapons.filter(f),\r\n      entity: this.entity.filter(f),\r\n      balls: this.balls.filter(f),\r\n    };\r\n  }\r\n  private _inner_id: number = 0;\r\n  private _inner = new Inner(this, ++this._inner_id);\r\n  get inner_id(): number {\r\n    return this._inner_id;\r\n  }\r\n  readonly lf2: LF2;\r\n\r\n  constructor(lf2: LF2) {\r\n    this.lf2 = lf2;\r\n  }\r\n\r\n  load(): Promise<void> {\r\n    this.clear();\r\n    return this._inner.load();\r\n  }\r\n\r\n  dispose(): void {\r\n    ++this._inner_id;\r\n  }\r\n\r\n  clear(): void {\r\n    this._inner = new Inner(this, ++this._inner_id);\r\n  }\r\n\r\n  get characters() {\r\n    return this._inner.data_list_map[EntityEnum.Fighter];\r\n  }\r\n  get weapons() {\r\n    return this._inner.data_list_map[EntityEnum.Weapon];\r\n  }\r\n  get backgrounds() {\r\n    return this._inner.data_list_map.background;\r\n  }\r\n  get balls() {\r\n    return this._inner.data_list_map[EntityEnum.Ball];\r\n  }\r\n  get entity() {\r\n    return this._inner.data_list_map[EntityEnum.Entity];\r\n  }\r\n  get all() {\r\n    return this._inner.data_list_map.all;\r\n  }\r\n  get stages(): IStageInfo[] {\r\n    return this._inner.stages;\r\n  }\r\n\r\n  find(id: number | string): IEntityData | undefined {\r\n    return this._inner.data_map.get(\"\" + id);\r\n  }\r\n\r\n  private randomings = new Map<string, Randoming<IEntityData>>();\r\n  get_randoming_by_group(group: string) {\r\n    let ret = this.randomings.get(group);\r\n    if (!ret) {\r\n      const { characters, weapons, entity, balls } = this.find_group(group);\r\n      this.randomings.set(\r\n        group,\r\n        ret = new Randoming([\r\n          ...characters, ...weapons, ...entity, ...balls\r\n        ], this.lf2)\r\n      );\r\n    }\r\n    return ret\r\n\r\n\r\n  }\r\n\r\n  find_weapon(id: string): IEntityData | undefined;\r\n  find_weapon(predicate: IFindPredicate<IEntityData>): IEntityData | undefined;\r\n  find_weapon(\r\n    arg_0: string | IFindPredicate<IEntityData>,\r\n  ): IEntityData | undefined {\r\n    return is_str(arg_0)\r\n      ? this.weapons.find((v) => v.id === arg_0)\r\n      : this.weapons.find(arg_0);\r\n  }\r\n\r\n  find_character(id: string): IEntityData | undefined;\r\n  find_character(\r\n    predicate: IFindPredicate<IEntityData>,\r\n  ): IEntityData | undefined;\r\n  find_character(\r\n    arg_0: string | IFindPredicate<IEntityData>,\r\n  ): IEntityData | undefined {\r\n    return is_str(arg_0)\r\n      ? this.characters.find((v) => v.id === arg_0)\r\n      : this.characters.find(arg_0);\r\n  }\r\n\r\n  find_background(id: string): IBgData | undefined;\r\n  find_background(predicate: IFindPredicate<IBgData>): IBgData | undefined;\r\n  find_background(\r\n    arg_0: string | IFindPredicate<IBgData>,\r\n  ): IBgData | undefined {\r\n    return is_str(arg_0)\r\n      ? this.backgrounds.find((v) => v.id === arg_0)\r\n      : this.backgrounds.find(arg_0);\r\n  }\r\n\r\n  get_characters_of_group(group: string): IEntityData[] {\r\n    return this.characters.filter(\r\n      (v) => v.base.group && v.base.group.indexOf(group) >= 0,\r\n    );\r\n  }\r\n  get_characters_not_in_group(group: string): IEntityData[] {\r\n    return this.characters.filter(\r\n      (v) => !v.base.group || v.base.group.indexOf(group) < 0,\r\n    );\r\n  }\r\n}\r\ninterface IFindPredicate<T> {\r\n  (value: T, index: number, obj: T[]): unknown;\r\n}\r\n\r\n","import { Expression } from \"../base/Expression\";\r\nimport { Defines, IEntityData } from \"../defines\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { LF2 } from \"../LF2\";\r\nimport { is_non_blank_str } from \"../utils\";\r\nimport { traversal } from \"../utils/container_help/traversal\";\r\nimport { check_frame } from \"./check_frame\";\r\nimport { get_val_from_bot_ctrl } from \"./get_val_from_bot_ctrl\";\r\nimport { preprocess_frame } from \"./preprocess_frame\";\r\nimport { preprocess_next_frame } from \"./preprocess_next_frame\";\r\n\r\nexport async function preprocess_entity_data(lf2: LF2, data: IEntityData, jobs: Promise<any>[]): Promise<IEntityData> {\r\n  const { images, sounds } = lf2;\r\n\r\n  const { small, head } = data.base;\r\n  data.base.fall_value = data.base.fall_value ?? Defines.DEFAULT_FALL_VALUE_MAX;\r\n  data.base.defend_value = data.base.defend_value ?? Defines.DEFAULT_DEFEND_VALUE_MAX;\r\n  data.base.hp = data.base.hp ?? Defines.DEFAULT_HP;\r\n  data.base.mp = data.base.mp ?? Defines.DEFAULT_MP;\r\n\r\n  is_non_blank_str(small) && jobs.push(images.load_img(small, small));\r\n  is_non_blank_str(head) && jobs.push(images.load_img(head, head));\r\n  data.base.dead_sounds?.forEach(i => is_non_blank_str(i) && sounds.load(i, i));\r\n  data.base.drop_sounds?.forEach(i => is_non_blank_str(i) && sounds.load(i, i));\r\n  data.base.hit_sounds?.forEach(i => is_non_blank_str(i) && sounds.load(i, i));\r\n\r\n  if (data.on_dead) data.on_dead = preprocess_next_frame(data.on_dead);\r\n  if (data.on_exhaustion) data.on_exhaustion = preprocess_next_frame(data.on_exhaustion);\r\n  const { frames, base: { files } } = data;\r\n\r\n  traversal(files, (_, v) => jobs.push(images.load_by_e_pic_info(v)));\r\n  if (jobs.length) await Promise.all(jobs);\r\n\r\n  traversal(frames, (k, v, o) => o[k] = preprocess_frame(lf2, data, v, jobs));\r\n  traversal(frames, (_, v) => {\r\n    const errors: string[] = []\r\n    check_frame(data, v, errors)\r\n    if (errors.length) Ditto.warn(errors)\r\n  });\r\n  traversal(data.base.bot?.actions, (_, a) => {\r\n    if (!a) return;\r\n    if (a.expression) a.judger = new Expression(a.expression, get_val_from_bot_ctrl)\r\n  })\r\n  traversal(data.base.bot?.frames, (k, v, o) => {\r\n    if (!v) return;\r\n    const ks = k.split(',')\r\n    if (ks.length <= 1) return;\r\n    delete o[k];\r\n    for (const k of ks)\r\n      o[k] = [...v];\r\n  })\r\n  traversal(data.base.bot?.states, (k, v, o) => {\r\n    if (!v) return;\r\n    const ks = (\"\" + k).split(',')\r\n    if (ks.length <= 1) return;\r\n    delete o[k];\r\n    for (const k of ks)\r\n      o[k as any] = [...v];\r\n  })\r\n  return data;\r\n}\r\n\r\n\r\n","\r\nfunction split_path(path: string, suffix: string): [string, string, string] | undefined {\r\n  if (!path.endsWith(suffix)) return\r\n  const name_index = path.lastIndexOf('/')\r\n  const dir_part = path.substring(0, name_index + 1)\r\n  const name_part = path.substring(name_index + 1, path.length - suffix.length)\r\n  return [dir_part, name_part, suffix]\r\n}\r\n\r\n\r\n/**\r\n * 获取后备名\r\n *\r\n * @export\r\n * @todo 也许使“引入名”变明确才更合适，而不是找好几次\r\n * @param {string} name 引入名\r\n * @returns {string[]} 备选引入名列表\r\n */\r\nexport default function get_import_fallbacks(name: string): [string[], string] {\r\n  const fallbacks = [name];\r\n  let ppp: [string, string, string] | undefined\r\n  if (ppp =\r\n    split_path(name, \".png\") ||\r\n    split_path(name, \".bmp\") ||\r\n    split_path(name, \".webp\")\r\n  ) {\r\n    fallbacks.unshift(...[\r\n      ppp[0] + ppp[1] + \"@4x.webp\",\r\n      ppp[0] + ppp[1] + \"@4x.png\",\r\n      ppp[0] + ppp[1] + \"@3x.webp\",\r\n      ppp[0] + ppp[1] + \"@3x.png\",\r\n      ppp[0] + ppp[1] + \"@2x.webp\",\r\n      ppp[0] + ppp[1] + \"@2x.png\",\r\n      ppp[0] + \"@4x/\" + ppp[1] + \".webp\",\r\n      ppp[0] + \"@4x/\" + ppp[1] + \".png\",\r\n      ppp[0] + \"@3x/\" + ppp[1] + \".webp\",\r\n      ppp[0] + \"@3x/\" + ppp[1] + \".png\",\r\n      ppp[0] + \"@2x/\" + ppp[1] + \".webp\",\r\n      ppp[0] + \"@2x/\" + ppp[1] + \".png\",\r\n      ppp[0] + ppp[1] + \".webp\",\r\n      ppp[0] + ppp[1] + \".png\",\r\n    ].filter((v) => v !== name));\r\n    return [fallbacks, ppp[2]];\r\n  }\r\n\r\n  /*\r\n  举例：\r\n    输入 a.wav\r\n    输出 [a.mp3, a.wav.mp3, a.wav]\r\n  */\r\n  if (\r\n    ppp =\r\n    split_path(name, \".wav\") ||\r\n    split_path(name, \".wma\")\r\n  ) {\r\n    fallbacks.unshift(\r\n      ppp[0] + ppp[1] + '.mp3',\r\n      ppp[0] + ppp[1] + ppp[2] + '.mp3',\r\n    )\r\n    return [fallbacks, ppp[2]];\r\n  }\r\n  return [fallbacks, '']\r\n}\r\n","import json5 from \"json5\";\r\nimport { Callbacks } from \"./base\";\r\nimport type { TKeys } from \"./controller/BaseController\";\r\nimport { CtrlDevice } from \"./controller/CtrlDevice\";\r\nimport { Defines, GameKey } from \"./defines\";\r\nimport { IPurePlayerInfo } from \"./defines/IPurePlayerInfo\";\r\nimport { Ditto } from \"./ditto\";\r\nimport { IDebugging, make_debugging } from \"./entity/make_debugging\";\r\nimport { IPlayerInfoCallback } from \"./IPlayerInfoCallback\";\r\nimport { is_str } from \"./utils/type_check\";\r\n\r\nexport class PlayerInfo implements IDebugging {\r\n  static readonly TAG = \"PlayerInfo\";\r\n  static readonly DATA_TYPE: string = 'PlayerInfo';\r\n  static readonly DATA_VERSION: number = 1;\r\n  __debugging?: boolean\r\n  readonly callbacks = new Callbacks<IPlayerInfoCallback>();\r\n  protected _info: IPurePlayerInfo;\r\n  protected _joined: boolean = false;\r\n  protected _is_com: boolean = false;\r\n  protected _team_decided: boolean = false;\r\n  protected _character_decided: boolean = false;\r\n  protected _random_character: string = \"\";\r\n  get id(): string { return this._info.id; }\r\n  get storage_key() { return \"player_info_\" + this.id; }\r\n  get name(): string { return this._info.name; }\r\n  set name(v: string) { this._info.name = v; this.debug('setter:name', v) }\r\n  get keys(): TKeys { return this._info.keys; }\r\n  get team(): string { return this._info.team; }\r\n  set team(v: string) { this._info.team = v; this.debug('setter:team', v) }\r\n  get character(): string { return this._info.character || this._random_character; }\r\n  set character(v: string) { this._info.character = v; this.debug('setter:character', v) }\r\n  get random_character() { return this._random_character; }\r\n  set random_character(v: string) { this._random_character = v; this.debug('setter:random_character', v) }\r\n  get is_random() { return !this._info.character; }\r\n  get joined(): boolean { return this._joined; }\r\n  set joined(v: boolean) { this._joined = v; this.debug('setter:joined', v) }\r\n  get is_com(): boolean { return this._is_com; }\r\n  set is_com(v: boolean) { this._is_com = v; this.debug('setter:is_com', v) }\r\n  get team_decided(): boolean { return this._team_decided; }\r\n  set team_decided(v: boolean) { this._team_decided = v; this.debug('setter:team_decided', v) }\r\n  get character_decided(): boolean { return this._character_decided; }\r\n  set character_decided(v: boolean) { this._character_decided = v; this.debug('setter:character_decided', v) }\r\n\r\n  get ctrl(): CtrlDevice { return this._info.ctrl; }\r\n  set ctrl(v: CtrlDevice) { this._info.ctrl = v; this.debug('setter:ctrl', v) }\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string = id,\r\n    keys: TKeys = Defines.get_default_keys(id),\r\n  ) {\r\n    this._info = {\r\n      id, name, keys, team: \"\",\r\n      version: 0, character: \"\",\r\n      ctrl: CtrlDevice.Keyboard\r\n    };\r\n    this.load();\r\n    make_debugging(this)\r\n  }\r\n  debug(func: string, ...args: any[]): void { }\r\n  warn(func: string, ...args: any[]): void { }\r\n  log(func: string, ...args: any[]): void { }\r\n\r\n  save(): void {\r\n    Ditto.Cache.del(this.storage_key).then(() => {\r\n      Ditto.Cache.put({\r\n        name: this.storage_key,\r\n        type: PlayerInfo.DATA_TYPE,\r\n        version: PlayerInfo.DATA_VERSION,\r\n        data: new TextEncoder().encode(JSON.stringify(this._info)),\r\n      })\r\n    })\r\n  }\r\n\r\n  load() {\r\n    Ditto.Cache.get(this.storage_key).then((r) => {\r\n      if (!r) return\r\n      const { data } = r\r\n      try {\r\n        const raw_text = new TextDecoder().decode(data);\r\n        const raw_info = json5.parse<Partial<IPurePlayerInfo>>(raw_text);\r\n        const { name, keys, ctrl = this.ctrl, version } = raw_info;\r\n        if (version !== this._info.version) {\r\n          this.warn(\"load\", \"version changed\");\r\n          return false;\r\n        }\r\n        if (is_str(name)) this.set_name(name, true)\r\n        if (keys) for (const k in keys) this.set_key(k, keys[k as keyof typeof keys], true)\r\n        if (ctrl !== this.ctrl) this.set_ctrl(ctrl, true)\r\n        return true;\r\n      } catch (e) {\r\n        this.warn(\"load\", \"load failed, \", e);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n  set_ctrl(ctrl: CtrlDevice, emit: boolean): this {\r\n    const prev = this._info.ctrl;\r\n    if (prev === ctrl) return this;\r\n    this.ctrl = ctrl;\r\n    if (emit) this.callbacks.emit(\"on_ctrl_changed\")(ctrl, prev);\r\n    return this;\r\n  }\r\n  set_name(name: string, emit: boolean): this {\r\n    const prev = this._info.name;\r\n    if (prev === name) return this;\r\n    this.name = name;\r\n    if (emit) this.callbacks.emit(\"on_name_changed\")(name, prev);\r\n    return this;\r\n  }\r\n\r\n  set_character(character: string, emit: boolean): this {\r\n    const prev = this._info.character;\r\n    if (prev === character) return this;\r\n    this.character = character;\r\n    if (emit) this.callbacks.emit(\"on_character_changed\")(character, prev);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置随机中的角色ID\r\n   *\r\n   * @param {string} character 角色ID，空字符串视为未设置\r\n   * @returns {this}\r\n   */\r\n  set_random_character(character: string, emit: boolean): this {\r\n    const prev = this._random_character;\r\n    if (prev === character) return this;\r\n    this.random_character = character;\r\n    if (emit) this.callbacks.emit(\"on_random_character_changed\")(character, prev);\r\n    return this;\r\n  }\r\n\r\n  set_team(team: string, emit: boolean): this {\r\n    const prev = this._info.team;\r\n    if (prev === team) return this;\r\n    this.team = team;\r\n    if (emit) this.callbacks.emit(\"on_team_changed\")(team, prev);\r\n    return this;\r\n  }\r\n\r\n  set_joined(joined: boolean, emit: boolean): this {\r\n    if (this._joined === joined) return this;\r\n    this.joined = joined;\r\n    if (emit) this.callbacks.emit(\"on_joined_changed\")(joined);\r\n    return this;\r\n  }\r\n\r\n  set_is_com(is_com: boolean, emit: boolean): this {\r\n    if (this._is_com === is_com) return this;\r\n    this.is_com = is_com;\r\n    if (emit) this.callbacks.emit(\"on_is_com_changed\")(is_com);\r\n    return this;\r\n  }\r\n\r\n  set_character_decided(is_decided: boolean, emit: boolean): this {\r\n    if (this._character_decided === is_decided) return this;\r\n    this.character_decided = is_decided;\r\n    if (emit) this.callbacks.emit(\"on_character_decided\")(is_decided);\r\n    return this;\r\n  }\r\n\r\n  set_team_decided(is_decided: boolean, emit: boolean): this {\r\n    if (this._team_decided === is_decided) return this;\r\n    this.team_decided = is_decided;\r\n    if (emit) this.callbacks.emit(\"on_team_decided\")(is_decided);\r\n    return this;\r\n  }\r\n\r\n  set_key(name: string, key: string, emit: boolean): this;\r\n  set_key(name: GameKey, key: string, emit: boolean): this;\r\n  set_key(name: GameKey, key: string, emit: boolean): this {\r\n    if (this._info.keys[name] === key) return this;\r\n    const prev = this._info.keys[name];\r\n    this._info.keys[name] = key.toLowerCase();\r\n    if (emit) this.callbacks.emit(\"on_key_changed\")(name, key.toLowerCase(), prev);\r\n    return this;\r\n  }\r\n\r\n  get_key(name: string): string | undefined;\r\n  get_key(name: GameKey): string;\r\n  get_key(name: GameKey): string {\r\n    return this._info.keys[name];\r\n  }\r\n}","import type { IBgLayerInfo } from \"../defines/IBgLayerInfo\";\r\nimport type { Background } from \"./Background\";\r\nexport class Layer {\r\n  readonly bg: Background;\r\n  readonly info: IBgLayerInfo;\r\n  visible = false;\r\n  constructor(bg: Background, info: IBgLayerInfo) {\r\n    this.bg = bg;\r\n    this.info = info;\r\n  }\r\n  update(count: number) {\r\n    const { info: { c1, c2, cc } } = this;\r\n    if (cc !== void 0 && c1 !== void 0 && c2 !== void 0) {\r\n      const now = count % cc;\r\n      this.visible = now >= c1 && now <= c2;\r\n    } else {\r\n      this.visible = true;\r\n    }\r\n  }\r\n  dispose() {\r\n  }\r\n}\r\n\r\nexport default Layer;","import type { World } from \"../World\";\r\nimport { type IBgData, type IBgLayerInfo } from \"../defines\";\r\nimport Layer from \"./Layer\";\r\n\r\nexport class Background {\r\n  readonly data: Readonly<IBgData>;\r\n  private _layers: Layer[] = [];\r\n  get name(): string {\r\n    return this.data.base.name\r\n  }\r\n  get id(): string {\r\n    return this.data.id;\r\n  }\r\n  get left(): number {\r\n    return this.data.base.left;\r\n  }\r\n  get right(): number {\r\n    return this.data.base.right;\r\n  }\r\n  get near(): number {\r\n    return this.data.base.near;\r\n  }\r\n  get far(): number {\r\n    return this.data.base.far;\r\n  }\r\n  get layers(): ReadonlyArray<Layer> {\r\n    return this._layers;\r\n  }\r\n  readonly width: number;\r\n  readonly depth: number;\r\n\r\n  readonly middle: { x: number; z: number };\r\n  readonly world: World;\r\n  private _update_times = 0;\r\n\r\n  constructor(world: World, data: IBgData) {\r\n    this.data = data;\r\n    this.world = world;\r\n\r\n    this.width = this.data.base.right - this.data.base.left;\r\n    this.depth = this.data.base.near - this.data.base.far;\r\n    this.middle = {\r\n      x: (this.data.base.right + this.data.base.left) / 2,\r\n      z: (this.data.base.far + this.data.base.near) / 2,\r\n    };\r\n    for (const info of data.layers)\r\n      this.add_layer(info);\r\n  }\r\n\r\n  private add_layer(info: IBgLayerInfo) {\r\n    let { x, loop = 0 } = info;\r\n    if (loop <= 0) {\r\n      this._layers.push(new Layer(this, info))\r\n      return;\r\n    } else {\r\n      const right = this.width + loop;\r\n      for (x -= loop; x < right; x += loop) {\r\n        this._layers.push(new Layer(this, { ...info, x }));\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this._update_times++;\r\n    for (const layer of this._layers)\r\n      layer.update(this._update_times);\r\n  }\r\n\r\n  dispose() {\r\n    for (const layer of this._layers)\r\n      layer.dispose()\r\n    this._layers.length = 0\r\n  }\r\n\r\n}\r\n\r\n","import { Defines, Difficulty, IEntityData, IStageObjectInfo } from \"../defines\";\r\nimport { TeamEnum } from \"../defines/TeamEnum\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { Factory } from \"../entity/Factory\";\r\nimport IEntityCallbacks from \"../entity/IEntityCallbacks\";\r\nimport { is_character, is_weapon } from \"../entity/type_check\";\r\nimport { Randoming } from \"../helper/Randoming\";\r\nimport { floor } from \"../utils\";\r\nimport { is_num, is_str } from \"../utils/type_check\";\r\nimport { Stage } from \"./Stage\";\r\n\r\nexport default class Item {\r\n  times: number | undefined;\r\n  data?: IEntityData | undefined;\r\n  randoming?: Randoming<Randoming<IEntityData>>;\r\n\r\n  get lf2() {\r\n    return this.stage.lf2;\r\n  }\r\n  get world() {\r\n    return this.stage.world;\r\n  }\r\n  readonly info: Readonly<IStageObjectInfo>;\r\n  readonly fighters = new Set<Entity>();\r\n  readonly stage: Stage;\r\n  readonly entity_cb: IEntityCallbacks = {\r\n    on_team_changed: (e) => {\r\n      this.fighters.delete(e); // 被移除\r\n      if (e.team !== this.stage.team) {\r\n        this.entity_cb.on_disposed?.(e)\r\n      }\r\n    },\r\n    on_disposed: (e: Entity): void => {\r\n      e.callbacks.del(this.entity_cb);\r\n      if (this.info.is_soldier) {\r\n        if (this.stage.all_boss_dead()) {\r\n          this.dispose();\r\n        } else if (this.times === void 0 || this.times >= 1) {\r\n          this.spawn();\r\n        } else {\r\n          this.dispose();\r\n        }\r\n      } else if (this.times && this.times >= 1) {\r\n        this.spawn();\r\n      } else {\r\n        this.dispose();\r\n      }\r\n\r\n      if (this.stage.all_enemies_dead())\r\n        this.stage.enter_phase(this.stage.phase_idx + 1);\r\n\r\n    },\r\n  };\r\n  constructor(stage: Stage, info: IStageObjectInfo) {\r\n    this.stage = stage;\r\n    this.info = info;\r\n    this.times = info.times ? floor(info.times) : void 0;\r\n    const data_list: IEntityData[] = [];\r\n    const randoming_list: Randoming<IEntityData>[] = []\r\n    for (const oid of this.info.id) {\r\n      const data = this.lf2.datas.find(oid);\r\n      if (data) {\r\n        data_list.push(data);\r\n        continue;\r\n      }\r\n      const randoming = this.lf2.datas.get_randoming_by_group(oid)\r\n      if (randoming.src.length) randoming_list.push(randoming);\r\n    }\r\n    if (data_list.length === 1 && !randoming_list.length) {\r\n      this.data = data_list[0]\r\n    } else if (data_list.length && !randoming_list.length) {\r\n      randoming_list.push(new Randoming(data_list, this.lf2))\r\n    } else if (!data_list.length && randoming_list.length) {\r\n      this.randoming = new Randoming(randoming_list, stage.lf2)\r\n    } else if (data_list.length && randoming_list.length) {\r\n      randoming_list.push(new Randoming(data_list, this.lf2))\r\n      this.randoming = new Randoming(randoming_list, stage.lf2)\r\n    } else {\r\n      debugger;\r\n    }\r\n  }\r\n\r\n  spawn(\r\n    range_x: number = 100,\r\n    range_y: number = 0,\r\n    range_z: number = 0,\r\n  ): boolean {\r\n    const data = this.data || this.randoming?.take().take();\r\n    if (!data) { debugger; return false; }\r\n    const creator = Factory.inst.get_entity_creator(data.type);\r\n    if (!creator) { debugger; return false; }\r\n\r\n    let { hp, act, x, y, z, reserve, hp_map, mp, mp_map } = this.info;\r\n    if (this.times) this.times--;\r\n    const e = creator(this.world, data);\r\n    e.ctrl = Factory.inst.get_ctrl(e.data.id, \"\", e);\r\n    e.dead_gone = true;\r\n    e.reserve = reserve ?? 0;\r\n    e.position.x = this.lf2.random_in(x, x + range_x);\r\n    e.position.z = is_num(z)\r\n      ? this.lf2.random_in(z - range_z, z + range_z)\r\n      : this.lf2.random_in(this.stage.near, this.stage.far);\r\n    if (this.info.join)\r\n      e.dead_join = {\r\n        hp: this.info.join,\r\n        team: this.info.join_team ?? TeamEnum.Team_1\r\n      }\r\n\r\n    let _hp = hp_map?.[this.lf2.difficulty]\r\n    if (!is_num(_hp) && is_num(hp)) {\r\n      switch (this.lf2.difficulty) {\r\n        case Difficulty.Easy: _hp = floor(hp * 3 / 4); break;\r\n        case Difficulty.Crazy: _hp = floor(hp * 3 / 2); break;\r\n        default: _hp = hp;\r\n      }\r\n    }\r\n    if (is_num(_hp)) e.hp = e.hp_r = e.hp_max = _hp;\r\n\r\n    let _mp = mp_map?.[this.lf2.difficulty]\r\n    if (is_num(mp) && !is_num(_mp)) _mp = mp;\r\n    if (is_num(_mp)) e.mp = e.mp_max = _mp;\r\n\r\n    if (is_num(y)) e.position.y = y;\r\n\r\n    if (is_character(e)) {\r\n      e.name = e.data.base.name;\r\n    } else if (is_weapon(e) && !is_num(y)) {\r\n      e.position.y = 450;\r\n    }\r\n    e.team = this.stage.team;\r\n    e.attach();\r\n    e.callbacks.add(this.entity_cb);\r\n\r\n    if (is_str(act)) e.enter_frame({ id: act });\r\n    else e.enter_frame(Defines.NEXT_FRAME_AUTO);\r\n\r\n    if (is_character(e)) this.fighters.add(e);\r\n    return true;\r\n  }\r\n\r\n  dispose(): void {\r\n    this.stage.items.delete(this);\r\n    for (const e of this.fighters) {\r\n      e.callbacks.del(this.entity_cb);\r\n    }\r\n  }\r\n}\r\n","export enum Status {\r\n  Running = 'Running',\r\n  Completed = 'Completed',\r\n  End = 'End'\r\n}\r\n","import type { World } from \"../World\";\r\nimport Callbacks from \"../base/Callbacks\";\r\nimport FSM from \"../base/FSM\";\r\nimport { new_team } from \"../base/new_id\";\r\nimport { Background } from \"../bg/Background\";\r\nimport { Defines, Difficulty, IBgData, IStageInfo, IStageObjectInfo, IStagePhaseInfo } from \"../defines\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { Entity } from \"../entity/Entity\";\r\nimport { is_character, is_weapon } from \"../entity/type_check\";\r\nimport { floor, min } from \"../utils\";\r\nimport { find } from \"../utils/container_help/find\";\r\nimport { is_num } from \"../utils/type_check\";\r\nimport type IStageCallbacks from \"./IStageCallbacks\";\r\nimport Item from \"./Item\";\r\nimport { Status } from \"./Status\";\r\n\r\nexport class Stage implements Readonly<Omit<IStageInfo, 'bg'>> {\r\n  static readonly TAG: string = \"Stage\";\r\n  readonly world: World;\r\n  readonly data: IStageInfo;\r\n  readonly next_stage?: IStageInfo;\r\n  readonly team: string;\r\n  readonly callbacks = new Callbacks<IStageCallbacks>();\r\n  private _disposed: boolean = false;\r\n  private _disposers: (() => void)[] = [];\r\n  private _bg: Background;\r\n  private _phase_idx: number = 0;\r\n  private _phase: IStagePhaseInfo | undefined;\r\n  readonly items = new Set<Item>();\r\n  private _is_stage_finish: boolean = false;\r\n  private _is_chapter_finish: boolean = false;\r\n\r\n  /** 节是否结束 */\r\n  get is_stage_finish(): boolean { return this._is_stage_finish; }\r\n  /** 章是否结束 */\r\n  get is_chapter_finish(): boolean { return this._is_chapter_finish }\r\n\r\n  get bg(): Background { return this._bg; }\r\n  get phases() { return this.data.phases }\r\n  get id(): string { return this.data.name; }\r\n  get name(): string { return this.data.name; }\r\n\r\n  get lf2() { return this.world.lf2; }\r\n  get time() { return this.fsm.time; }\r\n\r\n  get phase_idx(): number { return this._phase_idx };\r\n  get phase(): IStagePhaseInfo | undefined { return this._phase; };\r\n\r\n  /** 左边界 */\r\n  left: number;\r\n  /** 右边界 */\r\n  right: number;\r\n  near: number;\r\n  far: number;\r\n  width: number;\r\n  depth: number;\r\n  middle: { x: number; z: number; };\r\n  /** 玩家左边界 */\r\n  player_l: number;\r\n  /** 玩家右边界 */\r\n  player_r: number;\r\n  /** 相机左边界 */\r\n  cam_l: number;\r\n  /** 相机右边界 */\r\n  cam_r: number;\r\n  /** 敌人左边界 */\r\n  enemy_l: number;\r\n  /** 敌人右边界 */\r\n  enemy_r: number;\r\n  /** 饮料左边界 */\r\n  drink_l: number;\r\n  /** 饮料右边界 */\r\n  drink_r: number;\r\n\r\n  change_bg(data: IBgData): Background {\r\n    // FIXME: so messed up here...\r\n    if (this._bg) {\r\n      if (this._bg.data.id === data.id) return this._bg;\r\n      this._bg.dispose();\r\n    }\r\n    const world_stage = this.world.stage;\r\n    if (world_stage && this.world.bg.data.id === data.id)\r\n      return this._bg = this.world.bg\r\n\r\n    this._bg = new Background(this.world, data)\r\n    this.left = this.cam_l = this.player_l = this.enemy_l = this._bg.left\r\n    this.right = this.cam_r = this.player_r = this.enemy_r = this._bg.right\r\n    this.near = this._bg.near;\r\n    this.far = this._bg.far;\r\n    this.width = this._bg.width;\r\n    this.depth = this._bg.depth;\r\n    this.middle = this._bg.middle;\r\n    this.drink_l = -1000;\r\n    this.drink_r = this.bg.width + 1000\r\n    return this._bg;\r\n  }\r\n  constructor(world: World, data: IStageInfo | IBgData) {\r\n    this.world = world;\r\n    if (\"type\" in data && data.type === \"background\") {\r\n      this.data = Defines.VOID_STAGE;\r\n      this._bg = this.change_bg(data);\r\n    } else if (\"bg\" in data) {\r\n      this.data = data;\r\n      const bg_id = this.data.bg;\r\n      const bg_data = this.world.lf2.datas.backgrounds.find(\r\n        (v) => v.id === bg_id || v.id === \"bg_\" + bg_id,\r\n      ); // FIXME;\r\n      if (!bg_data && bg_id !== Defines.VOID_BG.id)\r\n        Ditto.warn(Stage.TAG + \"::constructor\", `bg_data not found, id: ${bg_id}`);\r\n      this._bg = this.change_bg(bg_data ?? Defines.VOID_BG);\r\n    } else {\r\n      this.data = Defines.VOID_STAGE;\r\n      this._bg = this.change_bg(Defines.VOID_BG);\r\n    }\r\n    this.left = this.cam_l = this.player_l = this.enemy_l = this._bg.left\r\n    this.right = this.cam_r = this.player_r = this.enemy_r = this._bg.right\r\n    this.near = this._bg.near;\r\n    this.far = this._bg.far;\r\n    this.width = this._bg.width;\r\n    this.depth = this._bg.depth;\r\n    this.middle = this._bg.middle;\r\n    this.drink_l = -1000;\r\n    this.drink_r = this.bg.width + 1000\r\n    if (this.data.next)\r\n      this.next_stage = this.lf2.stages.find(v => v.id === this.data.next);\r\n    this.team = new_team();\r\n  }\r\n\r\n  readonly fsm = new FSM<Status>().add({\r\n    key: Status.Running,\r\n    update: () => {\r\n      if (this._is_stage_finish) return Status.Completed;\r\n    }\r\n  }, {\r\n    key: Status.Completed,\r\n    enter: () => {\r\n      this.callbacks.emit('on_stage_finish')(this)\r\n      if (this.is_chapter_finish) this.callbacks.emit('on_chapter_finish')(this)\r\n    },\r\n    update: () => {\r\n      if (this.should_goto_next_stage) {\r\n        this.callbacks.emit('on_requrie_goto_next_stage')(this)\r\n        return Status.End;\r\n      }\r\n    }\r\n  }, {\r\n    key: Status.End\r\n  }).use(Status.Running)\r\n\r\n  private _stop_bgm?: () => void;\r\n\r\n  private play_phase_bgm() {\r\n    const { phase } = this\r\n    if (!phase) return;\r\n    const { music } = phase;\r\n    if (!music) return;\r\n    this._stop_bgm = this.lf2.sounds.play_bgm(music);\r\n  }\r\n\r\n  stop_bgm(): void {\r\n    this._stop_bgm?.();\r\n  }\r\n\r\n  private set_phase(phase: IStagePhaseInfo | undefined) {\r\n    if (phase === this.phase) return;\r\n    const prev = this.phase\r\n    this.callbacks.emit(\"on_phase_changed\")(this, this._phase = phase, prev);\r\n    this.player_l = 0\r\n    this.player_r = this.bg.right\r\n    if (!phase) return;\r\n    const { objects, respawn, health_up, mp_up } = phase;\r\n    const hp_recovery = health_up?.[this.lf2.difficulty] || 0;\r\n    const hp_respawn = respawn?.[this.lf2.difficulty] || 0;\r\n    const mp_recovery = mp_up?.[this.lf2.difficulty] || 0;\r\n    const loop_players_fighters = hp_recovery || hp_respawn || mp_recovery\r\n    if (loop_players_fighters) {\r\n      const teams = new Set<string>()\r\n      for (const [, f] of this.world.slot_fighters)\r\n        teams.add(f.team)\r\n      for (const f of this.world.entities) {\r\n        if (!is_character(f) && !teams.has(f.team)) continue;\r\n        if (f.hp <= 0 && hp_respawn) {\r\n          const hp = hp_respawn < 1 ?\r\n            min(f.hp_max * hp_respawn, f.hp_max) :\r\n            min(hp_respawn, f.hp_max)\r\n          f.hp = f.hp_r = hp;\r\n        } else if (f.hp > 0 && hp_recovery) {\r\n          const hp = hp_recovery < 1 ?\r\n            min(f.hp_r + (f.hp_max - f.hp_r) * hp_recovery, f.hp_max) :\r\n            min(f.hp_r + hp_recovery, f.hp_max)\r\n          f.hp = f.hp_r = hp\r\n        }\r\n        if (mp_recovery) f.mp = min(f.mp + mp_recovery, f.mp_max)\r\n      }\r\n    }\r\n\r\n    this.play_phase_bgm();\r\n    for (const object of objects) {\r\n      this.spawn_object(object);\r\n    }\r\n    if (is_num(phase.cam_jump_to_x)) {\r\n      this.world.renderer.cam_x = phase.cam_jump_to_x;\r\n    }\r\n\r\n    if (is_num(phase.player_jump_to_x)) {\r\n      const x = phase.player_jump_to_x;\r\n\r\n      const player_teams = new Set<string>();\r\n      for (const [, v] of this.lf2.world.slot_fighters) {\r\n        player_teams.add(v.team);\r\n      }\r\n      for (const entity of this.world.entities) {\r\n        if (is_character(entity) && player_teams.has(entity.team))\r\n          entity.position.x = this.lf2.random_in(x, x + 50);\r\n      }\r\n    }\r\n    this.player_l = phase.player_l ?? 0\r\n    this.cam_l = phase.camera_l ?? 0\r\n    this.enemy_l = phase.enemy_l ?? 0\r\n    this.drink_l = phase.drink_l ?? -1000\r\n    this.player_r = phase.player_r ?? phase.bound ?? this.bg.right\r\n    this.cam_r = phase.camera_r ?? phase.bound ?? this.bg.right\r\n    this.enemy_r = phase.enemy_r ?? phase.bound ?? this.bg.right\r\n    this.drink_r = phase.drink_r ?? (this.bg.right + 1000)\r\n  }\r\n\r\n  enter_phase(idx: number) {\r\n    this.set_phase(this.data.phases[this._phase_idx = idx])\r\n    this._is_stage_finish = this.data.phases.length > 0 && this._phase_idx >= this.data.phases.length\r\n    this._is_chapter_finish = this._is_stage_finish && this.next_stage?.chapter !== this.data.chapter\r\n    return\r\n  }\r\n\r\n  async spawn_object(obj_info: IStageObjectInfo) {\r\n    let count = 0;\r\n    for (const [, c] of this.world.slot_fighters)\r\n      count += c.data.base.ce ?? 1;\r\n    if (!count) count = 1;\r\n\r\n    switch (this.lf2.difficulty) {\r\n      case Difficulty.Crazy:\r\n        count *= 2\r\n        break;\r\n      case Difficulty.Easy:\r\n      case Difficulty.Normal:\r\n      case Difficulty.Difficult:\r\n        break;\r\n    }\r\n    const { ratio, times = 1 } = obj_info;\r\n\r\n    let spawn_count = ratio === void 0 ? 1 : floor(count * ratio);\r\n    if (spawn_count <= 0 || !times) return;\r\n\r\n    while (spawn_count > 0) {\r\n      const stage_object = new Item(this, obj_info);\r\n      stage_object.spawn();\r\n      this.items.add(stage_object);\r\n      --spawn_count;\r\n    }\r\n  }\r\n  kill_all_enemies() {\r\n    for (const o of this.items) {\r\n      for (const e of o.fighters) {\r\n        if (is_character(e) && e.team === this.team) e.hp = 0;\r\n      }\r\n    }\r\n  }\r\n  kill_soliders() {\r\n    for (const o of this.items) {\r\n      if (!o.info.is_soldier) continue;\r\n      for (const e of o.fighters) {\r\n        if (is_character(e) && e.team === this.team) e.hp = 0;\r\n      }\r\n    }\r\n  }\r\n  kill_boss() {\r\n    for (const o of this.items) {\r\n      if (!o.info.is_boss) continue;\r\n      for (const e of o.fighters) {\r\n        if (is_character(e) && e.team === this.team) e.hp = 0;\r\n      }\r\n    }\r\n  }\r\n  kill_others() {\r\n    for (const o of this.items) {\r\n      if (o.info.is_boss || o.info.is_soldier) continue;\r\n      for (const e of o.fighters) {\r\n        if (is_character(e) && e.team === this.team) e.hp = 0;\r\n      }\r\n    }\r\n  }\r\n  dispose() {\r\n    this._disposed = true;\r\n    for (const f of this._disposers) f();\r\n\r\n    if (this._bg !== this.world.bg) this._bg.dispose();\r\n\r\n    for (const item of this.items) item.dispose();\r\n\r\n    const temp: Entity[] = [];\r\n    const player_teams = new Set<string>();\r\n    for (const [, v] of this.lf2.world.slot_fighters) {\r\n      player_teams.add(v.team);\r\n    }\r\n    for (const e of this.world.entities) {\r\n      if (is_character(e) && player_teams.has(e.team)) continue;\r\n      else if (is_weapon(e) && e.holder && player_teams.has(e.holder.team))\r\n        continue;\r\n      temp.push(e);\r\n    }\r\n    this.world.del_entities(temp);\r\n    this.callbacks.clear()\r\n  }\r\n  all_boss_dead(): boolean {\r\n    return !find(this.items, i => i.info.is_boss);\r\n  }\r\n  all_enemies_dead(): boolean {\r\n    return !find(this.items, i => i.fighters.size);\r\n  }\r\n\r\n\r\n  /** 是否应该进入下一关 */\r\n  get should_goto_next_stage(): boolean {\r\n    if (this.is_chapter_finish || !this.is_stage_finish)\r\n      return false;\r\n    return !find(this.world.entities, e => is_character(e) && e.hp > 0 && e.position.x < this.cam_r)\r\n  }\r\n\r\n  update() {\r\n    this.fsm.update(1);\r\n  }\r\n}\r\n","import { Unsafe } from \"../utils\";\nimport { ICookedUIInfo } from \"./ICookedUIInfo\";\nimport { instance_of } from \"../utils\";\n\ntype BaseType = 'string' | 'number' | 'boolean'\nexport type Cls<T> = new (...args: any[]) => T\ntype Judger = ((v: any) => boolean) & { readonly _judger: true }\n/** @deprecated 如有条件，应当更精确的确认内部数据 */\nexport const unsafe_is_object = judger(v => typeof v === 'object' && !Array.isArray(v))\n/** @deprecated 如有条件，应当更精确的确认内部数据 */\nexport const unsafe_is_array = judger(v => Array.isArray(v))\nexport function judger(fn: (v: any) => boolean): Judger {\n  return Object.assign(fn, { _judger: true as true })\n}\nfunction is_judger(v: any): v is Judger {\n  return typeof v === 'function' && v._judger === true;\n}\nexport function find_ui_value(ui_info: ICookedUIInfo, type: 'boolean', name: string): boolean | null;\nexport function find_ui_value(ui_info: ICookedUIInfo, type: 'number', name: string): number | null;\nexport function find_ui_value(ui_info: ICookedUIInfo, type: 'string', name: string): string | null;\nexport function find_ui_value<C>(ui_info: ICookedUIInfo, type: Cls<C>, name: string): C | null;\nexport function find_ui_value<C>(ui_info: ICookedUIInfo, type: Judger, name: string): C | null;\nexport function find_ui_value<T extends BaseType, C>(ui_info: ICookedUIInfo, type: T | Cls<C> | Judger, name: string): C | T | null;\nexport function find_ui_value<T extends BaseType, C>(ui_info: ICookedUIInfo, type: T | Cls<C> | Judger, name: string): C | T | null {\n  const value = ui_info.values?.[name];\n  if (value === null || value === undefined)\n    return ui_info.parent ? find_ui_value(ui_info.parent, type, name) : null\n  if (typeof type === 'string')\n    return typeof value === type ? value : null;\n  if (is_judger(type))\n    return type(value) ? value : null\n  if (instance_of(value, type))\n    return value;\n  return null;\n}\n\n\n\nexport function parse_ui_value(ui_info: ICookedUIInfo, type: 'boolean', value: Unsafe<boolean | string>): boolean | null;\nexport function parse_ui_value(ui_info: ICookedUIInfo, type: 'number', value: Unsafe<number | string>): number | null;\nexport function parse_ui_value(ui_info: ICookedUIInfo, type: 'string', value: Unsafe<string>): Unsafe<string>;\nexport function parse_ui_value(ui_info: ICookedUIInfo, type: 'string', value: string): string;\nexport function parse_ui_value<C>(ui_info: ICookedUIInfo, type: Cls<C>, value: Unsafe<C | string>): C | null\nexport function parse_ui_value<C>(ui_info: ICookedUIInfo, type: Judger, value: Unsafe<C | string>): C | null\nexport function parse_ui_value<T extends BaseType, C>(ui_info: ICookedUIInfo, type: T | Cls<C> | Judger, value: Unsafe<T | string>): C | T | null\nexport function parse_ui_value<T extends BaseType, C>(ui_info: ICookedUIInfo, type: T | Cls<C> | Judger, value: Unsafe<T | string>): C | T | null {\n  if (value === null || value === undefined)\n    return null\n  if (typeof value !== 'string')\n    return value;\n  if (ui_info && value.startsWith(\"$val:\"))\n    return (find_ui_value(ui_info, type, value.substring(5).trim()) ?? value) as T;\n  return value as T;\n}\n","import { LF2 } from \"../LF2\";\r\nimport { is_arr } from \"../utils\";\r\nimport { flat_ui_img_info } from \"./cook_ui_info\";\r\nimport { IUIImgInfo } from \"./IUIImgInfo.dat\";\r\nimport type { TUIImgInfo } from \"./IUIInfo.dat\";\r\n\r\nexport async function ui_load_img(lf2: LF2, img: TUIImgInfo | TUIImgInfo[], output?: IUIImgInfo[]) {\r\n  const imgs = flat_ui_img_info(is_arr(img) ? img : [img], output);\r\n  return await Promise.all(\r\n    imgs.map(img => {\r\n      const { path, x, y, w = 0, h = 0, dw = w, dh = h } = img;\r\n      const img_key = `${path}?x=${x}&y=${y}&w=${w}&h=${h}&dw=${dw}&dh=${dh}`;\r\n      return lf2.images.load_img(img_key, path, [{ type: 'crop', ...img }]);\r\n    })\r\n  );\r\n}\r\n","import { Ditto } from \"../ditto\";\r\nimport { LF2 } from \"../LF2\";\r\nimport { floor, is_str, Unsafe } from \"../utils\";\r\nimport { ICookedUIInfo } from \"./ICookedUIInfo\";\r\nimport { IUIImgInfo } from \"./IUIImgInfo.dat\";\r\nimport type { IUIInfo, TComponentInfo, TUIImgInfo, TUITxtInfo } from \"./IUIInfo.dat\";\r\nimport { ICookedUITxtInfo } from \"./IUITxtInfo.dat\";\r\nimport { judger, parse_ui_value, unsafe_is_object } from \"./read_info_value\";\r\nimport { ui_load_img } from \"./ui_load_img\";\r\nimport { ui_load_txt } from \"./ui_load_txt\";\r\nimport { UINode } from \"./UINode\";\r\nimport read_nums from \"./utils/read_nums\";\r\nimport { validate_ui_img_info } from \"./validate_ui_img_info\";\r\nexport function flat_ui_img_info(imgs: TUIImgInfo[], output?: IUIImgInfo[]): IUIImgInfo[] {\r\n  const ret: IUIImgInfo[] = [];\r\n  for (let img of imgs) {\r\n    const errors: string[] = [];\r\n    img = typeof img === 'string' ? { path: img } : img;\r\n    validate_ui_img_info(img, errors);\r\n    if (errors.length) throw new Error(errors.join('\\n'));\r\n    const { x = 0, y = 0, w = 0, h = 0, col: cols = 1, row: rows = 1, count = 0 } = img;\r\n    let idx = 0;\r\n    for (let row = 0; row < rows && (count <= 0 || idx < count); ++row) {\r\n      for (let col = 0; col < cols && (count <= 0 || idx < count); ++col) {\r\n        const i = { ...img, x: x + col * w, y: y + row * h }\r\n        ret.push(i);\r\n        output?.push(i)\r\n        ++idx;\r\n      }\r\n    }\r\n  }\r\n  return ret;\r\n};\r\nasync function find_ui_template(lf2: LF2, parent: Unsafe<ICookedUIInfo>, template_name: string): Promise<IUIInfo> {\r\n  let raw_template: IUIInfo | undefined = void 0;\r\n  let n: Unsafe<ICookedUIInfo> = parent;\r\n  while (n && !raw_template) {\r\n    raw_template = n.templates?.[template_name];\r\n    n = n.parent;\r\n  }\r\n  if (raw_template) return raw_template;\r\n  try {\r\n    raw_template = await lf2.import_json<IUIInfo>(template_name).then(r => r[0]);\r\n  } catch (e) {\r\n    Ditto.warn(`[${find_ui_template.TAG}] ui template not found! template_name: ${template_name}`)\r\n  }\r\n  return raw_template || {};\r\n}\r\nfind_ui_template.TAG = 'find_ui_template'\r\n\r\n\r\nasync function read_ui_template(lf2: LF2, raw_info: IUIInfo, parent: ICookedUIInfo | undefined): Promise<IUIInfo> {\r\n  const { template: template_name, ...remain_raw_info } = raw_info\r\n  if (!template_name) return raw_info;\r\n  const raw_template: Unsafe<IUIInfo> = await find_ui_template(lf2, parent, template_name);\r\n  remain_raw_info.component;\r\n\r\n  const component: TComponentInfo[] = []\r\n  if (Array.isArray(raw_template.component))\r\n    component.push(...raw_template.component)\r\n  else if (raw_template.component)\r\n    component.push(raw_template.component)\r\n  if (Array.isArray(remain_raw_info.component))\r\n    component.push(...remain_raw_info.component)\r\n  else if (remain_raw_info.component)\r\n    component.push(remain_raw_info.component)\r\n  return {\r\n    ...raw_template,\r\n    ...remain_raw_info,\r\n    component,\r\n    values: {\r\n      ...raw_template.values,\r\n      ...remain_raw_info.values\r\n    }\r\n  };\r\n}\r\nread_ui_template.TAG = 'read_ui_template'\r\n\r\nfunction cook_ui_txt_info(lf2: LF2, ui_info: ICookedUIInfo, raw: TUITxtInfo | TUITxtInfo[] | undefined, out: ICookedUITxtInfo[] = []): ICookedUITxtInfo[] {\r\n  if (!raw) return [];\r\n\r\n  const raws = Array.isArray(raw) ? raw : [raw];\r\n  for (const info of raws) {\r\n    if (!info) continue;\r\n    if (typeof info === 'string') {\r\n      const i18n = parse_ui_value(ui_info, 'string', info) ?? info\r\n      out.push({ i18n: lf2.string(i18n), style: {} })\r\n    } else {\r\n      const i18n = parse_ui_value(ui_info, 'string', info.i18n) ?? ''\r\n      out.push({\r\n        i18n: lf2.string(i18n),\r\n        style: parse_ui_value(ui_info, unsafe_is_object, info.style) ?? {}\r\n      })\r\n    }\r\n  }\r\n  return out\r\n}\r\n\r\nexport async function cook_ui_info(\r\n  lf2: LF2,\r\n  data_or_path: IUIInfo | string,\r\n  parent?: ICookedUIInfo\r\n): Promise<ICookedUIInfo> {\r\n  let raw_info = is_str(data_or_path)\r\n    ? await find_ui_template(lf2, parent, data_or_path)\r\n    : data_or_path;\r\n\r\n  if (raw_info.template) raw_info = await read_ui_template(lf2, raw_info, parent);\r\n  const id = raw_info.id || 'no_id_' + Date.now();\r\n  const name = raw_info.name || 'no_name_' + Date.now();\r\n  const ret: ICookedUIInfo = {\r\n    ...raw_info,\r\n    values: raw_info.values ? raw_info.values : {},\r\n    enabled: false,\r\n    id, name,\r\n    pos: read_nums(raw_info.pos, 3, [0, 0, 0]),\r\n    scale: read_nums(raw_info.scale, 3, [1, 1, 1]),\r\n    center: read_nums(raw_info.center, 3, [0, 0, 0]),\r\n    size: [0, 0],\r\n    parent,\r\n    img_infos: [],\r\n    txt_infos: [],\r\n    items: void 0,\r\n    img: [],\r\n    txt: []\r\n  };\r\n\r\n  ret.enabled = parse_ui_value(ret, 'boolean', raw_info.enabled) ?? true\r\n\r\n  const { img } = raw_info;\r\n  if (img) ret.img_infos.push(...await ui_load_img(lf2, img, ret.img));\r\n\r\n  cook_ui_txt_info(lf2, ret, raw_info.txt, ret.txt)\r\n  await ui_load_txt(lf2, ret.txt, ret.txt_infos)\r\n\r\n  const { w: img_w = 0, h: img_h = 0, scale = 1 } = ret.img_infos[0] || ret.txt_infos[0] || {};\r\n  const sw = img_w / scale;\r\n  const sh = img_h / scale;\r\n  const [w, h] = read_nums(raw_info.size, 2, [parent ? sw : lf2.world.screen_w, parent ? sh : lf2.world.screen_h]);\r\n  // 宽或高其一为0时，使用原图宽高比例的计算之\r\n  const dw = floor(w ? w : sh ? (h * sw / sh) : 0);\r\n  const dh = floor(h ? h : sw ? (w * sh / sw) : 0);\r\n  ret.size = [dw, dh];\r\n  const { items } = raw_info;\r\n  if (items && !Array.isArray(items)) {\r\n    Ditto.warn(`[${UINode.TAG}::cook_ui_info] items must be array, but got`, items);\r\n  }\r\n  if (Array.isArray(items) && items.length) {\r\n    ret.items = [];\r\n    for (const item of items)\r\n      ret.items.push(await cook_ui_info(lf2, item, ret));\r\n  } else {\r\n    delete ret.items;\r\n  }\r\n  return ret;\r\n}","import { LF2 } from \"../LF2\";\r\nimport { ITextImageInfo } from \"../loader/ITextImageInfo\";\r\nimport { ICookedUITxtInfo } from \"./IUITxtInfo.dat\";\r\nexport async function ui_load_txt(lf2: LF2, txt: ICookedUITxtInfo | ICookedUITxtInfo[], out: ITextImageInfo[] = []) {\r\n  const txts = Array.isArray(txt) ? txt : [txt];\r\n  if (!txts.length) return []\r\n  const infos = await Promise.all(\r\n    txts.map(info => {\r\n      const value = lf2.string(info.i18n);\r\n      const r = lf2.images.load_text(value, info.style)\r\n      return r;\r\n    })\r\n  );\r\n  out.push(...infos)\r\n  return infos;\r\n}\r\n","import { max, floor } from \"../utils\";\r\n\r\nexport type TValueInfo<T> =\r\n  | { is_func: true; v: () => T }\r\n  | { is_func: false; v: T };\r\n\r\nexport type Value<T> = T | (() => T)\r\nexport type Unsafe<T> = T | undefined | null;\r\n\r\nexport class StateDelegate<T> {\r\n  protected _dirty: boolean = true\r\n  protected _default_value: TValueInfo<Unsafe<T>>\r\n  protected _values: TValueInfo<Unsafe<T>>[] = [];\r\n  protected get_value(v: TValueInfo<Unsafe<T>>) {\r\n    return v.is_func ? v.v() : v.v;\r\n  }\r\n  protected value_to_state(v: Value<Unsafe<T>>): TValueInfo<Unsafe<T>> {\r\n    return (typeof v === 'function') ? { is_func: true, v: v as () => T } : { is_func: false, v: v };\r\n  }\r\n  set dirty(v: boolean) { this._dirty = v; }\r\n  get dirty() { const r = this._dirty; this._dirty = false; return r; }\r\n  set default_value(v: Value<T>) {\r\n    this._default_value = this.value_to_state(v);\r\n    if (this._values.length === 0) this._dirty = true;\r\n  }\r\n  get default_value(): T { return this.get_value(this._default_value)! }\r\n  set value(v: Value<Unsafe<T>>) { this.set(max(0, this._values.length - 1), v) }\r\n  get value(): T {\r\n    const len = this._values.length;\r\n    for (let i = len - 1; i >= 0; --i) {\r\n      const item = this._values[i]!;\r\n      const value = this.get_value(item);\r\n      if (value !== null && value !== void 0)\r\n        return value\r\n    }\r\n    return this.default_value;\r\n  }\r\n  constructor(default_value: Value<T>) {\r\n    this._default_value = this.value_to_state(default_value);\r\n  }\r\n  set(index: number, v: Value<Unsafe<T>>): void {\r\n    index = floor(index);\r\n    if (index < 0) return;\r\n    this._values[index] = this.value_to_state(v);\r\n    if (index === this._values.length - 1) this._dirty = true;\r\n  }\r\n\r\n  delete(index: number) {\r\n    index = floor(index);\r\n    if (index < 0 || index >= this._values.length) return;\r\n    this._values.splice(index, 1);\r\n    if (index === this._values.length) this._dirty = true;\r\n  }\r\n\r\n  insert(index: number, v: Value<Unsafe<T>>): void {\r\n    index = floor(index);\r\n    this._values.splice(index, 0, this.value_to_state(v));\r\n    if (index >= this._values.length - 1) this._dirty = true;\r\n  }\r\n\r\n  pop() {\r\n    if (!this._values.length) return;\r\n    this._values.pop();\r\n    this._dirty = true;\r\n  }\r\n\r\n  push(...v: Value<Unsafe<T>>[]) {\r\n    this._values.push(...v.map(v => this.value_to_state(v)));\r\n    this._dirty = true;\r\n  }\r\n\r\n  unshift(...v: Value<Unsafe<T>>[]) {\r\n    this._values.unshift(...v.map(v => this.value_to_state(v)));\r\n  }\r\n}\r\nexport default StateDelegate","import { IComponentInfo } from \"../IComponentInfo\";\r\n\r\nexport function parse_call_func_expression(text: string): Required<IComponentInfo> | null {\r\n  const result = text.match(/(<.*>)?(!?)(.*)\\((.*)\\)/);\r\n  if (!result) return null;\r\n  const [, id = '', first, name, args] = result.map(v => v?.trim());\r\n  if (!name) return null;\r\n  if (!args) {\r\n    return {\r\n      id: id.substring(1, id.length - 1),\r\n      name,\r\n      args: [],\r\n      enabled: first !== '!',\r\n      properties: {}\r\n    }\r\n  }\r\n  return {\r\n    id: id.substring(1, id.length - 1),\r\n    name,\r\n    args: args.split(\",\").map(v => v.trim()),\r\n    enabled: first !== '!',\r\n    properties: {}\r\n  }\r\n}\r\n","import { Ditto } from \"../../ditto\";\r\nimport { is_str } from \"../../utils/type_check\";\r\nimport { TAction } from \"../IUIInfo.dat\";\r\nimport type { UINode } from \"../UINode\";\r\nimport { parse_call_func_expression } from \"../utils/parse_call_func_expression\";\r\n\r\ninterface IUIActionHandler {\r\n  (layout: UINode, ...args: string[]): void;\r\n}\r\nclass UIActor {\r\n  static readonly TAG: string = \"Actor\";\r\n  private _handler_map = new Map<string, IUIActionHandler>([\r\n    [\"alert\", (_, msg) => alert(msg)],\r\n    [\"link_to\", (_, url) => window.open(url)],\r\n    [\r\n      \"set_layout\",\r\n      ({ lf2 }, layout_id) => layout_id && lf2.set_ui(layout_id),\r\n    ],\r\n    [\r\n      \"push_layout\",\r\n      ({ lf2 }, layout_id) => layout_id && lf2.push_ui(layout_id),\r\n    ],\r\n    [\"pop_layout\", ({ lf2 }) => lf2.pop_ui()],\r\n    [\"loop_img\", (l) => l.to_next_img()],\r\n    [\r\n      \"load_data\",\r\n      ({ lf2 }, url) => {\r\n        if (lf2.loading) return;\r\n        lf2.load(url).catch((e) => Ditto.warn(`[${UIActor.TAG}::load_data] ${url} not exists, err: ${e}`));\r\n      },\r\n    ],\r\n    [\"broadcast\", ({ lf2 }, message) => message && lf2.broadcast(message)],\r\n    [\"sound\", ({ lf2 }, name) => name && lf2.sounds.play_preset(name)],\r\n    [\"switch_difficulty\", ({ lf2 }) => lf2.switch_difficulty()],\r\n    [\"destory_stage\", ({ lf2 }) => lf2.remove_stage()],\r\n    [\"remove_all_entities\", ({ lf2 }) => lf2.entities.del_all()],\r\n    [\"exit\", () => window.confirm(\"确定退出?\") && window.close()],\r\n  ]);\r\n\r\n  add(key: string, handler: IUIActionHandler): void {\r\n    this._handler_map.set(key, handler);\r\n  }\r\n\r\n  act(layout: UINode, actions: TAction | TAction[]): void {\r\n    if (!Array.isArray(actions)) actions = [actions]\r\n    if (!actions.length) {\r\n      Ditto.warn(`[${UIActor.TAG}::act] failed to act, actions empty`);\r\n      return\r\n    }\r\n    for (const raw of actions) {\r\n      const action = is_str(raw) ? parse_call_func_expression(raw) : raw;\r\n      if (!action) {\r\n        Ditto.warn(`[${UIActor.TAG}::act] failed to act, expression incorrect, expression: ${raw}`)\r\n        continue;\r\n      }\r\n      const { name, args = [] } = action;\r\n      const handler = this._handler_map.get(name);\r\n      if (!handler) {\r\n        Ditto.warn(`[${UIActor.TAG}::act] failed to act, handler not found by name, expression: ${raw}`)\r\n        continue;\r\n      }\r\n      handler(layout, ...args);\r\n    }\r\n  }\r\n\r\n}\r\nconst actor = new UIActor();\r\nexport default actor;\r\n","import { UIComponent } from \"./UIComponent\";\n\n\nexport class Alignment extends UIComponent {\n  static override TAG: string = 'Alignment';\n  override update(dt: number): void {\n    super.update?.(dt);\n  }\n\n}\n","import IStyle from \"../defines/IStyle\";\nimport type { LF2 } from \"../LF2\";\nimport type { TextImageInfo } from \"../loader/TextImageInfo\";\nimport type { ICookedUITxtInfo } from \"./IUITxtInfo.dat\";\nimport { UINode } from \"./UINode\";\nimport { Times } from \"./utils/Times\";\n\nexport class UITextLoader {\n  readonly node: () => UINode;\n  protected _jid = new Times();\n  protected _style: () => IStyle = () => ({});\n  constructor(node: () => UINode) {\n    this.node = node;\n  }\n  private _load_txt(info: ICookedUITxtInfo) {\n    const node = this.node()\n    const value = node.lf2.string(info.i18n);\n    const job = node.lf2.images.load_text(value, info.style);\n    return job;\n  }\n  private _out_of_date(textures?: TextImageInfo[]) {\n    return Object.assign(new Error('out_of_date'), {\n      __is_out_of_date_error: true,\n      textures\n    });\n  }\n  set_style(style: IStyle | (() => IStyle)): this {\n    this._style = typeof style === 'function' ? style : () => style\n    return this;\n  }\n  ignore_out_of_date(): this {\n    this._jid.max = this._jid.min = this._jid.value = 0;\n    return this;\n  }\n  set_text(txts: string[], idx: number | undefined = 0): Promise<TextImageInfo[]> {\n    const _txts = txts.map(i18n => ({ i18n, style: this._style() }))\n    return this.load(_txts, idx)\n  }\n  load(txts: ICookedUITxtInfo[], idx: number | undefined = 0): Promise<TextImageInfo[]> {\n    this._jid.add();\n    const jid = this._jid.value;\n    const node = this.node()\n    return new Promise((resolve, reject) => {\n      if (jid !== this._jid.value) {\n        reject(this._out_of_date());\n        return;\n      }\n      const jobs = txts.map(txt => this._load_txt(txt))\n      Promise.all(jobs).then(textures => {\n        if (jid !== this._jid.value) {\n          throw this._out_of_date(textures);\n        } else if (typeof idx === 'number') {\n          const { w, h, scale } = textures[idx]\n          node.txts.value = textures;\n          node.txt_idx.value = 0;\n          node.size.value = [w / scale, h / scale];\n          resolve(textures);\n        } else {\n          node.txts.value = textures;\n          resolve(textures);\n        }\n      }).catch(reject)\n    });\n  }\n}\n","import { IBgData } from \"../../defines\";\r\nimport { Defines } from \"../../defines/defines\";\r\nimport { UITextLoader } from \"../UITextLoader\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n\r\nexport default class BackgroundNameText extends UIComponent {\r\n  static override readonly TAG = 'BackgroundNameText'\r\n  private _background: IBgData = Defines.RANDOM_BG;\r\n  private _text_loader = new UITextLoader(() => this.node).set_style({\r\n    fill_style: \"#9b9bff\",\r\n    font: \"15px Arial\",\r\n  }).ignore_out_of_date();\r\n\r\n  get backgrounds(): IBgData[] {\r\n    const ret = this.lf2.datas.backgrounds?.filter((v) => v.id !== Defines.VOID_BG.id) || []\r\n    ret.unshift(Defines.RANDOM_BG)\r\n    return ret;\r\n  }\r\n  get background(): IBgData {\r\n    return this._background;\r\n  }\r\n  get text(): string {\r\n    return this._background.base.name;\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.update_text();\r\n    this.lf2.callbacks.add(this)\r\n  }\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.lf2.callbacks.del(this);\r\n  }\r\n  update_text() {\r\n    this._text_loader.set_text([this.text])\r\n  }\r\n  on_broadcast(v: string = Defines.BuiltIn_Broadcast.SwitchBackground) {\r\n    if (v !== Defines.BuiltIn_Broadcast.SwitchBackground) return;\r\n    const { backgrounds } = this;\r\n    if (!backgrounds.length) {\r\n      this._background = Defines.VOID_BG\r\n    } else {\r\n      const background_id = this.background.id;\r\n      const curr_idx = backgrounds.findIndex((v) => v.id === background_id)\r\n      const next_idx = (curr_idx + 1) % backgrounds.length;\r\n      this._background = backgrounds[next_idx]!;\r\n    }\r\n    this.update_text()\r\n  }\r\n}\r\n","/**\r\n * 函数批量调用器\r\n *\r\n * @export\r\n * @class Invoker\r\n * @template {(...args: any[]) => any} [F=() => void]\r\n */\r\nexport default class Invoker<F extends (...args: any[]) => any = () => void> {\r\n  protected _f_list = new Set<F>();\r\n\r\n  /**\r\n   * 添加函数\r\n   *\r\n   * @param {...(F| undefined | null)[]} fn 函数\r\n   * @returns {this}\r\n   */\r\n  add(...fn: (F | undefined | null)[]): this {\r\n    for (const f of fn) f && this._f_list.add(f);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 移除函数\r\n   *\r\n   * @param {...F[]} fn\r\n   * @returns {this}\r\n   */\r\n  del(...fn: F[]): this {\r\n    for (const f of fn) this._f_list.delete(f);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 调用\r\n   *\r\n   * @param {...Parameters<F>} args\r\n   * @returns {ReturnType<F>[]}\r\n   */\r\n  invoke(...args: Parameters<F>): ReturnType<F>[] {\r\n    const ret: ReturnType<F>[] = [];\r\n    for (const f of this._f_list) ret.push(f(...args));\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 清空\r\n   *\r\n   * @returns {this}\r\n   */\r\n  clear(): this {\r\n    this._f_list.clear();\r\n    return this;\r\n  }\r\n\r\n  invoke_and_clear(...args: Parameters<F>): void {\r\n    this.invoke(...args);\r\n    this.clear();\r\n  }\r\n\r\n  clear_fn = (...args: Parameters<F>) => this.invoke_and_clear(...args);\r\n}\r\n","import type { PlayerInfo } from \"../../PlayerInfo\";\r\nimport FSM, { IState } from \"../../base/FSM\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { CheatType, EntityGroup } from \"../../defines\";\r\nimport { LGK } from \"../../defines/GameKey\";\r\nimport { Defines } from \"../../defines/defines\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport GamePrepareLogic, { GamePrepareState } from \"./GamePrepareLogic\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nexport enum SlotSelStatus {\r\n  Empty = 'Empty',\r\n  Fighter = 'Fighter',\r\n  Team = 'Team',\r\n  Ready = 'Ready',\r\n}\r\n\r\ninterface IStateUnit extends IState<SlotSelStatus> {\r\n  on_player_key_down?(e: IUIKeyEvent): void;\r\n}\r\n\r\n/**\r\n * 角色选择逻辑\r\n *\r\n * @export\r\n * @class CharacterSelLogic\r\n * @extends {UIComponent}\r\n */\r\nexport default class SlotSelLogic extends UIComponent {\r\n  static override readonly TAG = \"SlotSelLogic\";\r\n\r\n  get player_id(): string { return this.args[0] || \"\"; }\r\n  get player(): PlayerInfo { return this.lf2.players.get(this.player_id)! }\r\n  get character(): string { return this.player.character; }\r\n  set character(v: string) { this.player.set_character(v, true); this.debug('setter:character', v) }\r\n  get character_decided() { return this.player.character_decided; }\r\n  set character_decided(v: boolean) { this.player.set_character_decided(v, true); this.debug('setter:character_decided', v) }\r\n  get team_decided(): boolean { return this.player.team_decided; }\r\n  set team_decided(v: boolean) { this.player.set_team_decided(v, true); this.debug('setter:team_decided', v) }\r\n  get team(): string { return this.player.team; }\r\n  set team(v: string) { this.player.set_team(v, true); this.debug('setter:is_com', v) }\r\n  get joined(): boolean { return this.player.joined; }\r\n  set joined(v: boolean) { this.player.set_joined(v, true); this.debug('setter:joined', v) }\r\n  get is_com(): boolean { return this.player.is_com; }\r\n  set is_com(v: boolean) { this.player.set_is_com(v, true); this.debug('setter:is_com', v) }\r\n  protected _unmount_jobs = new Invoker();\r\n\r\n  get gpl() {\r\n    return this.node.root.find_component(GamePrepareLogic)!;\r\n  }\r\n\r\n  readonly fsm = new FSM<SlotSelStatus, IStateUnit>().add({\r\n    key: SlotSelStatus.Empty,\r\n    enter: () => {\r\n      this.joined = false;\r\n      this.team_decided = false;\r\n      this.character_decided = false;\r\n      if (this.gpl.state !== GamePrepareState.Computer) this.is_com = false;\r\n      this.player.set_random_character('', true)\r\n    },\r\n    on_player_key_down: (e) => {\r\n      if (this.player_id != e.player && this.gpl.handling_com !== this) return;\r\n      if (e.game_key === 'a') {\r\n        this.fsm.use(SlotSelStatus.Fighter);\r\n        this.lf2.sounds.play_preset(\"join\");\r\n        e.stop_immediate_propagation()\r\n      }\r\n    },\r\n  }, {\r\n    key: SlotSelStatus.Fighter,\r\n    enter: () => {\r\n      this.joined = true\r\n      this.character_decided = false\r\n      this.team_decided = false;\r\n    },\r\n    on_player_key_down: (e) => {\r\n      if (this.player_id != e.player && this.gpl.handling_com !== this) return;\r\n      if (e.game_key === \"j\") this.lf2.sounds.play_preset(\"cancel\");\r\n      if (e.game_key === \"a\") this.lf2.sounds.play_preset(\"join\");\r\n      if (e.game_key === 'a') {\r\n        // 按攻击确认角色,\r\n        this.character_decided = true;\r\n        // 闯关模式下，直接确定为第一队\r\n        if (this.gpl.game_mode === \"stage_mode\") {\r\n          this.team = Defines.TeamEnum.Team_1;\r\n          this.fsm.use(SlotSelStatus.Ready)\r\n        } else {\r\n          this.fsm.use(SlotSelStatus.Team)\r\n        }\r\n        e.stop_immediate_propagation()\r\n      } else if (e.game_key === 'j') {\r\n        // 按跳跃取消加入\r\n        this.fsm.use(SlotSelStatus.Empty);\r\n        if (this.gpl.handling_com === this) {\r\n          this.gpl.handle_prev_com()\r\n        }\r\n        e.stop_immediate_propagation()\r\n      } else {\r\n        this.swtich_fighter(e);\r\n      }\r\n    },\r\n  }, {\r\n    key: SlotSelStatus.Team,\r\n    enter: () => {\r\n      this.joined = true\r\n      this.character_decided = true\r\n      this.team_decided = false;\r\n    }, on_player_key_down: (e) => {\r\n      if (this.player_id != e.player && this.gpl.handling_com !== this) return;\r\n      if (e.game_key === \"j\") this.lf2.sounds.play_preset(\"cancel\");\r\n      if (e.game_key === \"a\") this.lf2.sounds.play_preset(\"join\");\r\n      if (\"a\" === e.game_key) {\r\n        this.fsm.use(SlotSelStatus.Ready);\r\n        e.stop_immediate_propagation()\r\n      } else if (\"j\" === e.game_key) {\r\n        this.fsm.use(SlotSelStatus.Fighter);\r\n        e.stop_immediate_propagation()\r\n      } else {\r\n        this.switch_team(e);\r\n      }\r\n    },\r\n  }, {\r\n    key: SlotSelStatus.Ready,\r\n    enter: () => {\r\n      this.joined = true\r\n      this.character_decided = true\r\n      this.team_decided = true;\r\n      if (this.gpl.handling_com === this) this.gpl.handle_next_com()\r\n    }, on_player_key_down: (e) => {\r\n      if (this.player_id != e.player && this.gpl.handling_com !== this) return;\r\n      if (e.game_key === \"j\") {\r\n        e.stop_immediate_propagation()\r\n        this.lf2.sounds.play_preset(\"cancel\");\r\n        if (this.gpl.game_mode === \"stage_mode\") {\r\n          this.fsm.use(SlotSelStatus.Fighter)\r\n        } else {\r\n          this.fsm.use(SlotSelStatus.Team)\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  private swtich_fighter(e: IUIKeyEvent) {\r\n    if (\"D\" === e.game_key || \"U\" === e.game_key) {\r\n      // 按上或下,回到随机\r\n      this.character = \"\";\r\n      e.stop_immediate_propagation()\r\n    } else if (\"L\" === e.game_key) {\r\n      // 上一个角色\r\n      const { characters } = this;\r\n      const idx = characters.findIndex((v) => v.id === this.character);\r\n      const next = idx <= -1 ? characters.length - 1 : idx - 1;\r\n      this.character = characters[next]?.id ?? \"\";\r\n      e.stop_immediate_propagation()\r\n    } else if (\"R\" === e.game_key) {\r\n      // 下一个角色\r\n      const { characters } = this;\r\n      const idx = characters.findIndex((v) => v.id === this.character);\r\n      const next = idx >= characters.length - 1 ? -1 : idx + 1;\r\n      this.character = characters[next]?.id ?? \"\";\r\n      e.stop_immediate_propagation()\r\n    }\r\n  }\r\n\r\n  private switch_team(e: IUIKeyEvent) {\r\n    if (\"L\" === e.game_key) {\r\n      // 上一个队伍\r\n      const idx = Defines.Teams.findIndex((v) => v === this.team);\r\n      const next_idx = (idx + Defines.Teams.length - 1) % Defines.Teams.length;\r\n      this.team = Defines.Teams[next_idx]!;\r\n      e.stop_immediate_propagation()\r\n    } else if (\"R\" === e.game_key) {\r\n      // 下一个队伍\r\n      const idx = Defines.Teams.findIndex((v) => v === this.team);\r\n      const next_idx = (idx + 1) % Defines.Teams.length;\r\n      this.team = Defines.Teams[next_idx]!;\r\n      e.stop_immediate_propagation()\r\n    }\r\n  }\r\n\r\n  override on_start(): void {\r\n    this.fsm.callbacks.add({\r\n      on_state_changed: (fsm) => this.debug('on_state_changed', `${fsm.prev_state?.key} => ${fsm.state?.key}`)\r\n    })\r\n    this.fsm.use(SlotSelStatus.Empty)\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this._unmount_jobs.add(\r\n      this.lf2.callbacks.add({\r\n        on_cheat_changed: (cheat_name, enabled) => {\r\n          // 当前选择的角色被隐藏时，让玩家选随机\r\n          if (cheat_name === CheatType.LF2_NET && !enabled)\r\n            this.handle_hidden_character();\r\n        },\r\n      }),\r\n    );\r\n    if (!this.lf2.is_cheat_enabled(CheatType.LF2_NET))\r\n      this.handle_hidden_character();\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  get characters() {\r\n    return this.lf2.is_cheat_enabled(CheatType.LF2_NET)\r\n      ? this.lf2.datas.characters\r\n      : this.lf2.datas.get_characters_not_in_group(EntityGroup.Hidden);\r\n  }\r\n\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    if (\r\n      this.gpl.state === GamePrepareState.Player && this.player_id == e.player ||\r\n      this.gpl.state === GamePrepareState.Computer && this.gpl.handling_com === this\r\n    ) this.fsm.state?.on_player_key_down?.(e)\r\n  }\r\n  override update(dt: number): void {\r\n    this.fsm.update(dt)\r\n  }\r\n  /**\r\n   * 当前选择的角色被隐藏时，让玩家选随机\r\n   *\r\n   * @protected\r\n   */\r\n  protected handle_hidden_character() {\r\n    const { characters, character } = this;\r\n    if (!character) return;\r\n    const idx = characters.findIndex((v) => v.id === character);\r\n    if (idx < 0) this.player.set_character(\"\", true);\r\n  }\r\n}\r\n","import { CheatType, IStageInfo } from \"../../defines\";\r\nimport { Defines } from \"../../defines/defines\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport default class StageNameText extends UIComponent {\r\n  static override readonly TAG = 'StageNameText'\r\n\r\n  private _stage: IStageInfo = Defines.VOID_STAGE;\r\n  get show_all(): boolean {\r\n    return this.lf2.is_cheat_enabled(CheatType.GIM_INK);\r\n  }\r\n  get stages(): IStageInfo[] {\r\n    const ret =\r\n      this.lf2.stages?.filter((v) => v.id !== Defines.VOID_STAGE.id) || [];\r\n    if (this.show_all) return ret;\r\n    return ret.filter((v) => v.is_starting);\r\n  }\r\n  get stage(): IStageInfo {\r\n    return this._stage;\r\n  }\r\n  get text(): string {\r\n    if (this.show_all) return this._stage.name;\r\n    return this._stage.starting_name ?? this._stage.name;\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    if (this._stage === Defines.VOID_STAGE) this.on_broadcast();\r\n    this.lf2.callbacks.add(this)\r\n  }\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.lf2.callbacks.del(this);\r\n  }\r\n  on_broadcast(v: string = Defines.BuiltIn_Broadcast.SwitchStage) {\r\n    if (v !== Defines.BuiltIn_Broadcast.SwitchStage) return\r\n    const { stages } = this;\r\n    if (!stages.length) {\r\n      this._stage = Defines.VOID_STAGE;\r\n    } else {\r\n      const state_id = this.stage.id;\r\n      const curr_idx = stages.findIndex((v) => v.id === state_id);\r\n      const next_idx = (curr_idx + 1) % stages.length;\r\n      this._stage = stages[next_idx]!;\r\n    }\r\n\r\n    ui_load_txt(this.lf2, {\r\n      i18n: this.text, style: {\r\n        fill_style: \"#9b9bff\",\r\n        font: \"15px Arial\",\r\n      }\r\n    }).then(v => {\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n  }\r\n}\r\n","import { new_team } from \"../../base\";\r\nimport FSM, { IState } from \"../../base/FSM\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport LocalController from \"../../controller/LocalController\";\r\nimport { EntityGroup, FacingFlag } from \"../../defines\";\r\nimport { Defines, TFace } from \"../../defines/defines\";\r\nimport { Entity } from \"../../entity/Entity\";\r\nimport { Factory } from \"../../entity/Factory\";\r\nimport { ceil, max } from \"../../utils\";\r\nimport { map_no_void } from \"../../utils/container_help/map_no_void\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport BackgroundNameText from \"./BackgroundNameText\";\r\nimport { IUICompnentCallbacks } from \"./IUICompnentCallbacks\";\r\nimport SlotSelLogic, { SlotSelStatus } from \"./SlotSelLogic\";\r\nimport StageNameText from \"./StageNameText\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport interface IGamePrepareLogicCallback extends IUICompnentCallbacks {\r\n  on_countdown?(v: number): void;\r\n}\r\nexport enum GamePrepareState {\r\n  Player = \"Player\",\r\n  CountingDown = \"CountingDown\",\r\n  ComNumberSel = \"ComNumberSel\",\r\n  Computer = \"Computer\",\r\n  GameSetting = \"GameSetting\",\r\n}\r\n\r\nexport interface IGamePrepareState extends IState<GamePrepareState> {\r\n  on_player_key_down?(e: IUIKeyEvent): void\r\n}\r\n\r\nexport default class GamePrepareLogic extends UIComponent<IGamePrepareLogicCallback> {\r\n  static override readonly TAG = 'GamePrepareLogic'\r\n  get game_mode(): string { return this.args[0] || ''; }\r\n  protected _unmount_jobs = new Invoker();\r\n  get state(): GamePrepareState {\r\n    return this.fsm.state?.key!;\r\n  }\r\n\r\n  private _count_down: number = 5000;\r\n\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    const background_row = this.node.search_child(\"background_row\")!;\r\n    const stage_row = this.node.search_child(\"stage_row\")!;\r\n    if (this.game_mode === \"stage_mode\") {\r\n      stage_row.set_visible(true).set_disabled(false);\r\n      background_row.set_visible(false).set_disabled(true);\r\n    } else {\r\n      background_row.set_visible(true).set_disabled(false);\r\n      stage_row.set_visible(false).set_disabled(true);\r\n    }\r\n\r\n    // this.fsm.use(GamePrepareState.Player);\r\n    this._unmount_jobs.add(\r\n      ...map_no_void(this.lf2.players.values(), (v) =>\r\n        v.callbacks.add({\r\n          on_joined_changed: () => this.on_someone_changed(),\r\n          on_team_decided: () => this.on_someone_changed(),\r\n        }),\r\n      ),\r\n      this.lf2.callbacks.add({\r\n        on_broadcast: (m) => {\r\n          if (m === Defines.BuiltIn_Broadcast.ResetGPL)\r\n            this.fsm.use(GamePrepareState.Player);\r\n          if (m === Defines.BuiltIn_Broadcast.UpdateRandom)\r\n            this.update_random();\r\n          if (m === Defines.BuiltIn_Broadcast.StartGame) this.start_game();\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    this.fsm.state?.on_player_key_down?.(e)\r\n  }\r\n\r\n  protected on_someone_changed() {\r\n    let joined_num = 0;\r\n    let ready_num = 0;\r\n    for (const [, p] of this.lf2.players) {\r\n      if (p.joined || p.is_com) joined_num += 1; // 已加入人数\r\n      if (p.team_decided) ready_num += 1; // 已准备人数\r\n    }\r\n    if (ready_num && ready_num === joined_num) {\r\n      if (this.state === GamePrepareState.Computer) {\r\n        this.fsm.use(GamePrepareState.GameSetting);\r\n      } else if (this.state === GamePrepareState.Player) {\r\n        this.fsm.use(GamePrepareState.CountingDown);\r\n      }\r\n    } else if (ready_num < joined_num) {\r\n      if (this.state === GamePrepareState.CountingDown) {\r\n        this.fsm.use(GamePrepareState.Player);\r\n      }\r\n    }\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this.fsm.update(dt);\r\n  }\r\n\r\n  readonly fsm = new FSM<GamePrepareState, IGamePrepareState>().add({\r\n    key: GamePrepareState.Player,\r\n    enter: () => {\r\n      this.handling_com = void 0;\r\n      this._com_num = 0;\r\n\r\n      // 清空已选的com\r\n      for (const slot of this.coms)\r\n        slot.fsm.use(SlotSelStatus.Empty)\r\n      \r\n      // ready状态\r\n      for (const slot of this.joined_players)\r\n        if (slot.fsm.state?.key === SlotSelStatus.Ready)\r\n          slot.fsm.use(SlotSelStatus.Fighter)\r\n    },\r\n    on_player_key_down: (e) => {\r\n      if (\"j\" === e.game_key && !this.joined_slots.length) {\r\n        this.lf2.pop_ui();\r\n        e.stop_immediate_propagation()\r\n      }\r\n    },\r\n  }, {\r\n    key: GamePrepareState.CountingDown,\r\n    enter: () => {\r\n      this._count_down = 5000;\r\n      this.callbacks.emit(\"on_countdown\")(ceil(this._count_down / 1000));\r\n    },\r\n    update: (dt) => {\r\n      const prev_second = ceil(this._count_down / 1000);\r\n      this._count_down -= dt;\r\n      const curr_second = ceil(this._count_down / 1000);\r\n      if (curr_second !== prev_second)\r\n        this.callbacks.emit(\"on_countdown\")(curr_second);\r\n      if (this._count_down <= 0)\r\n        if (this.empty_slots.length)\r\n          return GamePrepareState.ComNumberSel;\r\n        else\r\n          return GamePrepareState.GameSetting;\r\n    },\r\n    on_player_key_down: (e) => {\r\n      const player = this.lf2.players.get(e.player)\r\n      if (\"j\" === e.game_key) {\r\n        this._count_down = max(0, this._count_down - 500);\r\n        this.callbacks.emit(\"on_countdown\")(ceil(this._count_down / 1000));\r\n        e.stop_immediate_propagation()\r\n      }\r\n      if (\"a\" === e.game_key && (!player?.joined || player?.is_com)) {\r\n        this.fsm.use(GamePrepareState.Player)\r\n        e.stop_immediate_propagation()\r\n      }\r\n    },\r\n  }, {\r\n    key: GamePrepareState.ComNumberSel,\r\n    enter: () => {\r\n      for (const c of this.coms) {\r\n        c.fsm.use(SlotSelStatus.Empty)\r\n      }\r\n      const joined_num = this.joined_slots.length;\r\n      const not_joined_num = this.empty_slots.length;\r\n\r\n      if (this.game_mode !== \"stage_mode\")\r\n        this._min_com_num = joined_num <= 1 ? 1 : 0;\r\n\r\n      this._max_com_num = not_joined_num;\r\n      this.node.find_child(\"how_many_computer\")?.set_visible(true);\r\n    },\r\n    leave: () => {\r\n      this.node.find_child(\"how_many_computer\")?.set_visible(false)\r\n    },\r\n    on_player_key_down: (e) => {\r\n      if (\"d\" === e.game_key) {\r\n        this.fsm.use(GamePrepareState.Player);\r\n        e.stop_immediate_propagation()\r\n      }\r\n    },\r\n  }, {\r\n    key: GamePrepareState.Computer,\r\n    enter: () => {\r\n      this.handling_com = this.coms[0];\r\n      this.handling_com?.fsm.use(SlotSelStatus.Fighter);\r\n    }\r\n  }, {\r\n    key: GamePrepareState.GameSetting,\r\n    enter: () => {\r\n      this.update_random();\r\n      this.node.find_child(\"menu\")?.set_visible(true);\r\n    },\r\n    leave: () => {\r\n      for (const { player: p } of this.slots)\r\n        p?.set_random_character(\"\", true);\r\n      this.node.find_child(\"menu\")?.set_visible(false);\r\n    },\r\n    on_player_key_down: (e) => {\r\n      if (\"d\" === e.game_key) {\r\n        this.fsm.use(GamePrepareState.Player);\r\n        e.stop_immediate_propagation()\r\n      }\r\n    },\r\n  }).use(GamePrepareState.Player);\r\n\r\n  /** 至少可选COM数量 */\r\n  private _min_com_num = 0;\r\n  /** 至多可选COM数量 */\r\n  private _max_com_num = 7;\r\n  /** 指定选COM数量 */\r\n  private _com_num = 0;\r\n\r\n  private update_random() {\r\n    for (const { player: p } of this.slots) {\r\n      if (!p?.joined || !p.is_random) continue;\r\n      const { characters } = this.lf2.datas.find_group(EntityGroup.Regular);\r\n      const { character } = p\r\n      const remains = character ? characters.filter(v => v.id !== character) : characters\r\n      if (remains.length < 0) continue;\r\n      const next = this.lf2.random_get(remains)\r\n      if (!next) continue;\r\n      p.set_random_character(next.id, true);\r\n    }\r\n  }\r\n\r\n  /** 至少可选COM数量 */\r\n  get min_com_num(): number {\r\n    return this._min_com_num;\r\n  }\r\n  /** 至多可选COM数量 */\r\n  get max_com_num(): number {\r\n    return this._max_com_num;\r\n  }\r\n  /** 指定选COM数量 */\r\n  get com_num(): number {\r\n    return this._com_num;\r\n  }\r\n\r\n  /** 全部“玩家槽” */\r\n  get slots(): SlotSelLogic[] { return this.node.search_components(SlotSelLogic) }\r\n\r\n  /** 已加入的“电脑槽” */\r\n  get joined_coms(): SlotSelLogic[] {\r\n    return this.node.search_components(SlotSelLogic, v => v.is_com && v.joined)\r\n  }\r\n  get joined_players(): SlotSelLogic[] {\r\n    return this.node.search_components(SlotSelLogic, v => !v.is_com && v.joined)\r\n  }\r\n  /** 电脑槽 */\r\n  get coms(): SlotSelLogic[] {\r\n    return this.node.search_components(SlotSelLogic, v => v.is_com);\r\n  }\r\n\r\n  /** 已使用槽 */\r\n  get joined_slots(): SlotSelLogic[] {\r\n    return this.node.search_components(SlotSelLogic, v => v.joined);\r\n  }\r\n\r\n  /** 未使用槽 */\r\n  get empty_slots(): SlotSelLogic[] {\r\n    return this.node.search_components(SlotSelLogic, v => !v.joined);\r\n  }\r\n\r\n  handling_com: SlotSelLogic | undefined;\r\n\r\n  set_com_num(num: number) {\r\n    this._com_num = num;\r\n    const { empty_slots } = this;\r\n\r\n    for (const c of empty_slots) c.is_com = false;\r\n\r\n    while (num && empty_slots.length) {\r\n      empty_slots.shift()!.is_com = true;\r\n      --num;\r\n    }\r\n    if (this._com_num > 0) {\r\n      this.fsm.use(GamePrepareState.Computer);\r\n    } else {\r\n      this.fsm.use(GamePrepareState.GameSetting);\r\n    }\r\n  }\r\n\r\n  handle_next_com() {\r\n    const { coms } = this\r\n    const idx = this.handling_com ? coms.indexOf(this.handling_com) : -1\r\n    this.handling_com = coms[idx + 1];\r\n    if (!this.handling_com) this.fsm.use(GamePrepareState.GameSetting)\r\n    else this.handling_com.fsm.use(SlotSelStatus.Fighter)\r\n  }\r\n  handle_prev_com() {\r\n    const { coms } = this\r\n    const idx = this.handling_com ? coms.indexOf(this.handling_com) : 0\r\n    this.handling_com = coms[idx - 1];\r\n    if (!this.handling_com) this.fsm.use(GamePrepareState.ComNumberSel)\r\n  }\r\n  start_game() {\r\n    const { far, near, left, right } = this.lf2.world.bg;\r\n\r\n    for (const { player } of this.slots) {\r\n      if (!player?.joined) continue;\r\n      const character_data = this.lf2.datas.find_character(player.character);\r\n      if (!character_data) continue;\r\n      const character = new Entity(this.world, character_data);\r\n      character.name = player.is_com ? \"com\" : player.name;\r\n      character.team = player.team || new_team();\r\n      character.facing = this.lf2.random_get([FacingFlag.Left, FacingFlag.Right])!;\r\n\r\n      if (player.is_com) {\r\n        character.ctrl = Factory.inst.get_ctrl(\r\n          character_data.id,\r\n          player.id,\r\n          character\r\n        );\r\n      } else {\r\n        character.ctrl = new LocalController(\r\n          player.id,\r\n          character,\r\n          player.keys,\r\n        );\r\n      }\r\n      character.position.z = this.lf2.random_in(far, near);\r\n      character.position.x = this.lf2.random_in(left, right);\r\n      character.blinking = this.world.begin_blink_time;\r\n      character.attach();\r\n    }\r\n\r\n    const stage_name_text = this.node.root.search_component(\r\n      StageNameText,\r\n      (v) => v.node.visible && !v.node.disabled,\r\n    );\r\n    const background_name_text = this.node.root.search_component(\r\n      BackgroundNameText,\r\n      (v) => v.node.visible && !v.node.disabled,\r\n    );\r\n    if (stage_name_text) this.lf2.change_stage(stage_name_text.stage);\r\n    else if (background_name_text) this.lf2.change_bg(background_name_text.background);\r\n    if (stage_name_text) this.lf2.push_ui(\"stage_mode_page\");\r\n    else this.lf2.push_ui(\"vs_mode_page\");\r\n  }\r\n}\r\n\r\n","export function map_no_void<T, R>(\r\n  iterable: Iterable<T>,\r\n  p: (v: T) => R,\r\n): NonNullable<R>[] {\r\n  const ret: NonNullable<R>[] = [];\r\n  for (const item of iterable) {\r\n    const r = p(item);\r\n    if (r !== null && r !== void 0) ret.push(r);\r\n  }\r\n  return ret;\r\n}\r\n","import { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\r\nimport GamePrepareLogic from \"./GamePrepareLogic\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport default class ComNumButton extends UIComponent {\r\n  static override readonly TAG = 'ComNumButton'\r\n  get gpl() {\r\n    return this.node.root.search_component(GamePrepareLogic);\r\n  }\r\n  override on_click(e: IUIPointerEvent): void {\r\n    this.gpl?.set_com_num(this.num(0) || 0);\r\n    e.stop_immediate_propagation();\r\n  }\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    if (e.game_key === 'a' && this.node.focused) {\r\n      this.gpl?.set_com_num(this.num(0) || 0);\r\n      e.stop_immediate_propagation();\r\n    }\r\n  }\r\n  override on_show(): void {\r\n    super.on_show?.();\r\n    const { gpl } = this;\r\n    const num = this.num(0) || 0\r\n    if (!gpl) return;\r\n    const { min_com_num, max_com_num } = gpl;\r\n    this.node.disabled = num < min_com_num || num > max_com_num;\r\n  }\r\n}\r\n","import { new_team } from \"../../base\";\r\nimport { Defines, EntityGroup } from \"../../defines\";\r\nimport { Factory } from \"../../entity/Factory\";\r\nimport IEntityCallbacks from \"../../entity/IEntityCallbacks\";\r\nimport { is_character } from \"../../entity/type_check\";\r\nimport { traversal } from \"../../utils/container_help/traversal\";\r\nimport { floor } from \"../../utils/math/base\";\r\nimport { UINode } from \"../UINode\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class DemoModeLogic extends UIComponent implements IEntityCallbacks {\r\n  static override readonly TAG = 'DemoModeLogic'\r\n  score_board!: UINode\r\n  time: number = 0;\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.score_board = this.node.find_child(\"score_board\")!\r\n\r\n    const bg_data = this.lf2.random_get(this.lf2.datas.backgrounds);\r\n    if (bg_data) this.lf2.change_bg(bg_data);\r\n\r\n    const character_datas = this.lf2.datas.get_characters_of_group(\r\n      EntityGroup.Regular,\r\n    );\r\n    const player_count = floor(this.lf2.random_in(2, 8));\r\n    const player_teams: string[] = [];\r\n\r\n    for (let i = 0; i < player_count; i++) {\r\n      player_teams.push(new_team());\r\n    }\r\n    switch (player_count) {\r\n      case 4: {\r\n        if (this.lf2.random_take([0, 1])) {\r\n          player_teams.fill(Defines.TeamEnum.Team_1, 0, 2);\r\n          player_teams.fill(Defines.TeamEnum.Team_2, 2, 4);\r\n        }\r\n        break;\r\n      }\r\n      case 6: {\r\n        switch (this.lf2.random_take([0, 1, 2])) {\r\n          case 1: {\r\n            player_teams.fill(Defines.TeamEnum.Team_1, 0, 3);\r\n            player_teams.fill(Defines.TeamEnum.Team_2, 3, 6);\r\n            break;\r\n          }\r\n          case 2: {\r\n            player_teams.fill(Defines.TeamEnum.Team_1, 0, 2);\r\n            player_teams.fill(Defines.TeamEnum.Team_2, 2, 4);\r\n            player_teams.fill(Defines.TeamEnum.Team_3, 4, 6);\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 8: {\r\n        switch (this.lf2.random_take([0, 1, 2])) {\r\n          case 1: {\r\n            player_teams.fill(Defines.TeamEnum.Team_1, 0, 4);\r\n            player_teams.fill(Defines.TeamEnum.Team_2, 4, 8);\r\n            break;\r\n          }\r\n          case 2: {\r\n            player_teams.fill(Defines.TeamEnum.Team_1, 0, 2);\r\n            player_teams.fill(Defines.TeamEnum.Team_2, 2, 4);\r\n            player_teams.fill(Defines.TeamEnum.Team_3, 4, 6);\r\n            player_teams.fill(Defines.TeamEnum.Team_4, 6, 8);\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    const player_infos = Array.from(this.lf2.players.values());\r\n    for (let i = 0; i < player_count; i++) {\r\n      const player = player_infos[i]!;\r\n      if (!player) continue;\r\n\r\n      const character_data = this.lf2.random_take(character_datas);\r\n      if (!character_data) continue;\r\n\r\n      const creator = Factory.inst.get_entity_creator(character_data.type);\r\n      if (!creator) return;\r\n\r\n      const character = creator(this.world, character_data);\r\n      character.name = \"com\";\r\n      character.team = player_teams.shift() ?? new_team();\r\n      character.facing = this.lf2.random_get([1, -1] as const)!;\r\n      character.callbacks.add(this);\r\n      character.key_role = true;\r\n\r\n      const { far, near, left, right } = this.lf2.world.bg;\r\n\r\n      character.ctrl = Factory.inst.get_ctrl(\r\n        character_data.id,\r\n        player.id,\r\n        character,\r\n      );\r\n      character.position.z = this.lf2.random_in(far, near);\r\n      character.position.x = this.lf2.random_in(left, right);\r\n      character.blinking = this.world.begin_blink_time;\r\n      character.attach();\r\n    }\r\n  }\r\n  override on_stop(): void {\r\n    super.on_stop?.();\r\n    for (const [, v] of this.lf2.player_characters) {\r\n      v.callbacks.del(this);\r\n    }\r\n  }\r\n\r\n  on_dead() {\r\n    // 各队伍存活计数\r\n    const player_teams: { [x in string]?: number } = {};\r\n\r\n    for (const [, f] of this.world.slot_fighters)\r\n      player_teams[f.team] = 0 // 玩家队伍\r\n\r\n    for (const e of this.world.entities) {\r\n      if (is_character(e) && e.hp > 0 && player_teams[e.team] !== void 0)\r\n        ++player_teams[e.team]!; // 存活计数++\r\n    }\r\n\r\n    // 剩余队伍数\r\n    let team_remains = 0;\r\n    traversal(player_teams, (_, v) => {\r\n      if (v) ++team_remains;\r\n    })\r\n\r\n    // 大于一队，继续打\r\n    if (team_remains > 1) return;\r\n\r\n    this.lf2.sounds.play_preset(\"end\");\r\n    this.score_board.visible = true;\r\n  }\r\n  override on_show(): void { }\r\n}\r\n","import { Defines } from \"../../defines/defines\";\r\nimport { UITextLoader } from \"../UITextLoader\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport default class DifficultyText extends UIComponent {\r\n  static override readonly TAG: string = \"difficulty_text\";\r\n  private _text_loader = new UITextLoader(() => this.node).set_style({\r\n    fill_style: \"#9b9bff\",\r\n    font: \"15px Arial\",\r\n  }).ignore_out_of_date();\r\n\r\n  protected get text(): string {\r\n    return this.lf2.string(Defines.DifficultyLabels[this.lf2.difficulty]);\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.lf2.callbacks.add(this);\r\n    this.on_difficulty_changed();\r\n  }\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.lf2.callbacks.del(this);\r\n  }\r\n  on_difficulty_changed() {\r\n    this._text_loader.set_text([this.text])\r\n  }\r\n}\r\n","import { clamp, floor } from \"../utils\";\r\n\r\nexport class Loop {\r\n  protected _times: number = 1;\r\n  protected _count: number = 0;\r\n\r\n  get count(): number { return this._count; }\r\n  set count(v: number) { this.set_count(v) }\r\n  set_count(v: number): this {\r\n    this._count = clamp(floor(v), 0, this.times)\r\n    return this\r\n  }\r\n\r\n  get times(): number { return this._times; }\r\n  set times(v: number) { this.set_times(v) }\r\n  set_times(v: number): this {\r\n    this._times = clamp(floor(v), 0, Number.MAX_SAFE_INTEGER)\r\n    return this\r\n  }\r\n\r\n  set(count: number, times: number): this {\r\n    this.times = times;\r\n    this.count = count;\r\n    return this;\r\n  }\r\n\r\n  reset(): this {\r\n    this.count = 0;\r\n    return this;\r\n  }\r\n\r\n  continue(): boolean {\r\n    if (this.times <= 0) return true;\r\n    if (this.count >= this.times) return false\r\n    ++this.count;\r\n    return true\r\n  }\r\n  \r\n  done(): boolean {\r\n    return this.times > 0 && this.count >= this.times;\r\n  }\r\n}\r\n","import { IDebugging, make_debugging } from \"../entity/make_debugging\";\r\nimport { clamp } from \"../utils/math/clamp\";\r\nimport { IAnimation } from \"./IAnimation\";\r\nimport { Loop } from \"./Loop\";\r\nconst { max, floor } = Math;\r\n\r\nexport class Animation implements IAnimation, IDebugging {\r\n  static TAG = 'Animation'\r\n\r\n  __debugging?: boolean;\r\n  debug!: (_0: string, ..._1: any[]) => void;\r\n  warn!: (_0: string, ..._1: any[]) => void;\r\n  log!: (_0: string, ..._1: any[]) => void;\r\n  private _value: number = 0;\r\n  private _time: number = 0;\r\n  private _duration: number = 0\r\n  private _direction: -1 | 1 = 1;\r\n  private _fill_mode: 1 | 0 = 1;\r\n  readonly loop = new Loop()\r\n\r\n  constructor() {\r\n    make_debugging(this)\r\n  }\r\n\r\n  get fill_mode(): 1 | 0 { return this._fill_mode; }\r\n  set fill_mode(v: 1 | 0) { this.set_fill_mode(v) }\r\n  set_fill_mode(v: 1 | 0) {\r\n    if (v != 1 && v != 0) debugger;\r\n    this._fill_mode = v == 1 || v == 0 ? v : this._fill_mode;\r\n    return this\r\n  }\r\n\r\n  get count(): number { return this.loop.count; }\r\n  set count(v: number) { this.loop.count = v }\r\n  set_count(v: number): this { this.loop.set_count(v); return this; }\r\n\r\n  get times(): number { return this.loop.times; }\r\n  set times(v: number) { this.loop.times = v }\r\n  set_times(v: number): this { this.loop.set_times(v); return this; }\r\n\r\n  get direction(): -1 | 1 { return this._direction; }\r\n  set direction(v: -1 | 1) { this.set_direction(v) }\r\n  set_direction(v: -1 | 1): this {\r\n    if (v !== -1 && v !== 1) debugger;\r\n    this._direction = (v === -1 || v === 1) ? v : this._direction;\r\n    return this\r\n  }\r\n\r\n  get reverse(): boolean { return this.direction === -1; }\r\n  set reverse(v: boolean) { this.set_reverse(v) }\r\n  set_reverse(v: boolean): this {\r\n    if (typeof v !== 'boolean') debugger;\r\n    this.direction = v ? -1 : 1\r\n    return this\r\n  }\r\n\r\n  get duration(): number { return this._duration; }\r\n  set duration(v: number) { this.set_duration(v) }\r\n  set_duration(v: number): this {\r\n    this._duration = max(0, v);\r\n    this._time = clamp(this._time, 0, this._duration)\r\n    return this\r\n  }\r\n\r\n  get value(): number { return this._value; }\r\n  set value(v: number) { this.set_value(v) }\r\n  set_value(v: number): this { this._value = v; return this }\r\n\r\n  get time(): number { return this._time; }\r\n  set time(v: number) { this.set_time(v); }\r\n  set_time(v: number): this { this._time = clamp(v, 0, this.duration); return this }\r\n\r\n  get done(): boolean {\r\n    const { duration } = this;\r\n    if (duration <= 0) return true;\r\n    return this.loop.done()\r\n  }\r\n  start(reverse: boolean = this.reverse): this {\r\n    this.loop.reset()\r\n    this.reverse = reverse;\r\n    this.time = reverse ? this.duration : 0;\r\n    return this;\r\n  }\r\n  end(reverse: boolean = this.reverse): this {\r\n    this.count = max(0, this.times);\r\n    this.reverse = reverse;\r\n    this.time = reverse ? 0 : this.duration\r\n    return this;\r\n  }\r\n\r\n  calc(): this {\r\n    this.value = this.duration === 0 ? this.value : this.time / this.duration;\r\n    return this;\r\n  }\r\n\r\n  update(dt: number): this {\r\n    if (this.done) return this;\r\n    const { duration, direction } = this\r\n    let time = this.time + direction * dt;\r\n    if (time <= 0) {\r\n      do {\r\n        this.loop.continue()\r\n        time += duration\r\n      } while (time <= 0)\r\n      if (this.done && this._fill_mode)\r\n        time = 0\r\n    } else if (time >= duration) {\r\n      do {\r\n        this.loop.continue()\r\n        time -= duration\r\n      } while (time >= duration)\r\n      if (this.done && this._fill_mode)\r\n        time = duration\r\n    }\r\n    \r\n\r\n\r\n    this.time = clamp(time, 0, duration);\r\n    this.debug(`update`, `time = ${this.time}, dt = ${dt}`)\r\n    this.calc();\r\n    return this;\r\n  }\r\n}\r\n\r\n","import { Animation } from \"./Animation\";\r\n\r\nexport class Delay extends Animation {\r\n  constructor(value: number) {\r\n    super()\r\n    this.value = value;\r\n  }\r\n  override calc(): this { return this; }\r\n}\r\n","import { clamp, ease_in_out_sine, IEaseMethod, is_num } from \"../utils\";\r\nimport { Animation } from \"./Animation\";\r\nexport class Easing extends Animation {\r\n  protected _val_1 = 0;\r\n  protected _val_2 = 1;\r\n  protected _ease_method: IEaseMethod = ease_in_out_sine;\r\n\r\n  get val_1(): number { return this._val_1; }\r\n  set val_1(v: number) { this._val_1 = v; }\r\n  set_val_1(v: number): this { this._val_1 = v; return this; }\r\n\r\n  get val_2(): number { return this._val_2; }\r\n  set val_2(v: number) { this._val_2 = v; }\r\n  set_val_2(v: number): this { this._val_2 = v; return this; }\r\n\r\n  get ease_method(): IEaseMethod {\r\n    return this._ease_method;\r\n  }\r\n  set ease_method(v: IEaseMethod) {\r\n    this._ease_method = v;\r\n  }\r\n\r\n  constructor(begin = 0, end = 1) {\r\n    super()\r\n    this.val_1 = begin;\r\n    this.val_2 = end;\r\n  }\r\n  set(begin: number, end: number): this {\r\n    this._val_1 = is_num(begin) ? begin : this._val_1;\r\n    this._val_2 = is_num(end) ? end : this._val_2;\r\n    return this;\r\n  }\r\n  set_ease_method(v: IEaseMethod) {\r\n    this._ease_method = v;\r\n    return this;\r\n  }\r\n  override calc(): this {\r\n    const { done: is_end, time, duration, val_1, val_2, reverse } = this\r\n    if (val_1 === val_2) {\r\n      this.value = val_1\r\n      return this;\r\n    };\r\n    if (is_end) {\r\n      this.value = reverse ? val_1 : val_2;\r\n      return this;\r\n    }\r\n    const factor = clamp(time / duration, 0, 1);\r\n    this.value = this._ease_method(factor, val_1, val_2);\r\n    return this;\r\n  }\r\n}\r\nexport default Easing;","import { Animation } from \"./Animation\";\r\nimport { Delay } from \"./Delay\";\r\nimport Easing from \"./Easing\";\r\nexport class Sequence extends Animation {\r\n  static override TAG = 'Sequence';\r\n\r\n  private _curr_anim: Animation | null = null;\r\n\r\n  readonly anims: Animation[] = [];\r\n\r\n  get curr_anim(): Animation | null { return this._curr_anim }\r\n\r\n  constructor(...anims: Animation[]) {\r\n    super()\r\n    this.anims = anims\r\n    this.duration = anims.reduce((r, i) => r + i.duration, 0);\r\n    this.start()\r\n  }\r\n\r\n  override start(reverse?: boolean): this {\r\n    super.start(reverse);\r\n    this._curr_anim = this.anims[reverse ? this.anims.length - 1 : 0] || null\r\n    return this\r\n  }\r\n\r\n  override end(reverse?: boolean): this {\r\n    super.end(reverse)\r\n    this._curr_anim = this.anims[reverse ? 0 : this.anims.length - 1] || null\r\n    return this;\r\n  }\r\n\r\n  override calc(): this {\r\n    let { time, reverse, duration, anims } = this;\r\n    if (!this.anims.length) return this;\r\n    if (time >= duration) {\r\n      const a = this.anims[this.anims.length - 1]!\r\n      this._curr_anim = a;\r\n      a.time = a.duration;\r\n      this.value = a.calc().value;\r\n      return this;\r\n    }\r\n    if (time <= 0) {\r\n      const a = this.anims[0]!\r\n      this._curr_anim = a;\r\n      a.time = 0;\r\n      this.value = a.calc().value;\r\n      return this;\r\n    }\r\n    const len = anims.length\r\n    if (reverse) {\r\n      let idx = len - 1\r\n      for (; idx >= 0; --idx) {\r\n        this.debug(`calc`, `anim idx=${idx}`)\r\n        const anim = anims[idx]!;\r\n        duration -= anim.duration;\r\n        if (time > duration) {\r\n          anim.time = time - duration;\r\n          this.value = anim.calc().value;\r\n          this._curr_anim = anim\r\n          break;\r\n        }\r\n      }\r\n      this.debug(`calc`, `anim idx=${idx}, value=${anims[idx]!.value}`)\r\n    } else {\r\n      let idx = 0\r\n      for (; idx < len; ++idx) {\r\n        this.debug(`calc`, `anim idx=${idx}`)\r\n        const anim = anims[idx]!;\r\n        if (anim.duration > time) {\r\n          anim.time = time;\r\n          this.value = anim.calc().value;\r\n          this._curr_anim = anim\r\n          break;\r\n        }\r\n        time -= anim.duration;\r\n      }\r\n      this.debug(`calc`, `anim idx=${idx}, value=${anims[idx]!.value}`)\r\n    }\r\n    return this;\r\n  }\r\n}","import { clamp, is_num } from \"../utils\";\r\nimport { Animation } from \"./Animation\";\r\n\r\n\r\nexport abstract class Periodic extends Animation {\r\n  offset: number = 0;\r\n  protected _b: number = 0;\r\n  protected _h: number = 1;\r\n  protected _s: number = 1;\r\n  set_offset(v: number): this {\r\n    this.offset = v;\r\n    return this\r\n  }\r\n  set_scale(v: number): this {\r\n    this.scale = v;\r\n    return this\r\n  }\r\n  get bottom(): number { return this._b; }\r\n  set bottom(v: number) { if (is_num(v)) { this._b = v; } }\r\n  get height(): number { return this._h; }\r\n  set height(v: number) { if (is_num(v)) { this._h = v; } }\r\n  get scale(): number { return this._s; }\r\n  set scale(v: number) { if (is_num(v)) { this._s = v; } }\r\n  abstract method(v: number): number;\r\n\r\n  constructor(bottom: number = 0, height: number = 1, scale: number = 1) {\r\n    super();\r\n    this.duration = Number.MAX_SAFE_INTEGER;\r\n    if (is_num(bottom)) this._b = bottom;\r\n    if (is_num(height)) this._h = height;\r\n    if (is_num(scale)) this._s = scale;\r\n  }\r\n  set(bottom: number, height: number, scale: number): this {\r\n    if (is_num(bottom)) this._b = bottom;\r\n    if (is_num(height)) this._h = height;\r\n    if (is_num(scale)) this._s = scale;\r\n    this.calc();\r\n    return this;\r\n  }\r\n  override calc(): this {\r\n    this.value = this.method(this.offset + this.time * this._s);\r\n    return this;\r\n  }\r\n}\r\n","import { Periodic } from \"./Periodic\";\r\nimport { sin, PI } from \"../utils/math/base\";\r\nexport class Sine extends Periodic {\r\n  constructor(...args: ConstructorParameters<typeof Periodic>) { super(...args) }\r\n  readonly method = (v: number) => {\r\n    return (this.height * (sin(v * 2 * PI / 1000) + 1) / 2) + this.bottom\r\n  }\r\n}\r\n","import { TFlexAlign } from \"./Flex\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class FlexItem extends UIComponent {\n  static override readonly TAG: string = 'FlexItem';\n  get align(): TFlexAlign | null { return null }\n}\n\n","import { max } from \"../../utils\";\nimport { FlexItem } from \"./FlexItem\";\nimport { IUICompnentCallbacks } from \"./IUICompnentCallbacks\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport type TFlexDirection = 'row' | 'column'\nexport type TFlexAlign = 'start' | 'center' | 'end' | 'stretch'\n\nexport class Flex<Callbacks extends IUICompnentCallbacks = IUICompnentCallbacks> extends UIComponent<Callbacks> {\n  static override readonly TAG: string = 'Flex';\n  get direction(): TFlexDirection { \n    return this.props.str('direction', ['row', 'column']) ?? 'row' \n  }\n  get gap(): number { return this.props.num('gap') ?? 0; }\n  get row_gap(): number { return this.props.num('row_gap') ?? this.gap; }\n  get col_gap(): number { return this.props.num('col_gap') ?? this.gap; }\n  get align(): TFlexAlign { return this.props.str('align', ['start', 'center', 'end', 'stretch']) ?? 'start' }\n  get fit(): boolean { return !!this.props.bool('fit') }\n  get fit_w(): boolean { return this.props.bool('fit_w') ?? this.fit }\n  get fit_h(): boolean { return this.props.bool('fit_h') ?? this.fit }\n  get padding(): [number, number, number, number] { return this.props.nums('padding', 4) }\n\n  override update(dt: number): void {\n    const {\n      direction, col_gap, row_gap, align,\n      fit_h, fit_w,\n      padding: [padding_top, padding_right, padding_bottom, padding_left]\n    } = this;\n    let temp_x = 0;\n    let temp_y = 0;\n    const my_cross = this.node.cross;\n\n    const { children } = this.node\n    if (fit_w || fit_h) {\n      let w = 0;\n      let h = 0;\n      const len = children.length;\n      for (let i = 0; i < len; ++i) {\n        const child = children[i]\n        if (!child.self_visible) continue;\n        const [child_w, child_h] = child.size.value\n        if (fit_w && direction === 'row')\n          w += child_w + (i < len - 1 ? row_gap : 0);\n        else if (fit_w && direction === 'column')\n          w = max(child_w, w)\n        if (fit_h && direction === 'column')\n          h += child_h + (i < len - 1 ? col_gap : 0);\n        else if (fit_h && direction === 'row')\n          h = max(child_h, h)\n      }\n      if (fit_w) {\n        w += padding_left + padding_right;\n        this.node.size.value = [w, this.node.size.value[1]];\n      }\n      if (fit_h) {\n        h += padding_top + padding_bottom;\n        this.node.size.value = [this.node.size.value[0], h];\n      }\n    }\n\n    const [my_w, my_h] = this.node.size.value;\n    for (const child of this.node.children) {\n      if (!child.self_visible) continue;\n      const [child_w, child_h] = child.size.value\n      const { cross } = child;\n      const [x, y, z] = child.pos.value;\n\n      const item = child.find_component(FlexItem, v => v.enabled)\n      const item_align = item?.align || align\n      if (direction === 'row') {\n        const item_x = padding_left + my_cross.left + (temp_x - cross.left)\n        switch (item_align) {\n          case \"start\":\n            child.pos.value = [item_x, padding_top + my_cross.top - cross.top, z]\n            break;\n          case \"center\":\n            child.pos.value = [item_x, my_cross.mid_y - cross.mid_y, z]\n            break;\n          case \"end\":\n            child.pos.value = [item_x, my_cross.bottom - cross.bottom - padding_bottom, z]\n            break;\n          case \"stretch\":\n            child.pos.value = [item_x, my_cross.top - cross.top, z]\n            child.size.value = [child_w, my_h]\n            break;\n        }\n        temp_x += child_w + row_gap;\n      } else if (direction === 'column') {\n        const item_y = padding_top + my_cross.top + (temp_y - cross.top)\n        switch (item_align) {\n          case \"start\":\n            child.pos.value = [padding_left + my_cross.left - cross.left, item_y, z]\n            break;\n          case \"center\":\n            child.pos.value = [my_cross.mid_x - cross.mid_x, item_y, z]\n            break;\n          case \"end\":\n            child.pos.value = [my_cross.right - cross.right - padding_right, item_y, z]\n            break;\n          case \"stretch\":\n            child.pos.value = [padding_left + my_cross.left - cross.left, item_y, z]\n            child.size.value = [my_w, child_h]\n            break;\n        }\n        temp_y += child_h + col_gap;\n      }\n    }\n  }\n}\n","import { Easing, Sequence } from \"../../animation\";\r\nimport { Animation } from \"../../animation/Animation\";\r\nimport { Sine } from \"../../animation/Sine\";\r\nimport { Ditto } from \"../../ditto\";\r\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\r\nimport { Flex } from \"./Flex\";\r\nimport { IUICompnentCallbacks } from \"./IUICompnentCallbacks\";\r\nexport interface IJalousieCallbacks extends IUICompnentCallbacks {\r\n  on_anim_end?(v: Jalousie): void;\r\n}\r\nexport class Jalousie extends Flex<IJalousieCallbacks> {\r\n  static override readonly TAG = 'Jalousie'\r\n  protected _anim: Animation = new Sequence(\r\n    new Easing(0, 0).set_duration(250),\r\n    new Sine(-1, 2, 0.5).set_duration(250),\r\n    new Easing(1, 1).set_duration(250),\r\n  )\r\n  get anim(): Animation { return this._anim }\r\n  get click_test(): boolean { return this.props.bool('click_test') === true; }\r\n\r\n  override on_start() {\r\n    super.on_start?.();\r\n    const open = this.props.bool('open') ?? this.bool(1);\r\n    const end = this.props.bool('end') ?? this.bool(2);\r\n    if (end) this._anim.end(open)\r\n    else this._anim.start(open)\r\n  }\r\n  get open(): boolean { return this._anim.reverse; }\r\n  set open(v: boolean) { this._anim.start(v); }\r\n  get w(): number { return this.node.root.size.value[0] }\r\n  get h(): number { return this.node.root.size.value[1] }\r\n\r\n  override on_click(e: IUIPointerEvent): void {\r\n    super.on_click?.(e)\r\n    if (this.click_test) {\r\n      this.open = !this.open;\r\n      Ditto.debug(`[${Jalousie.TAG}]open=${this.open}`)\r\n    }\r\n  }\r\n  override on_stop(): void {\r\n    super.on_stop?.()\r\n    this.callbacks.clear();\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    super.update(dt);\r\n    if (this._anim.done) return;\r\n    this._anim.update(dt);\r\n    this.update_children();\r\n\r\n    if (this._anim.done)\r\n      this.callbacks.emit('on_anim_end')(this);\r\n  }\r\n\r\n  override on_show(): void {\r\n    super.on_show?.()\r\n    this._anim.calc();\r\n    this.update_children();\r\n  }\r\n\r\n  protected update_children() {\r\n    const { value } = this._anim;\r\n    const { children } = this.node;\r\n    const len = children.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const child = children[i];\r\n      if (!child) continue;\r\n      if (this.direction === 'column') {\r\n        child.scale.value = [1, value, 1];\r\n      } else {\r\n        child.scale.value = [value, 1, 1];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Difficulty } from \"../../defines\";\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\nimport { UINode } from \"../UINode\";\nimport { IJalousieCallbacks, Jalousie } from \"./Jalousie\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class EndingPageLogic extends UIComponent {\n  static override readonly TAG: string = `EndingPageLogic`;\n  jalousie: Jalousie | undefined;\n  txt_node: UINode | undefined;\n  jalousie_cbs: IJalousieCallbacks = {\n    on_anim_end: (j) => this.on_jalousie_anim_end(j)\n  }\n  override on_start(): void {\n    super.on_start?.();\n    this.jalousie = this.node.search_component(Jalousie);\n    this.jalousie?.callbacks.add(this.jalousie_cbs)\n    this.txt_node = this.node.search_child('txt_b')\n  }\n  override on_resume(): void {\n    super.on_resume()\n    this.lf2.sounds.stop_bgm()\n    if (this.jalousie?.anim.done) this.jalousie.open = !this.jalousie.open\n  }\n  override on_stop(): void {\n    super.on_stop?.();\n    this.jalousie?.callbacks.del(this.jalousie_cbs)\n  }\n  override on_click(e: IUIPointerEvent): void {\n    if (this.jalousie?.anim.done) this.jalousie.open = !this.jalousie.open\n  }\n  override on_key_down(e: IUIPointerEvent): void {\n    if (this.jalousie?.anim.done) this.jalousie.open = !this.jalousie.open\n  }\n  on_jalousie_anim_end(j: Jalousie): void {\n    if (j.open) return;\n\n    if (this.txt_node) {\n      const i = this.txt_node.txt_idx.value++\n      const l = this.txt_node.txts.value.length;\n      if (i < l - 1) {\n        if (i === 0 && this.lf2.difficulty >= Difficulty.Difficult) {\n          this.txt_node.txt_idx.value = i + 2\n        } else {\n          this.txt_node.txt_idx.value = i + 1\n        }\n      } else {\n        if (this.lf2.ui_stacks.length > 1) {\n          this.lf2.pop_ui(true, (_, i) => i === 0)\n        } else {\n          this.lf2.set_ui(\"main_page\")\n          this.lf2.sounds.play_bgm(\"bgm/main.wma.mp3\")\n        }\n      }\n    }\n    j.open = true;\n  }\n}\n","import { Easing } from \"../../animation\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class FadeInOpacity extends UIComponent {\r\n  static override readonly TAG: string = 'FadeInOpacity';\r\n  protected anim: Easing = new Easing(0, 1).set_duration(1000);\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.anim\r\n      .set_duration(this.num(0) ?? 0)\r\n      .set_val_1(this.node.opacity);\r\n  }\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    this.anim.update(dt);\r\n    this.node.opacity = this.anim.value;\r\n  }\r\n}\r\n\r\n\r\n","export class UIComponentExpressionBuilder {\n  readonly parts: [string, string, string, string] = ['', '', '', ''];\n  constructor(cls: { TAG: string; }, ...args: any[]) {\n    this.parts[2] = cls.TAG;\n    this.parts[3] = `(${args})`;\n  }\n  set_enabled(v: boolean): this {\n    this.parts[1] = v ? '' : '!';\n    return this;\n  }\n  set_id(id: string): this {\n    this.parts[0] = id.trim() ? `<${id.trim()}>` : '';\n    return this;\n  }\n  toString(): string {\n    return this.done();\n  }\n  done(): string {\n    return this.parts.join('');\n  }\n}\n","import { Delay, Easing, Sequence } from \"../../animation\";\r\nimport { Unsafe } from \"../../utils\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { UIComponentExpressionBuilder } from \"./UIComponentExpressionBuilder\";\r\nexport class FadeOutOpacity extends UIComponent {\r\n  static override readonly TAG: string = 'FadeOutOpacity';\r\n  static expression(duration: Unsafe<number> = 1000, delay: Unsafe<number> = 0) {\r\n    return new UIComponentExpressionBuilder(this, duration ?? '', delay ?? '')\r\n  }\r\n  protected anim: Sequence = new Sequence();\r\n  start(reverse?: boolean) {\r\n    this.enabled = true;\r\n    this.anim.start(reverse)\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.anim = new Sequence(\r\n      new Delay(this.node.opacity)\r\n        .set_duration(this.num(1) ?? 0),\r\n      new Easing(this.node.opacity, 0)\r\n        .set_duration(this.num(0) ?? 1000)\r\n        .set_val_1(this.node.opacity)\r\n        .set_val_2(0)\r\n    )\r\n  }\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    this.anim.update(dt);\r\n    this.node.opacity = this.anim.value;\r\n    this.debug('update', `opacity = ${this.anim.value}`)\r\n    if (this.anim.done) this.enabled = false;\r\n  }\r\n}\r\n","import { ISprite } from \"../../3d/ISprite\";\r\nimport { Sine } from \"../../animation/Sine\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { Defines } from \"../../defines/defines\";\r\nimport { Ditto } from \"../../ditto\";\r\nimport { IPlayerInfoCallback } from \"../../IPlayerInfoCallback\";\r\nimport { PlayerInfo } from \"../../PlayerInfo\";\r\nimport { between } from \"../../utils\";\r\nimport GamePrepareLogic, { GamePrepareState } from \"./GamePrepareLogic\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * 显示玩家角色选择的角色头像\r\n *\r\n * @export\r\n * @class FighterHead\r\n * @extends {UIComponent}\r\n */\r\nexport default class FighterHead extends UIComponent {\r\n  static override readonly TAG = 'FighterHead'\r\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\r\n  get player(): PlayerInfo { return this.lf2.players.get(this.player_id)!; }\r\n\r\n  get head() {\r\n    const character_id = this.player?.character;\r\n    if (!character_id) return Defines.BuiltIn_Imgs.RFACE;\r\n    const head = this.lf2.datas.find_character(character_id)?.base.head;\r\n    return head ?? Defines.BuiltIn_Imgs.RFACE;\r\n  }\r\n\r\n  protected _opacity: Sine = new Sine(0.65, 1, 6);\r\n  protected readonly _mesh_head: ISprite;\r\n  get countdown_node() { return this.node.find_child(\"countdown_text\") }\r\n  get hints_node() { return this.node.find_child(\"hints\") }\r\n  get gpl(): GamePrepareLogic | undefined {\r\n    return this.node.root.find_component(GamePrepareLogic);\r\n  }\r\n  protected _unmount_jobs = new Invoker();\r\n\r\n  protected _player_callbacks: IPlayerInfoCallback = {\r\n    on_joined_changed: () => this.handle_changed(),\r\n    on_character_changed: () => this.handle_changed(),\r\n    on_random_character_changed: () => this.handle_changed(),\r\n  }\r\n  constructor(...args: ConstructorParameters<typeof UIComponent>) {\r\n    super(...args);\r\n    this._mesh_head = new Ditto.SpriteNode(this.lf2)\r\n      .set_center(0.5, 0.5)\r\n      .set_position(this.node.w / 2, -this.node.h / 2, 0.1)\r\n      .set_name(\"head\")\r\n      .apply();\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.node.renderer.sprite.add(\r\n      this._mesh_head,\r\n    )\r\n    this.player?.callbacks.add(this._player_callbacks);\r\n    this._unmount_jobs.add(\r\n      () =>\r\n        this.node.renderer.sprite.del(\r\n          this._mesh_head,\r\n        ),\r\n      this.gpl?.callbacks.add({\r\n        on_countdown: (seconds) => {\r\n          if (between(seconds, 1, 5))\r\n            this.countdown_node!.txt_idx.value = (seconds - 1);\r\n        },\r\n      }),\r\n      this.gpl?.fsm.callbacks.add({\r\n        on_state_changed: () => this.handle_changed(),\r\n      }),\r\n    );\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.player?.callbacks.del(this._player_callbacks);\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  protected handle_changed() {\r\n    this.lf2.images.p_create_pic_by_img_key(this.head).then(pic => {\r\n      this.node.txts.value\r\n      this._mesh_head.set_info(pic).apply();\r\n    });\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this._opacity.update(dt);\r\n    if (this.hints_node) this.hints_node.opacity = this._opacity.value;\r\n\r\n    switch (this.gpl?.state!) {\r\n      case GamePrepareState.Player:\r\n        this.hints_node!.visible = !this.player.joined;\r\n        this._mesh_head.visible = this.player.joined;\r\n        this.countdown_node!.visible = false;\r\n        break;\r\n      case GamePrepareState.CountingDown:\r\n        this.hints_node!.visible = false;\r\n        this._mesh_head.visible = this.player.joined;\r\n        this.countdown_node!.visible = !this.player.joined;\r\n        break;\r\n      case GamePrepareState.ComNumberSel:\r\n        this._mesh_head.visible = this.player.joined;\r\n        this.hints_node!.visible = false;\r\n        this.countdown_node!.visible = false;\r\n        break;\r\n      case GamePrepareState.Computer:\r\n        this.hints_node!.visible = !this.player.joined && this.player.is_com;\r\n        this._mesh_head.visible = this.player.joined;\r\n        this.countdown_node!.visible = false;\r\n        break;\r\n      case GamePrepareState.GameSetting:\r\n        this._mesh_head.visible = this.player.joined;\r\n        this.hints_node!.visible = false;\r\n        this.countdown_node!.visible = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Sine } from \"../../animation/Sine\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { PlayerInfo } from \"../../PlayerInfo\";\r\nimport { UITextLoader } from \"../UITextLoader\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * 显示玩家角色选择的角色名称\r\n *\r\n * @export\r\n * @class FighterName\r\n * @extends {UIComponent}\r\n */\r\nexport default class FighterName extends UIComponent {\r\n  static override readonly TAG = 'FighterName'\r\n  private _text_loader = new UITextLoader(() => this.node).set_style(() => ({\r\n    fill_style: this.is_com ? \"pink\" : \"white\",\r\n    font: \"14px Arial\",\r\n  })).ignore_out_of_date();\r\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\r\n  get player(): PlayerInfo { return this.lf2.players.get(this.player_id)! }\r\n  get decided() {\r\n    return !!this.player.character_decided;\r\n  }\r\n  get text(): string {\r\n    const character_id = this.player.character;\r\n    const character = character_id\r\n      ? this.lf2.datas.find_character(character_id)\r\n      : void 0;\r\n    return character?.base.name ?? this.lf2.string(\"Random\");\r\n  }\r\n  get joined(): boolean {\r\n    return true === this.player.joined;\r\n  }\r\n  get is_com(): boolean {\r\n    return true === this.player.is_com;\r\n  }\r\n  protected _opacity: Sine = new Sine(0.65, 1, 6);\r\n  protected _unmount_jobs = new Invoker();\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this._unmount_jobs.add(\r\n      this.player.callbacks.add({\r\n        on_is_com_changed: () => this.handle_changed(),\r\n        on_joined_changed: () => this.handle_changed(),\r\n        on_character_changed: () => this.handle_changed(),\r\n        on_random_character_changed: () => this.handle_changed(),\r\n      }),\r\n    );\r\n    this.handle_changed();\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  protected handle_changed() {\r\n    this._text_loader.set_text([this.text])\r\n    this.node.set_visible(this.joined)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this._opacity.update(dt);\r\n    this.node.opacity = this.decided ? 1 : this._opacity.value;\r\n  }\r\n}\r\n","import { max, min } from \"../../utils\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class FitChildren extends UIComponent {\n  static override readonly TAG: string = 'FitChildren';\n  override on_resume(): void {\n  }\n  override update(dt: number): void {\n    const { children } = this.node\n    let min_left: number = 0;\n    let min_top: number = 0;\n    let max_right: number = 0;\n    let max_bottom: number = 0;\n    for (const child of children) {\n      if (!child.visible) continue;\n      const { left, right, top, bottom } = child.rect\n      min_left = min(left, min_left)\n      max_right = max(right, max_right)\n      min_top = min(top, min_top)\n      max_bottom = max(bottom, max_bottom)\n    }\n    const w = max_right - min_left\n    const h = max_bottom - min_top\n    const [, , cz] = this.node.center.value\n    this.node.size.value = [w, h]\n    this.node.center.value = [w ? -min_left / w : 0, h ? -min_top / h : 0, cz]\n  }\n}\n","import { max } from \"../../utils\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class HorizontalLayout extends UIComponent {\r\n  static override readonly TAG = 'HorizontalLayout'\r\n  override update(dt: number): void {\r\n    let w = 0;\r\n    let h = 0;\r\n    for (const l of this.node.children) {\r\n      if (!l.visible) continue;\r\n      const [, y, z] = l.pos.value\r\n      l.pos.value = [w, y, z];\r\n      w += l.w;\r\n      h = max(h, l.h);\r\n    }\r\n    this.node.size.value = [w, h];\r\n    const p = this.node.parent;\r\n    if (p) {\r\n      this.node.pos.value = [\r\n        (p.w - w) / 2,\r\n        (p.h - h) / 2,\r\n        this.node.pos.value[2]\r\n      ];\r\n    }\r\n  }\r\n}\r\n","import { Easing } from \"../../animation\";\r\nimport ease_linearity from \"../../utils/ease_method/ease_linearity\";\r\nimport { floor } from \"../../utils/math/base\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class ImgLoop extends UIComponent {\r\n  static override readonly TAG: string = 'ImgLoop';\r\n  readonly anim = new Easing(0, 1).set_duration(1000)\r\n    .set_ease_method(ease_linearity)\r\n    .set_times(0)\r\n    .set_fill_mode(1)\r\n  override on_start(): void {\r\n    const val_1 = this.num(0) || 0;\r\n    const val_2 = this.num(1) || this.node.data.img.length;\r\n    const duration = this.num(2) || this.anim.duration;\r\n    this.anim.set(val_1, val_2,).set_duration(duration)\r\n  }\r\n  stop(): void {\r\n    this.anim.set_times(1).set_count(0)\r\n  }\r\n  start(): void {\r\n    if (!this.enabled) this.enabled = true;\r\n    this.anim.set_times(0).set_count(0)\r\n  }\r\n  override update(dt: number): void {\r\n    if (!this.node.data.img.length) {\r\n      this.enabled = false;\r\n      return;\r\n    }\r\n    this.anim.update(dt);\r\n    const idx = floor(this.anim.value);\r\n    this.node.img_idx.value = idx;\r\n    if (this.anim.done) this.enabled = false;\r\n  }\r\n}","import { Animation, Delay, Easing, Sequence } from \"../../animation\";\r\nimport ease_linearity from \"../../utils/ease_method/ease_linearity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class OpacityAnimation extends UIComponent {\r\n\r\n  static override readonly TAG: string = \"OpacityAnimation\";\r\n  protected _anim: Sequence = new Sequence();\r\n  get loop() { return this._anim.loop }\r\n  get done() { return this._anim.done }\r\n  get anim(): Sequence { return this._anim; }\r\n  start(r?: boolean) {\r\n    this.anim.start(r)\r\n    this.node.opacity = this._anim.value;\r\n    this.enabled = true\r\n  }\r\n  stop(r?: boolean) {\r\n    this.anim.end(r)\r\n    this.node.opacity = this._anim.value;\r\n    this.enabled = false\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    const len = this.args.length;\r\n    const anims: Animation[] = [];\r\n    for (let i = 0; i < len - 2; i += 2) {\r\n      const opacity = this.num(2 + i) || 0;\r\n      const duration = this.num(2 + i + 1) || 0;\r\n      const prev_opacity = this.num(2 + i - 2) ?? opacity;\r\n      anims.push(\r\n        prev_opacity === opacity ?\r\n          new Delay(opacity)\r\n            .set_duration(duration) :\r\n          new Easing(prev_opacity, opacity)\r\n            .set_duration(duration)\r\n            .set_ease_method(ease_linearity)\r\n      )\r\n    }\r\n    this._anim = new Sequence(...anims).set_fill_mode(1)\r\n    const is_play = this.bool(0) ?? true;\r\n    const is_reverse = this.bool(1) ?? false;\r\n    if (is_play) this._anim.start(is_reverse)\r\n    else this._anim.end(is_reverse)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    if (!this._anim.done) this.node.opacity = this._anim.update(dt).value;\r\n    if (this._anim.done) this.set_enabled(false)\r\n    if (this._anim.done) return;\r\n  }\r\n}\r\n","import { Animation, Delay, Easing, Sequence } from \"../../animation\";\r\nimport ease_linearity from \"../../utils/ease_method/ease_linearity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n\r\nexport class PositionAnimation extends UIComponent {\r\n  static override readonly TAG: string = \"PositionAnimation\";\r\n  protected seq_anim: Sequence = new Sequence();\r\n  protected values = new Map<any, [[number, number, number], [number, number, number]]>()\r\n  start(v?: boolean) {\r\n    this.enabled = true;\r\n    this.seq_anim.start(v)\r\n  }\r\n  get is_end() {\r\n    return this.seq_anim.done\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    const len = this.args.length;\r\n    const anims: Animation[] = [];\r\n    for (let i = 0; i < len - 2; i += 2) {\r\n      const value = this.nums(i + 2, 3) || this.node.pos.value;\r\n      const duration = this.num(i + 3) || 0;\r\n      const prev_value = i == 0 ? value : (this.nums(i, 3) || value);\r\n      const a = value.join() === prev_value.join() ?\r\n        new Delay(0)\r\n          .set_duration(duration) :\r\n        new Easing(0, 1)\r\n          .set_duration(duration)\r\n          .set_ease_method(ease_linearity)\r\n      // new Sine(0, 1)\r\n      //   .set_offset(-250)\r\n      //   .set_scale(duration / 500)\r\n      //   .set_duration(duration)\r\n      this.values.set(a,\r\n        [\r\n          prev_value, [\r\n            value[0] - prev_value[0],\r\n            value[1] - prev_value[1],\r\n            value[2] - prev_value[2]\r\n          ]\r\n        ])\r\n      anims.push(a)\r\n    }\r\n    this.seq_anim = new Sequence(...anims).set_fill_mode(1)\r\n    const is_play = this.bool(0) ?? true;\r\n    const is_reverse = this.bool(1) ?? false;\r\n    if (is_play) this.seq_anim.start(is_reverse)\r\n    else this.seq_anim.end(is_reverse)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    if (!this.seq_anim.done) {\r\n      this.seq_anim.update(dt);\r\n      const pair = this.values.get(this.seq_anim.curr_anim)\r\n      if (!pair) return;\r\n      const { value } = this.seq_anim\r\n      this.node.pos.value = [\r\n        pair[0][0] + pair[1][0] * value,\r\n        pair[0][1] + pair[1][1] * value,\r\n        pair[0][2] + pair[1][2] * value,\r\n      ]\r\n    } else {\r\n      this.set_enabled(false)\r\n    }\r\n  }\r\n}","import { Animation, Delay, Easing, Sequence } from \"../../animation\";\r\nimport ease_linearity from \"../../utils/ease_method/ease_linearity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class ScaleAnimation extends UIComponent {\r\n  static override readonly TAG: string = \"ScaleAnimation\";\r\n  protected seq_anim: Sequence = new Sequence();\r\n  protected values = new Map<any, [[number, number, number], [number, number, number]]>()\r\n  start(v?: boolean) {\r\n    this.seq_anim.start(v)\r\n    this.enabled = true;\r\n  }\r\n  get is_end() {\r\n    return this.seq_anim.done\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    const len = this.args.length;\r\n    const anims: Animation[] = [];\r\n    for (let i = 0; i < len - 2; i += 2) {\r\n      const scale = this.nums(i + 2, 3) || this.node.scale.value;\r\n      const duration = this.num(i + 3) || 0;\r\n      const prev_scale = i == 0 ? scale : (this.nums(i, 3) || scale);\r\n      const a = scale.join() === prev_scale.join() ?\r\n        new Delay(0).set_duration(duration) :\r\n        new Easing(0, 1)\r\n          .set_duration(duration)\r\n          .set_ease_method(ease_linearity)\r\n\r\n      this.values.set(a,\r\n        [\r\n          prev_scale, [\r\n            scale[0] - prev_scale[0],\r\n            scale[1] - prev_scale[1],\r\n            scale[2] - prev_scale[2]\r\n          ]\r\n        ])\r\n      anims.push(a)\r\n    }\r\n    this.seq_anim = new Sequence(...anims).set_fill_mode(1)\r\n    const is_play = this.bool(0) ?? true;\r\n    const is_reverse = this.bool(1) ?? false;\r\n    if (is_play) this.seq_anim.start(is_reverse)\r\n    else this.seq_anim.end(is_reverse)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    if (!this.seq_anim.done) {\r\n      this.seq_anim.update(dt);\r\n      const pair = this.values.get(this.seq_anim.curr_anim)\r\n      if (!pair) return;\r\n      const { value } = this.seq_anim\r\n      this.node.set_scale(\r\n        pair[0][0] + pair[1][0] * value,\r\n        pair[0][1] + pair[1][1] * value,\r\n        pair[0][2] + pair[1][2] * value,\r\n      )\r\n    } else {\r\n      this.set_enabled(false)\r\n    }\r\n  }\r\n}\r\n\r\n","import { Sine } from \"../../animation/Sine\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nexport class SineOpacity extends UIComponent {\r\n  static override readonly TAG: string = \"SineOpacity\"\r\n  protected anim: Sine = new Sine(0, 1, 1);\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.anim.set(\r\n      this.num(0) ?? 0,\r\n      this.num(1) ?? 1,\r\n      this.num(2) ?? 1,\r\n    )\r\n      .set_offset(this.num(4) ?? 0)\r\n      .set_duration(this.num(3) ?? Number.MAX_SAFE_INTEGER);\r\n  }\r\n  override update(dt: number): void {\r\n    super.update?.(dt);\r\n    this.anim.update(dt);\r\n    this.node.opacity = this.anim.value;\r\n    if (this.anim.done) this.set_enabled(false)\r\n  }\r\n}\r\n","import FSM, { IState } from \"../../base/FSM\";\r\nimport { Ditto } from \"../../ditto\";\r\nimport { ILf2Callback } from \"../../ILf2Callback\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\r\nimport type { UINode } from \"../UINode\";\r\nimport { FadeOutOpacity } from \"./FadeOutOpacity\";\r\nimport { ImgLoop } from \"./ImgLoop\";\r\nimport { OpacityAnimation } from \"./OpacityAnimation\";\r\nimport { PositionAnimation } from \"./PositionAnimation\";\r\nimport { ScaleAnimation } from \"./ScaleAnimation\";\r\nimport { SineOpacity } from \"./SineOpacity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n\r\nenum Status {\r\n  TapHints = 'TapHints',\r\n  Introduction = 'Introduction',\r\n  GoToEntry = \"GoToEntry\",\r\n  End = \"End\",\r\n}\r\n\r\nexport class LaunchPage extends UIComponent {\r\n  static override readonly TAG = 'LaunchPage'\r\n  protected fsm: FSM<Status, IState<Status>>;\r\n  get entry_name(): string {\r\n    return this.args[0] || \"\";\r\n  }\r\n  protected tap_to_launch!: UINode;\r\n  protected sound_warning!: UINode;\r\n  protected yeonface!: UINode;\r\n  protected bearface!: UINode;\r\n  protected long_text!: UINode;\r\n  protected _prel_loaded: boolean = false;\r\n\r\n  constructor(...args: ConstructorParameters<typeof UIComponent>) {\r\n    super(...args);\r\n    // this.__debugging = true\r\n    this.fsm = new FSM<Status>().add({\r\n      key: Status.TapHints,\r\n      enter: () => {\r\n        this.node.search_component(ImgLoop, 'loading', (c) => {\r\n          c.anim.set_times(this._prel_loaded ? 1 : 0).set_count(0)\r\n        })\r\n        this.tap_to_launch.find_component(SineOpacity)!.enabled = true;\r\n        this.sound_warning.find_component(SineOpacity)!.enabled = true;\r\n        this.tap_to_launch.find_component(FadeOutOpacity)!.enabled = false;\r\n        this.sound_warning.find_component(FadeOutOpacity)!.enabled = false;\r\n      },\r\n      leave: () => {\r\n        this.tap_to_launch.find_component(SineOpacity)!.enabled = false\r\n        this.sound_warning.find_component(SineOpacity)!.enabled = false\r\n        this.tap_to_launch.find_component(FadeOutOpacity)!.enabled = true\r\n        this.sound_warning.find_component(FadeOutOpacity)!.enabled = true\r\n      }\r\n    }, {\r\n      key: Status.Introduction,\r\n      enter: () => {\r\n        Ditto.Timeout.add(() => this.lf2.sounds.play(\"builtin_data/launch/093.wav.mp3\"), 1000);\r\n        this.yeonface.find_component(ScaleAnimation, 'scale_in', c => {\r\n          c.start(false);\r\n        })\r\n        this.yeonface.find_component(PositionAnimation, 'move_in', c => {\r\n          c.start(false);\r\n        })\r\n        this.yeonface.find_component(OpacityAnimation, void 0, c => {\r\n          c.start(false);\r\n        })\r\n        this.bearface.find_component(ScaleAnimation, 'scale_in', c => {\r\n          c.start(false);\r\n        })\r\n        this.bearface.find_component(PositionAnimation, 'move_in', c => {\r\n          c.start(false);\r\n        })\r\n        this.bearface.find_component(OpacityAnimation, void 0, c => {\r\n          c.start(false);\r\n        })\r\n        this.long_text.find_component(PositionAnimation, 'move_in', c => {\r\n          c.start(false);\r\n        })\r\n        this.long_text.find_component(OpacityAnimation, 'opacity', c => {\r\n          c.start(false)\r\n        });\r\n      },\r\n      leave: () => {\r\n        this.yeonface.find_component(OpacityAnimation, void 0, c => {\r\n          c.start(true)\r\n          c.update(c.anim.anims[c.anim.anims.length - 1]!.duration)\r\n        })\r\n        this.bearface.find_component(OpacityAnimation, void 0, c => {\r\n          c.start(true)\r\n          c.update(c.anim.anims[c.anim.anims.length - 1]!.duration)\r\n        })\r\n        this.yeonface.find_component(ScaleAnimation, 'scale_out', c => {\r\n          c.start(false);\r\n        })\r\n        this.bearface.find_component(ScaleAnimation, 'scale_out', c => {\r\n          c.start(false);\r\n        })\r\n        this.long_text.find_component(OpacityAnimation, void 0, c => {\r\n          c.start(true)\r\n          c.update(c.anim.anims[c.anim.anims.length - 1]!.duration)\r\n        })\r\n      },\r\n      update: (dt) => {\r\n        if (this._prel_loaded && this.long_text.find_component(OpacityAnimation)!.done)\r\n          return Status.GoToEntry\r\n      }\r\n    }, {\r\n      key: Status.GoToEntry,\r\n      enter: () => {\r\n        this.lf2.sounds.play_bgm(\"bgm/main.wma.mp3\");\r\n      },\r\n      update: (dt) => {\r\n        if (this.long_text.find_component(OpacityAnimation)!.done) {\r\n          this.lf2.set_ui(this.entry_name);\r\n          return Status.End\r\n        }\r\n      }\r\n    }, {\r\n      key: Status.End,\r\n      update: (dt) => { }\r\n    })\r\n  }\r\n  protected on_prel_loaded() {\r\n    this._prel_loaded = true;\r\n    this.node.search_component(ImgLoop, 'loading', (c) => { c.anim.set_times(4).set_count(0) })\r\n  }\r\n  readonly lf2_cb: ILf2Callback = {\r\n    on_prel_loaded: () => {\r\n      this.lf2.sounds.load(\"bgm/main.wma.mp3\", \"bgm/main.wma.mp3\").catch(e => {\r\n        Ditto.warn(e)\r\n      }).then(() => {\r\n        this.on_prel_loaded()\r\n      });\r\n    },\r\n  }\r\n  override on_start(): void {\r\n    this._prel_loaded = this.lf2.uiinfos_loaded;\r\n    this.lf2.sounds.load(\"builtin_data/launch/093.wav.mp3\", \"builtin_data/launch/093.wav.mp3\");\r\n    this.lf2.callbacks.add(this.lf2_cb)\r\n  }\r\n  override on_stop(): void {\r\n    super.on_stop?.();\r\n    this.lf2.callbacks.del(this.lf2_cb)\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.bearface = this.node.find_child(\"bearface\")!;\r\n    this.yeonface = this.node.find_child(\"yeonface\")!;\r\n    this.tap_to_launch = this.node.find_child(\"tap_to_launch\")!;\r\n    this.sound_warning = this.node.find_child(\"sound_warning\")!;\r\n    this.long_text = this.node.find_child(\"long_text\")!;\r\n    this.fsm.use(Status.TapHints)\r\n  }\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    this.debug('on_key_down', e)\r\n    this.on_tap();\r\n    e.stop_immediate_propagation()\r\n  }\r\n  override on_click(e: IUIPointerEvent): void {\r\n    this.debug('on_click')\r\n    this.on_tap()\r\n    e.stop_immediate_propagation()\r\n  }\r\n  on_tap() {\r\n    const status = this.fsm.state?.key\r\n    switch (status) {\r\n      case Status.TapHints:\r\n        this.fsm.use(Status.Introduction);\r\n        return;\r\n    }\r\n    return true;\r\n  }\r\n  override update(dt: number): void {\r\n    this.fsm.update(dt);\r\n  }\r\n}\r\n","import { UITextLoader } from \"../UITextLoader\";\r\nimport factory from \"./Factory\";\r\nimport { FadeOutOpacity } from \"./FadeOutOpacity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class LoadingContentText extends UIComponent {\r\n  static override readonly TAG = \"LoadingContentText\"\r\n  private _text_loader = new UITextLoader(() => this.node)\r\n    .set_style(() => this.node.style)\r\n    .ignore_out_of_date();\r\n\r\n  get fade_out_duration() { return this.num(1) ?? 0 };\r\n  get fade_out_delay() { return this.num(2) ?? 0 }\r\n  protected fadeout?: FadeOutOpacity;\r\n\r\n  override init(...args: any[]): this {\r\n    super.init(...args);\r\n    if (this.fade_out_duration) {\r\n      const expression = FadeOutOpacity.expression(\r\n        this.fade_out_duration,\r\n        this.fade_out_delay\r\n      ).done()\r\n      this.fadeout = factory.create(this.node, expression)[0] as FadeOutOpacity\r\n      this.node.add_components(this.fadeout)\r\n    }\r\n    return this;\r\n  }\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.lf2.callbacks.add(this);\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.lf2.callbacks.del(this);\r\n  }\r\n\r\n  on_loading_end() {\r\n    const page = this.str(0)\r\n    if (page) this.lf2.set_ui(page)\r\n  }\r\n\r\n  on_loading_content(text: string, progress: number) {\r\n    this.fadeout?.start();\r\n    const str = progress ? `loading: ${text}(${progress}%)` : ` loading: ${text}`;\r\n    this._text_loader.set_text([str])\r\n  }\r\n}\r\n","import Easing from \"../../animation/Easing\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class OpacityHover extends UIComponent {\r\n  static override readonly TAG = 'OpacityHover'\r\n  protected anim = new Easing(0, 1).set_duration(150);\r\n  private _p: number | null = null;\r\n\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.anim.set(\r\n      this.num(0) ?? 0,\r\n      this.num(1) ?? 1,\r\n    ).set_duration(\r\n      this.num(2) ?? 255\r\n    ).set_reverse(false);\r\n    this._p = this.num(3)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    const n = this._p ? this.node.parent! : this.node;\r\n    const r = n.pointer_on_me !== 1 && !n.focused;\r\n    if (this.anim.reverse !== r) {\r\n      if (this.anim.done) {\r\n        this.anim.start(r)\r\n      } else {\r\n        this.anim.reverse = r;\r\n      }\r\n    }\r\n    this.node.opacity = this.anim.update(dt).value;\r\n  }\r\n}\r\n","import { CtrlDevice } from \"../../controller/CtrlDevice\";\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class PlayerCtrlType extends UIComponent {\n  static override readonly TAG: string = 'PlayerCtrlType';\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\n  get player_info() { return this.lf2.players.get(this.player_id)! }\n  override on_resume(): void {\n    super.on_resume();\n    this.player_info.callbacks.add(this)\n    this.on_ctrl_changed()\n  }\n  override on_click(e: IUIPointerEvent) {\n    this.node.focused = true;\n    e.stop_immediate_propagation();\n    this.node.to_next_img();\n    const ctrl: CtrlDevice = (this.node.img_idx.value % 5) as CtrlDevice\n    this.player_info.set_ctrl(ctrl, true).save()\n  }\n  on_ctrl_changed() {\n    this.node.img_idx.value = this.player_info.ctrl % this.node.imgs.value.length;\n  }\n}\n\n","import Invoker from \"../../base/Invoker\";\r\nimport { Entity } from \"../../entity/Entity\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport default class PlayerScore extends UIComponent {\r\n  static override readonly TAG: string = 'PlayerScore'\r\n  private _hp_lost: number = 0;\r\n  private _mp_usage: number = 0;\r\n  private _lose: boolean = false;\r\n  get hp_lost() {\r\n    return this._hp_lost;\r\n  }\r\n  get mp_usage() {\r\n    return this._mp_usage;\r\n  }\r\n  get lose() {\r\n    return this._lose;\r\n  }\r\n  get player_id(): string {\r\n    return this.args[0] || \"\";\r\n  }\r\n  get character(): Entity | undefined {\r\n    return this.lf2.player_characters.get(this.player_id);\r\n  }\r\n  private _unmount_job = new Invoker();\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n\r\n    this.node.visible = this.world.slot_fighters.size ? !!this.character : true;\r\n    this.character?.callbacks.add({\r\n      on_hp_changed: (e, value, prev) => {\r\n        if (value < prev) this._hp_lost += prev - value;\r\n      },\r\n      on_mp_changed: (e, value, prev) => {\r\n        if (value < prev) this._mp_usage += prev - value;\r\n      },\r\n      on_dead: (e) => {\r\n        if (!e.team) {\r\n          this._lose = true;\r\n          return;\r\n        }\r\n        for (const [, c] of this.world.slot_fighters) {\r\n          if (c.team !== e.team) continue;\r\n          if (c.hp > 0) {\r\n            this._lose = false;\r\n            return;\r\n          }\r\n        }\r\n        this._lose = true;\r\n      },\r\n    });\r\n  }\r\n\r\n  override on_show(): void {\r\n    super.on_show?.();\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_resume();\r\n    this._unmount_job.invoke_and_clear();\r\n  }\r\n}\r\n","import { ISprite } from \"../../3d\";\nimport { Sine } from \"../../animation/Sine\";\nimport Invoker from \"../../base/Invoker\";\nimport { Defines } from \"../../defines/defines\";\nimport { Ditto } from \"../../ditto\";\nimport type { UINode } from \"../UINode\";\nimport GamePrepareLogic from \"./GamePrepareLogic\";\nimport { UIComponent } from \"./UIComponent\";\nimport PlayerScore from \"./PlayerScore\";\nimport { IComponentInfo } from \"../IComponentInfo\";\n\n/**\n * 显示玩家角色选择的角色小头像\n *\n * @export\n * @class PlayerCharacterThumb\n * @extends {UIComponent}\n */\nexport default class PlayerFighterThumb extends UIComponent {\n  static override readonly TAG = 'PlayerFighterThumb'\n  private _player_id?: string;\n\n  get player_id() {\n    return this.args[0] || this._player_id || \"\";\n  }\n\n  get character() {\n    return this.lf2.player_characters.get(this.player_id);\n  }\n\n  get thumb_url(): string {\n    return (\n      this.character?.data.base.small ?? Defines.BuiltIn_Imgs.CHARACTER_THUMB\n    );\n  }\n\n  protected _opacity: Sine = new Sine(0.65, 1, 3);\n  protected readonly _mesh_thumb: ISprite;\n\n  get gpl(): GamePrepareLogic | undefined {\n    return this.node.root.find_component(GamePrepareLogic);\n  }\n\n  protected _unmount_jobs = new Invoker();\n\n  constructor(...args: ConstructorParameters<typeof UIComponent>) {\n    super(...args);\n    this._mesh_thumb = new Ditto.SpriteNode(this.lf2)\n      .set_center(0.5, 0.5)\n      .set_position(this.node.w / 2, -this.node.h / 2, 0.1)\n      .set_name(\"thumb\")\n      .apply();\n  }\n  override on_resume(): void {\n    super.on_resume();\n    this._player_id = this.node.lookup_component(PlayerScore)?.player_id;\n    this.node.renderer.sprite.add(this._mesh_thumb);\n    this._unmount_jobs.add(() => this.node.renderer.sprite.del(this._mesh_thumb));\n  }\n\n  override on_show(): void {\n    this.handle_changed();\n  }\n\n  override on_pause(): void {\n    super.on_pause();\n    this._unmount_jobs.invoke_and_clear();\n  }\n\n  protected handle_changed() {\n    const { thumb_url } = this;\n    const img = this.lf2.images.find(thumb_url);\n    if (img) {\n      const pic = this.lf2.images.create_pic_by_img_info(img);\n      this._mesh_thumb.set_info(pic).apply();\n    } else {\n      this.lf2.images.create_pic(thumb_url, thumb_url).then((pic) => {\n        this._mesh_thumb.set_info(pic).apply();\n      });\n    }\n  }\n}\n","import { Defines } from \"../../defines\";\r\nimport { GameKey } from \"../../defines/GameKey\";\r\nimport { UITextLoader } from \"../UITextLoader\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class PlayerKeyText extends UIComponent {\r\n  static override readonly TAG: string = 'PlayerKeyText';\r\n  private _text_loader = new UITextLoader(() => this.node).set_style({\r\n    fill_style: \"#9b9bff\",\r\n    font: \"14px Arial\",\r\n  }).ignore_out_of_date();\r\n\r\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\r\n  get key_name() { return this.args[1] || \"\"; }\r\n  get player() { return this.lf2.players.get(this.player_id); }\r\n  get key_code() {\r\n    const { player } = this;\r\n    if (!player) return 'NOT SET'\r\n    const kc = player.keys[this.key_name as GameKey]?.toUpperCase();\r\n    return Defines.SHORT_KEY_CODES[kc] || kc || 'NOT SET'\r\n  }\r\n  override on_resume() {\r\n    super.on_resume();\r\n    this.player?.callbacks.add(this)\r\n    this.on_key_changed();\r\n  }\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.player?.callbacks.del(this)\r\n  }\r\n  on_key_changed() {\r\n    this._text_loader.set_text([this.key_code])\r\n  }\r\n}\r\n","import { IKeyboardCallback } from \"../../ditto\";\r\nimport { IPointingsCallback } from \"../../ditto/pointings/IPointingsCallback\";\r\nimport { IUIPointerEvent } from \"../IUIPointerEvent\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport { PlayerKeyText } from \"./PlayerKeyText\";\r\n\r\nexport class PlayerKeyEdit extends PlayerKeyText {\r\n  static override readonly TAG: string = 'PlayerKeyEdit'\r\n  override on_click(e: IUIPointerEvent) {\r\n    this.node.focused = !this.node.focused;\r\n    e.stop_immediate_propagation();\r\n  }\r\n  override on_foucs(): void {\r\n    super.on_foucs?.();\r\n    this.on_key_changed();\r\n    this.lf2.pointings.callback.add(this.r);\r\n    this.lf2.keyboard.callback.add(this.l);\r\n  }\r\n  override on_blur(): void {\r\n    super.on_blur?.();\r\n    this.on_key_changed();\r\n    this.lf2.pointings.callback.del(this.r);\r\n    this.lf2.keyboard.callback.del(this.l);\r\n  }\r\n\r\n  private l: IKeyboardCallback = {\r\n    on_key_down: (e) => {\r\n      if (!this.node.focused) return;\r\n      if (\"escape\" !== e.key.toLowerCase()) {\r\n        this.player?.set_key(this.key_name, e.key, true).save();\r\n        const others = this.node.root.search_components(PlayerKeyEdit, v => v.player === this.player);\r\n        const idx = others.indexOf(this);\r\n        const next = others[idx + 1];\r\n        if (next) next.node.focused = true\r\n      }\r\n      this.node.focused = false;\r\n    }\r\n  }\r\n  private r: IPointingsCallback = {\r\n    on_pointer_down: () => this.node.focused = false\r\n  };\r\n\r\n  override on_key_changed() {\r\n    ui_load_txt(this.lf2, {\r\n      i18n: this.key_code, style: {\r\n        fill_style: this.node.focused ? \"blue\" : 'white',\r\n        font: \"14px Arial\",\r\n        padding_l: 20,\r\n        padding_r: 20,\r\n        padding_t: 3,\r\n        padding_b: 3,\r\n      }\r\n    }).then(v => {\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","import { Sine } from \"../../animation/Sine\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport type { UINode } from \"../UINode\";\r\nimport GamePrepareLogic, { GamePrepareState } from \"./GamePrepareLogic\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * 显示玩家名称\r\n *\r\n * @export\r\n * @class PlayerFighterHead\r\n * @extends {UIComponent}\r\n */\r\nexport default class PlayerName extends UIComponent {\r\n  static override readonly TAG: string = 'PlayerName';\r\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\r\n\r\n  get player() {\r\n    return this.lf2.players.get(this.player_id);\r\n  }\r\n  get player_name() {\r\n    return this.player?.name ?? this.player_id;\r\n  }\r\n  get joined(): boolean {\r\n    return true === this.player?.joined;\r\n  }\r\n  get is_com(): boolean {\r\n    return true === this.player?.is_com;\r\n  }\r\n  get gpl(): GamePrepareLogic | undefined {\r\n    return this.node.root.find_component(GamePrepareLogic);\r\n  }\r\n  get can_join(): boolean {\r\n    return this.gpl?.state === GamePrepareState.Player;\r\n  }\r\n  protected get text(): string {\r\n    if (this.is_com) return this.lf2.string(\"char_menu.computer\");\r\n    if (this.joined) return this.player_name;\r\n    if (this.can_join) return this.lf2.string(\"char_menu.join_q\");\r\n    return \"\";\r\n  }\r\n  protected _opacity: Sine = new Sine(0.65, 0.35, 3);\r\n  protected _unmount_jobs = new Invoker();\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n\r\n    this._unmount_jobs.add(\r\n      this.player?.callbacks.add({\r\n        on_is_com_changed: () => this.handle_changed(),\r\n        on_joined_changed: () => this.handle_changed(),\r\n        on_name_changed: () => this.handle_changed(),\r\n      }),\r\n      this.gpl?.fsm.callbacks.add({\r\n        on_state_changed: () => this.handle_changed(),\r\n      })\r\n    );\r\n    this.handle_changed();\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  protected handle_changed() {\r\n    ui_load_txt(this.lf2, {\r\n      i18n: this.text, style: {\r\n        fill_style: this.is_com ? \"pink\" : \"white\",\r\n        font: \"14px Arial\",\r\n      }\r\n    }).then(v => {\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this._opacity.update(dt);\r\n    this.node.opacity = this.joined ? 1 : this._opacity.value;\r\n  }\r\n}\r\n","import { PlayerInfo } from \"../../PlayerInfo\";\nimport { TextInput } from \"./TextInput\";\n\n\nexport class PlayerNameInput extends TextInput {\n  static override readonly TAG: string = 'PlayerNameInput';\n  player: PlayerInfo | undefined;\n\n\n  get player_id() { return this.node.get_value(\"player_id\", true) }\n\n  override get maxLength() { return this.props.num('maxLength') ?? 10; }\n  override get defaultValue() { return this.props.str('defaultValue'); }\n  override get text(): string {\n    return this.player?.name ?? '';\n  }\n  override set text(text: string) {\n    this.player?.set_name(text, true).save();\n  }\n  override on_start(): void {\n    this.player = this.lf2.players.get(this.player_id);\n    this.player?.callbacks.add(this)\n  }\n  override on_stop(): void {\n    this.player?.callbacks.del(this)\n  }\n  on_name_changed(name: string) {\n    this._text = name\n  }\n}\n","import IStyle from \"../../defines/IStyle\";\r\nimport { UITextLoader } from \"../UITextLoader\";\r\nimport PlayerScore from \"./PlayerScore\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nexport default class PlayerScoreCell extends UIComponent {\r\n  static override readonly TAG = 'PlayerScoreCell'\r\n  private _text_loader = new UITextLoader(() => this.node)\r\n    .set_style(() => this.get_style())\r\n    .ignore_out_of_date();\r\n  get kind() {\r\n    return this.args[0];\r\n  }\r\n  get player_score() {\r\n    return this.node.lookup_component(PlayerScore);\r\n  }\r\n\r\n  override on_show(): void {\r\n    super.on_show?.();\r\n    this._text_loader.set_text([this.get_txt()])\r\n  }\r\n\r\n  protected get_style(): IStyle {\r\n    const s = this.player_score;\r\n    const c = this.player_score?.character;\r\n    if (!s || !c) return this.node.style;\r\n    if (this.kind === \"status\") {\r\n      let clr = this.node.style.fill_style;\r\n      if (c.hp > 0) clr = this.node.get_value(\"win_alive_color\");\r\n      else if (s.lose) clr = this.node.get_value(\"lose_color\");\r\n      else clr = this.node.get_value(\"win_dead_color\");\r\n      return { ...this.node.style, fill_style: clr };\r\n    }\r\n    return this.node.style;\r\n  }\r\n  protected get_txt() {\r\n    const s = this.player_score;\r\n    const c = this.player_score?.character;\r\n    if (!s || !c) return \"-\";\r\n    switch (this.kind) {\r\n      case \"kill\":\r\n        return \"\" + c.kill_sum;\r\n      case \"attack\":\r\n        return \"\" + c.damage_sum;\r\n      case \"hp_lost\":\r\n        return \"\" + s.hp_lost;\r\n      case \"mp_usage\":\r\n        return \"\" + s.mp_usage;\r\n      case \"picking\":\r\n        return \"\" + c.picking_sum;\r\n      case \"status\": {\r\n        if (c.hp > 0) return this.node.get_value(\"win_alive_txt\");\r\n        else if (s.lose) return this.node.get_value(\"lose_txt\");\r\n        else return this.node.get_value(\"win_dead_txt\");\r\n      }\r\n    }\r\n    return \"-\";\r\n  }\r\n}\r\n","import { Sine } from \"../../animation/Sine\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { Defines } from \"../../defines/defines\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * 显示玩家队伍名\r\n *\r\n * @export\r\n * @class PlayerFighterHead\r\n * @extends {UIComponent}\r\n */\r\nexport default class PlayerTeamName extends UIComponent {\r\n  static override readonly TAG: string = 'PlayerTeamName';\r\n  get player_id() { return this.args[0] || this.node.find_parent(v => v.data.values?.player_id)?.data.values?.player_id || ''; }\r\n  get player() {\r\n    return this.lf2.players.get(this.player_id);\r\n  }\r\n  get decided() {\r\n    return !!this.player?.team_decided;\r\n  }\r\n  get text(): string {\r\n    const team = this.player?.team;\r\n    if(team === void 0) return ''\r\n    const info = Defines.TeamInfoMap[team]\r\n    if(info === void 0) return ''\r\n    return this.lf2.string(info.i18n);\r\n  }\r\n  get is_com(): boolean {\r\n    return true === this.player?.is_com;\r\n  }\r\n\r\n  protected _opacity: Sine = new Sine(0.65, 1, 3);\r\n  protected _unmount_jobs = new Invoker();\r\n\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this._unmount_jobs.add(\r\n      this.player?.callbacks.add({\r\n        on_is_com_changed: () => this.handle_changed(),\r\n        on_character_decided: () => this.handle_changed(),\r\n        on_team_changed: () => this.handle_changed(),\r\n      })\r\n    );\r\n    this.handle_changed();\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this._unmount_jobs.invoke_and_clear();\r\n  }\r\n\r\n  protected handle_changed() {\r\n    ui_load_txt(this.lf2, {\r\n      i18n: this.text, style: {\r\n        fill_style: this.is_com ? \"pink\" : \"white\",\r\n        font: \"14px Arial\",\r\n      }\r\n    }).then(v => {\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n    this.node.set_visible(!!this.player?.character_decided)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this._opacity.update(dt);\r\n    this.node.opacity = this.decided ? 1 : this._opacity.value;\r\n  }\r\n}\r\n","import { floor } from \"../../utils\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class PlayingTimeText extends UIComponent {\r\n  static override readonly TAG = 'PlayingTimeText'\r\n\r\n  override on_show(): void {\r\n    ui_load_txt(this.lf2, {\r\n      i18n: this.get_txt(), style: this.node.style\r\n    }).then(v => {\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n  }\r\n\r\n  protected get_txt(): string {\r\n    const ms = (this.world.stage.time * 1000) / 60;\r\n    const s = floor(ms / 1000) % 60;\r\n    const m = floor(ms / (60 * 1000)) % 60;\r\n    const h = floor(ms / (60 * 60 * 1000)) % 60;\r\n    let ret = \"\";\r\n    if (h) ret += h + \":\";\r\n    if (m > 9 || !h) ret += m + \":\";\r\n    else ret += \"0\" + m + \":\";\r\n    if (s > 9) ret += s;\r\n    else ret += \"0\" + s;\r\n    return ret;\r\n  }\r\n}\r\n","import { DifficultyNames } from \"../../defines\";\nimport { ILf2Callback } from \"../../ILf2Callback\";\nimport { ui_load_txt } from \"../ui_load_txt\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class PrefixAndDifficultyText extends UIComponent implements ILf2Callback {\n  static override readonly TAG = \"PrefixAndDifficultyText\"\n  private _prefix: string = '';\n\n  override on_start(): void {\n    super.on_start?.();\n    this._prefix = this.str(0) ?? '';\n  }\n\n  override on_resume(): void {\n    super.on_resume();\n    this.lf2.callbacks.add(this)\n    this.on_difficulty_changed()\n  }\n  override on_pause(): void {\n    super.on_pause();\n    this.lf2.callbacks.del(this)\n  }\n  on_difficulty_changed() {\n    const title = `${this._prefix} (${DifficultyNames[this.lf2.difficulty]})`\n\n    ui_load_txt(this.lf2, {\n      i18n: title, style: {\n        fill_style: \"white\",\n        font: \"12px Arial\",\n        line_width: 1,\n        disposable: true\n      }\n    }).then(v => {\n      this.node.txts.value = v;\n      this.node.txt_idx.value = 0;\n      const { w, h, scale } = v[0]!;\n      this.node.size.value = [w / scale, h / scale];\n    });\n  }\n}\n","import { UIComponent } from \"./UIComponent\";\r\n\r\nconst img_idx_list_map = new Map<string, number[]>();\r\n\r\nexport class RandomImgOnLayoutResume extends UIComponent {\r\n  static override readonly TAG = 'RandomImgOnLayoutResume'\r\n  private _img_idx_list: number[] = [];\r\n\r\n  get group() { return this.str(0) };\r\n  get img_idx_list() {\r\n    if (!this.group) return this._img_idx_list;\r\n    else return img_idx_list_map.get(this.group) || [];\r\n  }\r\n  set img_idx_list(v: number[]) {\r\n    if (!this.group) this._img_idx_list = v;\r\n    else img_idx_list_map.set(this.group, v);\r\n  }\r\n  override on_resume(): void {\r\n    super.on_resume?.();\r\n    const l = this.img_idx_list;\r\n    if (!l.length) this.node.data.img.forEach((_, i) => l.push(i));\r\n    if (!l.length) return;\r\n    this.node.img_idx.value = this.lf2.random_in(0, l.length);\r\n  }\r\n}","import { GameKey } from \"../../defines/GameKey\";\r\nimport { max } from \"../../utils/math/base\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport type { UINode } from \"../UINode\";\r\nimport { Reachable } from \"./Reachable\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class ReachableGroup extends UIComponent {\r\n  static override readonly TAG = 'ReachableGroup'\r\n  get name(): string {\r\n    return this.args[0] || \"\";\r\n  }\r\n  get direction(): string {\r\n    return this.args[1] || \"\";\r\n  }\r\n  get binded_layout(): UINode {\r\n    const lid = this.args[2];\r\n    if (!lid) return this.node;\r\n    return this.node.root.find_child(lid) || this.node;\r\n  }\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    const { game_key: key } = e;\r\n    if (!this.binded_layout.visible) return;\r\n    if (this.binded_layout.disabled) return;\r\n    switch (this.direction) {\r\n      case \"lr\":\r\n        if (key === \"L\" || key === \"R\") break;\r\n        else return;\r\n      case \"ud\":\r\n        if (key === \"U\" || key === \"D\") break;\r\n        else return;\r\n      default:\r\n        return;\r\n    }\r\n    const items = this.node.root.search_components(Reachable, (v) => {\r\n      return (\r\n        v.group_name === this.name &&\r\n        v.node.visible &&\r\n        !v.node.disabled\r\n      );\r\n    });\r\n    if (items.length <= 0) return;\r\n\r\n    if (this.direction === \"lr\") {\r\n      items.sort((a, b) => a.node.global_pos[0] - b.node.global_pos[0]);\r\n    } else if (this.direction === \"ud\") {\r\n      items.sort((a, b) => a.node.global_pos[1] - b.node.global_pos[1]);\r\n    }\r\n\r\n    const focused_layout = this.node.focused_node;\r\n\r\n    if (key === \"L\" || key === \"U\") {\r\n      const idx = items.findIndex((v) => v.node === focused_layout);\r\n      const next_idx = (max(idx, 0) + items.length - 1) % items.length;\r\n      items[next_idx]!.node.focused = true;\r\n    } else if (key === \"R\" || key === \"D\") {\r\n      const idx = items.findIndex((v) => v.node === focused_layout);\r\n      const next_idx = (idx + 1) % items.length;\r\n      items[next_idx]!.node.focused = true;\r\n    }\r\n  }\r\n}\r\n","import { ReachableGroup } from \"./ReachableGroup\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n\r\nexport class Reachable extends UIComponent {\r\n  static override readonly TAG = 'Reachable'\r\n  get group_name(): string {\r\n    return this.args[0] || '';\r\n  }\r\n  get group(): ReachableGroup | undefined {\r\n    return this.node.root.lookup_component(\r\n      ReachableGroup, \r\n      v => v.name === this.group_name\r\n    );\r\n  }\r\n}\r\n","import { Loop } from \"../../animation/Loop\";\r\nimport { Defines } from \"../../defines\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class Sounds extends UIComponent {\r\n\r\n  static override readonly TAG: string = 'Sounds';\r\n  protected seq: [number, string, boolean][] = [];\r\n  protected idx = 0;\r\n  protected time: number = 0;\r\n  readonly loop = new Loop()\r\n\r\n  start(): this {\r\n    this.idx = 0;\r\n    this.time = 0;\r\n    this.loop.reset();\r\n    this.enabled = true;\r\n    return this;\r\n  }\r\n  stop(): this {\r\n    this.idx = this.seq.length;\r\n    this.time = 0;\r\n    this.loop.reset();\r\n    this.enabled = false;\r\n    return this;\r\n  }\r\n  override on_start(): void {\r\n    const l = this.args.length;\r\n    let t = 0;\r\n    let s = '';\r\n    for (let i = 0; i < l; i += 2) {\r\n      t += this.num(i + 0) ?? 0;\r\n      s = this.str(i + 1) ?? '';\r\n      this.seq.push([t, s, s in Defines.BuiltIn_Sounds]);\r\n    }\r\n  }\r\n  override on_resume(): void {\r\n    this.time = 0;\r\n    this.idx = 0;\r\n  }\r\n  override update(dt: number): void {\r\n    super.update?.(dt)\r\n    const l = this.seq.length;\r\n    if (!l) return;\r\n    if (this.idx >= l) return\r\n    if (this.loop.done()) return;\r\n\r\n    this.time += dt;\r\n    for (; this.idx < l; ++this.idx) {\r\n      const [t, s, b] = this.seq[this.idx]!;\r\n      if (t > this.time) break;\r\n      if (b) this.lf2.sounds.play_with_load(s)\r\n      else this.lf2.sounds.play_preset(s)\r\n    }\r\n\r\n    if (this.idx >= l) {\r\n      if (this.loop.continue()) {\r\n        this.time = 0;\r\n        this.idx = 0;\r\n      } else {\r\n        this.set_enabled(false)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Defines, GONE_FRAME_INFO, type IStagePhaseInfo } from \"../../defines\";\r\nimport type { Entity } from \"../../entity\";\r\nimport type IEntityCallbacks from \"../../entity/IEntityCallbacks\";\r\nimport { is_character } from \"../../entity/type_check\";\r\nimport { IWorldCallbacks } from \"../../IWorldCallbacks\";\r\nimport type { Stage } from \"../../stage\";\r\nimport type IStageCallbacks from \"../../stage/IStageCallbacks\";\r\nimport { traversal } from \"../../utils/container_help/traversal\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport { UINode } from \"../UINode\";\r\nimport { Jalousie } from \"./Jalousie\";\r\nimport { OpacityAnimation } from \"./OpacityAnimation\";\r\nimport { Sounds } from \"./Sounds\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class StageModeLogic extends UIComponent\r\n  implements IEntityCallbacks, IStageCallbacks, IWorldCallbacks {\r\n  static override readonly TAG = 'StageModeLogic'\r\n  jalousie?: Jalousie;\r\n  go_sounds!: Sounds;\r\n  go_flashing!: OpacityAnimation;\r\n  score_board!: UINode;\r\n  time = 0;\r\n  game_over_time: number = -1;\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    if (this.world.paused) this.world.paused = false;\r\n    this.world.playrate = 1;\r\n    this.score_board = this.node.find_child(\"score_board\")!\r\n    this.jalousie = this.node.search_component(Jalousie)\r\n    this.go_sounds = this.node.search_component(Sounds, \"go_sounds\")!\r\n    this.go_flashing = this.node.search_component(OpacityAnimation, \"go_flashing\")!\r\n    for (const [, f] of this.world.slot_fighters) {\r\n      this.on_fighter_add(f)\r\n    }\r\n  }\r\n  override on_stop(): void {\r\n    this.world.entities.forEach(v => v.enter_frame(GONE_FRAME_INFO))\r\n  }\r\n  override on_resume(): void {\r\n    this.lf2.world.stage.callbacks.add(this);\r\n    this.lf2.world.callbacks.add(this);\r\n  }\r\n  override on_pause(): void {\r\n    this.lf2.world.stage.callbacks.del(this)\r\n    this.lf2.world.callbacks.del(this);\r\n  }\r\n  override update(dt: number): void {\r\n    this.time += dt;\r\n    if (this.jalousie && !this.jalousie.open && this.jalousie.anim.done) {\r\n      this.lf2.goto_next_stage()\r\n      this.jalousie.open = true;\r\n    }\r\n    if (this.game_over_time > 0 && this.time - this.game_over_time > 3000) {\r\n      this.lf2.sounds.play_preset(\"end\");\r\n      this.score_board.visible = true;\r\n      this.game_over_time = -1;\r\n    }\r\n  }\r\n  on_fighter_add(entity: Entity): void {\r\n    entity.callbacks.add(this)\r\n  }\r\n  on_fighter_del(entity: Entity): void {\r\n    entity.callbacks.del(this)\r\n  }\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    if ((e.game_key === 'a' || e.game_key === 'j') && this.world.stage.is_chapter_finish) {\r\n      e.stop_immediate_propagation();\r\n      this.lf2.goto_next_stage();\r\n    }\r\n  }\r\n  on_stage_change() {\r\n    this.lf2.world.stage.callbacks.add(this);\r\n    this.go_sounds.stop();\r\n    this.go_flashing.stop();\r\n    if (this.jalousie) this.jalousie.open = true;\r\n  }\r\n  on_phase_changed(\r\n    stage: Stage,\r\n    curr: IStagePhaseInfo | undefined,\r\n    prev: IStagePhaseInfo | undefined,\r\n  ) {\r\n    this.debug('on_phase_changed', stage, curr, prev)\r\n    if (stage.is_chapter_finish) return;\r\n    this.score_board.visible = false;\r\n    if (prev) {\r\n      if (!curr) {\r\n        this.go_flashing.loop.set(0, Number.MAX_SAFE_INTEGER);\r\n      } else {\r\n        this.go_flashing.loop.set(0, 1);\r\n      }\r\n      this.go_sounds.start()\r\n      this.go_flashing.start();\r\n    } else {\r\n      this.go_sounds.stop()\r\n      this.go_flashing.stop();\r\n    }\r\n  }\r\n  on_chapter_finish(stage: Stage) {\r\n    this.debug('on_chapter_finish', stage)\r\n    this.lf2.sounds.play_preset(\"pass\");\r\n    this.score_board.visible = true;\r\n  }\r\n  on_requrie_goto_next_stage(stage: Stage) {\r\n    this.debug('on_requrie_goto_next_stage', stage)\r\n    if (this.jalousie) this.jalousie.open = false;\r\n  }\r\n  on_dead(e: Entity) {\r\n    if (this.world.stage.data.id === Defines.VOID_STAGE.id) {\r\n\r\n      // 各队伍存活计数\r\n      const player_teams: { [x in string]?: number } = {};\r\n\r\n      for (const [, f] of this.world.slot_fighters)\r\n        player_teams[f.team] = 0 // 玩家队伍\r\n\r\n      for (const e of this.world.entities) {\r\n        if (is_character(e) && e.hp > 0 && player_teams[e.team] !== void 0)\r\n          ++player_teams[e.team]!; // 存活计数++\r\n      }\r\n\r\n      // 剩余队伍数\r\n      let team_remains = 0;\r\n      traversal(player_teams, (_, v) => {\r\n        if (v) ++team_remains;\r\n      })\r\n\r\n      // 大于一队，继续打\r\n      if (team_remains > 1) return;\r\n\r\n      this.game_over_time = this.time;\r\n    } else {\r\n      // 玩家队伍存活计数\r\n      const player_teams: { [x in string]?: number } = {};\r\n\r\n      for (const [, f] of this.world.slot_fighters)\r\n        player_teams[f.team] = 0 // 玩家队伍\r\n\r\n      for (const e of this.world.entities) {\r\n        if (is_character(e) && e.hp > 0 && player_teams[e.team] !== void 0)\r\n          ++player_teams[e.team]!; // 存活计数++\r\n      }\r\n\r\n      // 剩余队伍数\r\n      let team_remains = 0;\r\n      traversal(player_teams, (_, v) => {\r\n        if (v) ++team_remains;\r\n      })\r\n\r\n      // 大于0队，继续打\r\n      if (team_remains > 0) return;\r\n      this.game_over_time = this.time;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Delay } from \"../../animation\";\r\nimport Easing from \"../../animation/Easing\";\r\nimport { Sequence } from \"../../animation/Sequence\";\r\nimport Invoker from \"../../base/Invoker\";\r\nimport { Stage } from \"../../stage/Stage\";\r\nimport { ui_load_txt } from \"../ui_load_txt\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class StageTitleShow extends UIComponent {\r\n  static override readonly TAG = 'StageTitleShow';\r\n  private _opactiy: Sequence = new Sequence(\r\n    new Easing(0, 1).set_duration(500),\r\n    new Delay(1)\r\n      .set_duration(3000),\r\n    new Easing(1, 0).set_duration(500),\r\n  );\r\n\r\n  on_chapter_finish() {\r\n    this.node.visible = false;\r\n    ui_load_txt(this.lf2, {\r\n      i18n: \"STAGE CLEAR!\", style: {\r\n        fill_style: \"white\",\r\n        font: \"46px \\\"Arial Black\\\", Arial\",\r\n        back_style: {\r\n          font: \"46px \\\"Arial Black\\\", Arial\",\r\n          stroke_style: \"#005A8E\",\r\n          line_width: 5\r\n        }\r\n      }\r\n    }).then(v => {\r\n      this.node.visible = true\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n    this._opactiy.start(false);\r\n  }\r\n\r\n  on_stage_change(stage: Stage, prev?: Stage) {\r\n    prev?.callbacks.del(this)\r\n    stage.callbacks.add(this)\r\n    const title = stage.data.title ?? stage.bg.name ?? \"\"\r\n    this.node.visible = false;\r\n    ui_load_txt(this.lf2, {\r\n      i18n: title, style: {\r\n        fill_style: \"white\",\r\n        font: \"46px \\\"Arial Black\\\", Arial\",\r\n        back_style: {\r\n          font: \"46px \\\"Arial Black\\\", Arial\",\r\n          stroke_style: \"#005A8E\",\r\n          line_width: 5\r\n        }\r\n      }\r\n    }).then(v => {\r\n      this.node.visible = true\r\n      this.node.txts.value = v;\r\n      this.node.txt_idx.value = 0;\r\n      const { w, h, scale } = v[0]!\r\n      this.node.size.value = [w / scale, h / scale];\r\n    })\r\n    this._opactiy.start(false);\r\n  }\r\n\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.on_stage_change(this.world.stage)\r\n  }\r\n\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.world.callbacks.add(this)\r\n\r\n  }\r\n\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.world.callbacks.del(this)\r\n  }\r\n\r\n  override update(dt: number): void {\r\n    this._opactiy.update(dt);\r\n    this.node.opacity = this._opactiy.value\r\n  }\r\n}","import { Stage } from \"../../stage\";\nimport { UITextLoader } from \"../UITextLoader\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class StageTitleText extends UIComponent {\n  static override readonly TAG = \"StageTitleText\"\n  private _text_loader = new UITextLoader(() => this.node).set_style({\n    fill_style: \"white\",\n    font: \"12px Arial\",\n    line_width: 1,\n    padding_t: 2\n  }).ignore_out_of_date();\n\n  override on_start(): void {\n    super.on_start?.();\n    this.on_stage_change(this.world.stage)\n  }\n\n  override on_resume(): void {\n    super.on_resume();\n    this.world.callbacks.add(this)\n  }\n  override on_pause(): void {\n    super.on_pause();\n    this.world.callbacks.del(this)\n  }\n  on_stage_change(stage: Stage) {\n    const title = stage.data.title ?? stage.bg.name ?? \"\"\n    this._text_loader.set_text([title]);\n  }\n}\n","import { ILf2Callback } from \"../../ILf2Callback\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport default class StageTransitions extends UIComponent implements ILf2Callback {\r\n  static override readonly TAG = 'StageTransitions'\r\n  override on_resume(): void {\r\n    super.on_resume();\r\n    this.lf2.callbacks.add(this);\r\n  }\r\n  override on_pause(): void {\r\n    super.on_pause();\r\n    this.lf2.callbacks.del(this);\r\n  }\r\n  on_enter_next_stage(): void {\r\n    alert(\"!\");\r\n  }\r\n}\r\n","import { get_team_text_color } from \"../../base/get_team_text_color\";\nimport IStyle from \"../../defines/IStyle\";\nimport { TeamEnum } from \"../../defines/TeamEnum\";\nimport { Stage } from \"../../stage\";\nimport { floor, max } from \"../../utils\";\nimport { UITextLoader } from \"../UITextLoader\";\nimport { ITeamSumInfo } from \"./ITeamSumInfo\";\nimport { SummaryLogic } from \"./SummaryLogic\";\nimport { UIComponent } from \"./UIComponent\";\n\nexport class TeamSituationText extends UIComponent {\n  static override readonly TAG = \"TeamSituationText\"\n\n  private _text_loader = new UITextLoader(() => this.node)\n    .set_style(() => this._style)\n    .ignore_out_of_date();\n\n  private _team: string | null = null;\n  private _style: IStyle = {\n    fill_style: 'white',\n    font: \"12px Arial\",\n    line_width: 1,\n    disposable: true\n  };\n  private _sum: ITeamSumInfo | undefined;\n  private _text: string = ' ';\n  override on_start(): void {\n    super.on_start?.();\n    this._team = this.str(0);\n    if (this._team) {\n      this.set_team(this._team)\n    } else {\n      this.world.callbacks.add(this)\n      this.on_stage_change(this.world.stage)\n    }\n  }\n  override on_stop(): void {\n    if (!this._team) {\n      this.world.callbacks.del(this)\n    }\n  }\n  set_team(team: string) {\n    this._style = {\n      fill_style: get_team_text_color(team, get_team_text_color(TeamEnum.Team_2)),\n      font: \"12px Arial\",\n      line_width: 1,\n      disposable: true\n    }\n    this._sum = this.node.root.search_component(SummaryLogic)?.team_sum(team)\n    this.rr();\n  }\n  on_stage_change(curr: Stage) {\n    this.set_team(curr.team)\n  }\n\n  override on_resume(): void {\n    super.on_resume()\n    this.rr();\n  }\n\n  override update(dt: number): void {\n    if (this.world.time % 30 === 0) this.rr();\n  }\n\n  private rr() {\n    if (!this._sum) return;\n    let text = `Man: ${this._sum.lives}　HP: ${max(0, floor(this._sum.hp))}`;\n    if (this._sum.reserve) text += `　Reserve: ${this._sum.reserve}`;\n    if (this._text == text) return;\n    this._text_loader.set_text([text])\n  }\n}\n","import { max } from \"../../utils/math/base\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class VerticalLayout extends UIComponent {\r\n  static override readonly TAG = 'VerticalLayout'\r\n  get gap() {\r\n    return this.num(0) || 0\r\n  }\r\n  override update(dt: number): void {\r\n    let max_w = 0;\r\n    let max_h = 0;\r\n\r\n    const [cx, cy] = this.node.center.value;\r\n    const pos_list: [number, number, number][] = []\r\n    for (const item of this.node.children) {\r\n      if (!item.visible) continue;\r\n      const [w, h] = item.size.value\r\n      const [cx, cy] = item.center.value\r\n      const [, , z] = item.pos.value;\r\n      pos_list.unshift([(1 - cx) * w, max_h + (1 - cy) * h, z] as const)\r\n      max_h += item.h + this.gap;\r\n      max_w = max(max_w, item.w);\r\n    }\r\n\r\n    for (const item of this.node.children) {\r\n      if (!item.visible) continue;\r\n      const [, h] = item.size.value\r\n      const [x, y, z] = pos_list.pop()!\r\n      const yy = y - cy * max_h - h\r\n      const xx = cx * max_w - x\r\n      item.pos.value = [xx, yy, z];\r\n    }\r\n    this.node.size.value = [max_w, max_h];\r\n  }\r\n}\r\n\r\n\r\n","import { GameKey, GONE_FRAME_INFO } from \"../../defines\";\r\nimport type { Entity } from \"../../entity\";\r\nimport type IEntityCallbacks from \"../../entity/IEntityCallbacks\";\r\nimport { is_character } from \"../../entity/type_check\";\r\nimport type IStageCallbacks from \"../../stage/IStageCallbacks\";\r\nimport { traversal } from \"../../utils/container_help/traversal\";\r\nimport { IUIKeyEvent } from \"../IUIKeyEvent\";\r\nimport { UINode } from \"../UINode\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\nexport class VsModeLogic extends UIComponent {\r\n  static override readonly TAG = 'VsModeLogic'\r\n  protected score_board?: UINode;\r\n  protected time = 0;\r\n  protected is_game_over: boolean = false;\r\n  protected game_over_time: number = Number.MAX_SAFE_INTEGER;\r\n  protected cancellers: (() => void)[] = []\r\n  protected fighter_callbacks: IEntityCallbacks = {\r\n    on_dead: (e: Entity) => {\r\n      // 各队伍存活计数\r\n      const player_teams: { [x in string]?: number } = {};\r\n\r\n      for (const [, f] of this.world.slot_fighters)\r\n        player_teams[f.team] = 0 // 玩家队伍\r\n\r\n      for (const e of this.world.entities) {\r\n        if (is_character(e) && e.hp > 0 && player_teams[e.team] !== void 0)\r\n          ++player_teams[e.team]!; // 存活计数++\r\n      }\r\n\r\n      // 剩余队伍数\r\n      let team_remains = 0;\r\n      traversal(player_teams, (_, v) => {\r\n        if (v) ++team_remains;\r\n      })\r\n\r\n      // 大于一队，继续打\r\n      if (team_remains > 1) return;\r\n      this.game_over_time = this.time;\r\n    }\r\n  }\r\n  protected reset() {\r\n    this.game_over_time = Number.MAX_SAFE_INTEGER;\r\n    this.is_game_over = false;\r\n    this.world.paused = false;\r\n    this.world.playrate = 1;\r\n  }\r\n  override on_start(): void {\r\n    super.on_start?.();\r\n    this.score_board = this.node.find_child(\"score_board\")!\r\n    for (const [, f] of this.world.slot_fighters)\r\n      this.cancellers.push(f.callbacks.add(this.fighter_callbacks))\r\n    this.reset()\r\n  }\r\n  override on_stop(): void {\r\n    this.world.entities.forEach(v => {\r\n      v.enter_frame(GONE_FRAME_INFO)\r\n      v.next_frame = GONE_FRAME_INFO\r\n    })\r\n    for (const func of this.cancellers) func()\r\n    this.cancellers.length = 0;\r\n  }\r\n  override update(dt: number): void {\r\n    this.time += dt;\r\n    if (\r\n      !this.is_game_over &&\r\n      this.time - this.game_over_time > 3000\r\n    ) {\r\n      this.lf2.sounds.play_preset(\"end\");\r\n      if (this.score_board) this.score_board.visible = true;\r\n      this.game_over_time = Number.MAX_SAFE_INTEGER;\r\n      this.is_game_over = true;\r\n    }\r\n  }\r\n  override on_key_down(e: IUIKeyEvent): void {\r\n    switch (e.game_key) {\r\n      case GameKey.a:\r\n      case GameKey.j: {\r\n        if (this.is_game_over) {\r\n          e.stop_immediate_propagation();\r\n          this.lf2.pop_ui()\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Ditto } from \"../../ditto\";\r\nimport { is_str } from \"../../utils/type_check\";\r\nimport { IUIInfo } from \"../IUIInfo.dat\";\r\nimport type { UINode } from \"../UINode\";\r\nimport { parse_call_func_expression } from \"../utils/parse_call_func_expression\";\r\nimport { Alignment } from \"./Alignment\";\r\nimport BackgroundNameText from \"./BackgroundNameText\";\r\nimport { CameraCtrl } from \"./CameraCtrl\";\r\nimport ComNumButton from \"./ComNumButton\";\r\nimport { DanmuGameLogic } from \"./DanmuGameLogic\";\r\nimport { DemoModeLogic } from \"./DemoModeLogic\";\r\nimport DifficultyText from \"./DifficultyText\";\r\nimport { EndingPageLogic } from \"./EndingPageLogic\";\r\nimport { FadeInOpacity } from \"./FadeInOpacity\";\r\nimport { FadeOutOpacity } from \"./FadeOutOpacity\";\r\nimport FighterHead from \"./FighterHead\";\r\nimport FighterName from \"./FighterName\";\r\nimport { FitChildren } from \"./FitChildren\";\r\nimport { Flex } from \"./Flex\";\r\nimport { FlexItem } from \"./FlexItem\";\r\nimport GamePrepareLogic from \"./GamePrepareLogic\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { IUICompnentCallbacks } from \"./IUICompnentCallbacks\";\r\nimport { ImgLoop } from \"./ImgLoop\";\r\nimport { Jalousie } from \"./Jalousie\";\r\nimport { LaunchPage } from \"./LaunchPageLogic\";\r\nimport { LoadingContentText } from \"./LoadingContentText\";\r\nimport { OpacityAnimation } from \"./OpacityAnimation\";\r\nimport { OpacityHover } from \"./OpacityHover\";\r\nimport { PlayerCtrlType } from \"./PlayerCtrlType\";\r\nimport PlayerFighterThumb from \"./PlayerFighterThumb\";\r\nimport { PlayerKeyEdit } from \"./PlayerKeyEdit\";\r\nimport { PlayerKeyText } from \"./PlayerKeyText\";\r\nimport PlayerName from \"./PlayerName\";\r\nimport { PlayerNameInput } from \"./PlayerNameInput\";\r\nimport PlayerScore from \"./PlayerScore\";\r\nimport PlayerScoreCell from \"./PlayerScoreCell\";\r\nimport PlayerTeamName from \"./PlayerTeamName\";\r\nimport { PlayingTimeText } from \"./PlayingTimeText\";\r\nimport { PositionAnimation } from \"./PositionAnimation\";\r\nimport { PrefixAndDifficultyText } from \"./PrefixAndDifficultyText\";\r\nimport { RandomImgOnLayoutResume } from \"./RandomImgOnLayoutResume\";\r\nimport { Reachable } from \"./Reachable\";\r\nimport { ReachableGroup } from \"./ReachableGroup\";\r\nimport { ScaleAnimation } from \"./ScaleAnimation\";\r\nimport { SineOpacity } from \"./SineOpacity\";\r\nimport SlotSelLogic from \"./SlotSelLogic\";\r\nimport { Sounds } from \"./Sounds\";\r\nimport { StageModeLogic } from \"./StageModeLogic\";\r\nimport StageNameText from \"./StageNameText\";\r\nimport { StageTitleShow } from \"./StageTitleShow\";\r\nimport { StageTitleText } from \"./StageTitleText\";\r\nimport StageTransitions from \"./StageTransitions\";\r\nimport { SummaryLogic } from \"./SummaryLogic\";\r\nimport { TeamSituationText } from \"./TeamSituationText\";\r\nimport { TextInput } from \"./TextInput\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { VsModeLogic } from \"./VsModeLogic\";\r\nconst COMPONENTS = [\r\n  LaunchPage,\r\n  LoadingContentText,\r\n  PlayerKeyEdit,\r\n  PlayerKeyText,\r\n  StageTransitions,\r\n  SlotSelLogic,\r\n  FighterHead,\r\n  PlayerFighterThumb,\r\n  FighterName,\r\n  PlayerName,\r\n  PlayerTeamName,\r\n  GamePrepareLogic,\r\n  ComNumButton,\r\n  StageTitleShow,\r\n  ReachableGroup,\r\n  Reachable,\r\n  DifficultyText,\r\n  StageNameText,\r\n  StageTitleText,\r\n  BackgroundNameText,\r\n  OpacityHover,\r\n  VerticalLayout,\r\n  HorizontalLayout,\r\n  PlayerScore,\r\n  PlayerScoreCell,\r\n  VsModeLogic,\r\n  StageModeLogic,\r\n  DemoModeLogic,\r\n  PlayingTimeText,\r\n  RandomImgOnLayoutResume,\r\n  Jalousie,\r\n  SineOpacity,\r\n  FadeInOpacity,\r\n  FadeOutOpacity,\r\n  OpacityAnimation,\r\n  ScaleAnimation,\r\n  PositionAnimation,\r\n  Sounds,\r\n  ImgLoop,\r\n  PlayerCtrlType,\r\n  Alignment,\r\n  Flex,\r\n  FlexItem,\r\n  FitChildren,\r\n  DanmuGameLogic,\r\n  CameraCtrl,\r\n  SummaryLogic,\r\n  EndingPageLogic,\r\n  PrefixAndDifficultyText,\r\n  TeamSituationText,\r\n  TextInput,\r\n  PlayerNameInput\r\n].map(v => [v.TAG, v] as const)\r\n\r\nclass ComponentFactory {\r\n  static readonly TAG = `ComponentFactory`;\r\n  private _component_map = new Map<string, typeof UIComponent<IUICompnentCallbacks>>(COMPONENTS);\r\n\r\n  register(key: string, Cls: typeof UIComponent) {\r\n    if (this._component_map.has(key))\r\n      Ditto.warn(`[${ComponentFactory.TAG}::register] key already exists, ${key}`)\r\n    this._component_map.set(key, Cls);\r\n  }\r\n\r\n  create(layout: UINode, components: IUIInfo[\"component\"]): UIComponent[] {\r\n    if (!components) return [];\r\n    if (!Array.isArray(components)) components = [components]\r\n    if (!components.length) return [];\r\n\r\n    const ret: UIComponent[] = [];\r\n    for (let idx = 0; idx < components.length; idx++) {\r\n      const raw = components[idx];\r\n      const info = is_str(raw) ? parse_call_func_expression(raw) : raw\r\n      if (!info) {\r\n        Ditto.warn(`[${ComponentFactory.TAG}::create] expression not correct! expression: ${raw}`);\r\n        continue;\r\n      }\r\n      const cls = this._component_map.get(info.name);\r\n      if (!cls) {\r\n        Ditto.warn(`[${ComponentFactory.TAG}::create] Component not found! expression: ${raw}`);\r\n        continue;\r\n      }\r\n      const { name, args = [], enabled = true, id = '', properties = {} } = info;\r\n      const component = new cls(layout, name, { name, args, enabled, id, properties })\r\n      component.init(...args)\r\n      component.set_enabled(enabled);\r\n      component.id = id || `${name}_${idx}`\r\n      ret.push(component);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n}\r\nconst factory = new ComponentFactory();\r\nexport default factory;\r\n","import { LF2 } from \"../LF2\";\r\nimport Callbacks from \"../base/Callbacks\";\r\nimport { Expression } from \"../base/Expression\";\r\nimport { NoEmitCallbacks } from \"../base/NoEmitCallbacks\";\r\nimport StateDelegate from \"../base/StateDelegate\";\r\nimport { IValGetter } from \"../defines/IExpression\";\r\nimport IStyle from \"../defines/IStyle\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { IUINodeRenderer } from \"../ditto/render/IUINodeRenderer\";\r\nimport { IDebugging, make_debugging } from \"../entity/make_debugging\";\r\nimport { type IImageInfo } from \"../loader/IImageInfo\";\r\nimport { ITextImageInfo } from \"../loader/ITextImageInfo\";\r\nimport { floor } from \"../utils\";\r\nimport { filter, find } from \"../utils/container_help\";\r\nimport { is_bool, is_num, is_str } from \"../utils/type_check\";\r\nimport { ICookedUIInfo } from \"./ICookedUIInfo\";\r\nimport { IUICallback } from \"./IUICallback\";\r\nimport { IUIKeyEvent } from \"./IUIKeyEvent\";\r\nimport { IUIPointerEvent } from \"./IUIPointerEvent\";\r\nimport actor from \"./action/Actor\";\r\nimport factory from \"./component/Factory\";\r\nimport { UIComponent } from \"./component/UIComponent\";\r\nimport { parse_ui_value } from \"./read_info_value\";\r\n\r\nexport class UINode implements IDebugging {\r\n\r\n  static readonly TAG: string = 'UINode';\r\n  debug!: (_0: string, ..._1: any[]) => void;\r\n  warn!: (_0: string, ..._1: any[]) => void;\r\n  log!: (_0: string, ..._1: any[]) => void;\r\n\r\n  readonly lf2: LF2;\r\n  readonly id_ui_map: Map<string, UINode[]>;\r\n  readonly name_ui_map: Map<string, UINode[]>;\r\n\r\n  /**\r\n   * 原始UI数据\r\n   * \r\n   * 对UINode的一些属性进行修改，不会影响到原始UI数据。\r\n   *\r\n   * @type {Readonly<ICookedUIInfo>}\r\n   * @memberof UINode\r\n   */\r\n  readonly data: Readonly<ICookedUIInfo>;\r\n\r\n  protected _callbacks = new Callbacks<IUICallback>();\r\n  protected _pointer_on_me: 0 | 1 = 0;\r\n  protected _pointer_down: 0 | 1 = 0;\r\n  protected _click_flag: 0 | 1 = 0;\r\n  protected _update_times: number = 0;\r\n\r\n  get callbacks(): NoEmitCallbacks<IUICallback> {\r\n    return this._callbacks;\r\n  }\r\n  /**\r\n   * 根节点\r\n   *\r\n   * @protected\r\n   * @type {UINode}\r\n   */\r\n  protected _root: UINode;\r\n  protected _focused_node?: UINode;\r\n  protected _components = new Set<UIComponent>();\r\n  protected _state: any = {};\r\n  protected _visible: StateDelegate<boolean> = new StateDelegate(true);\r\n  protected _disabled: StateDelegate<boolean> = new StateDelegate(false);\r\n  protected _opacity: StateDelegate<number> = new StateDelegate(1);\r\n\r\n  readonly pos: StateDelegate<[number, number, number]> = new StateDelegate(() => this.data.pos);\r\n  readonly scale: StateDelegate<[number, number, number]> = new StateDelegate(() => this.data.scale);\r\n  readonly txts: StateDelegate<ITextImageInfo[]> = new StateDelegate(() => this.data.txt_infos);\r\n  readonly imgs: StateDelegate<IImageInfo[]> = new StateDelegate(() => this.data.img_infos);\r\n  readonly size: StateDelegate<[number, number]> = new StateDelegate(() => this.data.size);\r\n  readonly center: StateDelegate<[number, number, number]> = new StateDelegate(() => this.data.center);\r\n  readonly img_idx: StateDelegate<number> = new StateDelegate(0);\r\n  readonly txt_idx: StateDelegate<number> = new StateDelegate(0);\r\n  readonly flip_x: StateDelegate<boolean> = new StateDelegate(() => this.data.flip_x === true);\r\n  readonly flip_y: StateDelegate<boolean> = new StateDelegate(() => this.data.flip_y === true);\r\n  readonly color: StateDelegate<string> = new StateDelegate(() => parse_ui_value(this.data, \"string\", this.data.color) ?? '');\r\n  readonly enabled: StateDelegate<boolean> = new StateDelegate(() => this.data.enabled === true);\r\n\r\n  protected _parent?: UINode;\r\n  protected _children: UINode[] = [];\r\n  set_scale(x?: number, y?: number, z?: number): this {\r\n    const [a, b, c] = this.scale.value;\r\n    this.scale.value = [x ?? a, y ?? b, z ?? c];\r\n    return this;\r\n  }\r\n  get cross() {\r\n    const [x, y] = this.pos.value\r\n    const [w, h] = this.size.value\r\n    const [a, b] = this.center.value\r\n    const left = -a * w\r\n    const top = -b * h\r\n    const right = (1 - a) * w\r\n    const bottom = (1 - b) * h\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n      mid_x: (left + right) / 2,\r\n      mid_y: (top + bottom) / 2\r\n    }\r\n  }\r\n  get rect() {\r\n    const c = this.cross\r\n    const [x, y] = this.pos.value\r\n    return {\r\n      left: x + c.left,\r\n      top: y + c.top,\r\n      right: x + c.right,\r\n      bottom: y + c.bottom\r\n    }\r\n  }\r\n  get focused(): boolean {\r\n    return this._root._focused_node === this;\r\n  }\r\n  set focused(v: boolean) {\r\n    if (v) this.focused_node = this;\r\n    else if (this.focused_node === this) this.focused_node = void 0;\r\n  }\r\n  get focused_node(): UINode | undefined {\r\n    return this._root._focused_node;\r\n  }\r\n  set focused_node(val: UINode | undefined) {\r\n    const old = this._root._focused_node;\r\n    if (old === val) return;\r\n    if (val?.disabled || !val?.visible) val = void 0;\r\n    this._root._focused_node = val;\r\n    if (old) {\r\n      old.on_blur();\r\n      old._callbacks.emit(\"on_foucs_changed\")(old);\r\n    }\r\n    if (val) {\r\n      val.on_foucs();\r\n      val._callbacks.emit(\"on_foucs_changed\")(val);\r\n    }\r\n    this._root._callbacks.emit(\"on_foucs_item_changed\")(val, old);\r\n  }\r\n\r\n  get id(): string | undefined { return this.data.id }\r\n  get name(): string | undefined { return this.data.name }\r\n  get root(): UINode { return this._root; }\r\n\r\n  get depth() {\r\n    let depth = 0;\r\n    let l: UINode | undefined = this;\r\n    for (; l?._parent; l = l.parent) ++depth;\r\n    return depth;\r\n  }\r\n\r\n  get state() {\r\n    return this._state;\r\n  }\r\n\r\n  get self_visible() {\r\n    return this._visible.value\r\n  }\r\n  /**\r\n   * 当前节点是否可见\r\n   * \r\n   * @description \r\n   *    要注意，当任意一个祖先节点visible为false时，\r\n   *    即使设置当前节点为visible为true，visible属性仍将返回false\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  get visible(): boolean {\r\n    if (!this.parent) return this.self_visible\r\n    return this.parent.visible && this.self_visible;\r\n  }\r\n\r\n  set visible(v: boolean) {\r\n    this.set_visible(v);\r\n  }\r\n\r\n  set_visible(v: boolean): this {\r\n    const prev = this.visible;\r\n    this._visible.value = v;\r\n    if (prev !== this.visible) this.invoke_all_visible()\r\n    if (!v && !this.focused_node?.visible) this.focused_node = void 0\r\n    return this;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    if (!this.parent) return this._disabled.value;\r\n    return this.parent.disabled || this._disabled.value;\r\n  }\r\n  set disabled(v: boolean) {\r\n    this.set_disabled(v);\r\n  }\r\n  set_disabled(v: boolean): this {\r\n    this._disabled.value = v;\r\n    if (v && this.focused_node?.disabled) this.focused_node = void 0\r\n    return this;\r\n  }\r\n\r\n  set_center(v: [number, number, number]): this {\r\n    this.center.set(0, v);\r\n    return this;\r\n  }\r\n  get global_opacity(): number {\r\n    if (!this.parent) return this._opacity.value\r\n    return this._opacity.value * this.parent._opacity.value;\r\n  }\r\n  get opacity(): number {\r\n    return this._opacity.value;\r\n  }\r\n  set opacity(v: number) {\r\n    this.set_opacity(v);\r\n  }\r\n  set_opacity(v: number): this {\r\n    this._opacity.set(0, v);\r\n    return this;\r\n  }\r\n\r\n  get parent(): UINode | undefined { return this._parent; }\r\n  get children(): Readonly<UINode[]> { return this._children; }\r\n\r\n  set_size(v: [number, number]): this { this.size.set(0, v); return this; }\r\n\r\n  get w(): number { return this.size.value[0]; }\r\n  set w(v: number) { this.set_w(v); }\r\n\r\n  get h(): number { return this.size.value[1]; }\r\n  set h(v: number) { this.set_h(v); }\r\n  set_w(v: number): this { return this.set_size([v, this.h]); }\r\n  set_h(v: number): this { return this.set_size([this.w, v]); }\r\n\r\n  get components(): ReadonlySet<UIComponent> {\r\n    return this._components;\r\n  }\r\n  get style(): IStyle {\r\n    return this.txts.value[0].style || {}\r\n  }\r\n\r\n  get pointer_on_me() { return this._pointer_on_me }\r\n  get pointer_down() { return this._pointer_down }\r\n  get click_flag() { return this._click_flag }\r\n  get update_times() { return this._update_times }\r\n  renderer: IUINodeRenderer;\r\n\r\n  constructor(lf2: LF2, data: ICookedUIInfo, parent?: UINode) {\r\n    this.lf2 = lf2;\r\n    this.data = Object.freeze(data);\r\n    this._parent = parent;\r\n    this._root = parent?.root ?? this;\r\n    this.id_ui_map = new Map();\r\n    this.name_ui_map = new Map();\r\n\r\n    this.renderer = new Ditto.UINodeRenderer(this);\r\n    make_debugging(this)\r\n  }\r\n  get global_pos(): [number, number, number] {\r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let node: UINode | undefined = this;\r\n    do {\r\n      const [a, b, c] = node.pos.value;\r\n      x += a;\r\n      y += b;\r\n      z += c;\r\n      node = node.parent;\r\n    } while (node);\r\n    return [x, y, z];\r\n  }\r\n\r\n  hit(x: number, y: number): boolean {\r\n    const [cx, cy] = this.center.value;\r\n    const [px, py] = this.pos.value;\r\n    const [dw, dh] = this.size.value;\r\n    const l = px - floor(cx * dw);\r\n    const t = py - floor(cy * dh);\r\n    const [w, h] = this.data.size;\r\n    return l <= x && t <= y && l + w >= x && t + h >= y;\r\n  }\r\n  on_pointer_down(e: IUIPointerEvent) {\r\n    this._pointer_down = 1;\r\n    this._click_flag = 1;\r\n  }\r\n\r\n  on_pointer_up(e: IUIPointerEvent) {\r\n    this._pointer_down = 0\r\n  }\r\n\r\n  on_pointer_cancel(e: IUIPointerEvent) {\r\n    this._pointer_down = 0\r\n  }\r\n\r\n  on_pointer_leave() {\r\n    this._pointer_on_me = 0;\r\n    this._click_flag = 0;\r\n  }\r\n\r\n  on_pointer_enter() {\r\n    this._pointer_on_me = 1\r\n  }\r\n\r\n  on_start() {\r\n    this._state = {};\r\n    for (const c of this._components) c.on_start?.();\r\n    for (const i of this.children) i.on_start();\r\n    const { start } = this.data.actions || {};\r\n    start && actor.act(this, start);\r\n    this.renderer.on_start?.();\r\n  }\r\n\r\n  on_stop(): void {\r\n    for (const c of this.components) c.on_stop?.();\r\n    for (const l of this.children) l.on_stop();\r\n    const { stop } = this.data.actions || {};\r\n    stop && actor.act(this, stop);\r\n    this.renderer.on_stop?.();\r\n  }\r\n\r\n  on_resume() {\r\n    if (!this.parent) {\r\n      this.focused_node = this._state.focused_node;\r\n      if (this._visible) this.invoke_all_visible();\r\n    }\r\n    for (const c of this._components) c.on_resume?.();\r\n    for (const i of this.children) i.on_resume();\r\n    const { resume } = this.data.actions || {};\r\n    resume && actor.act(this, resume);\r\n    this.renderer.on_resume?.();\r\n  }\r\n\r\n  on_pause() {\r\n    if (!this.parent) {\r\n      this._state.focused_node = this.focused_node;\r\n      this.focused_node = void 0;\r\n      this.invoke_all_on_hide();\r\n    }\r\n    if (this.root === this) this.renderer.del_self();\r\n    const { pause } = this.data.actions || {};\r\n    pause && actor.act(this, pause);\r\n    for (const c of this._components) c.on_pause?.();\r\n    for (const item of this.children) item.on_pause();\r\n    this.renderer.on_pause?.();\r\n  }\r\n\r\n  on_show() {\r\n    for (const c of this.components) c.on_show?.();\r\n    this._callbacks.emit(\"on_show\")(this);\r\n    if (this.data.auto_focus && !this.disabled && !this.focused_node) {\r\n      this.focused_node = this;\r\n    }\r\n    this.renderer.on_show?.();\r\n  }\r\n\r\n  on_hide() {\r\n    if (this.focused_node === this) this.focused_node = void 0;\r\n    for (const c of this.components) c.on_hide?.();\r\n    this._callbacks.emit(\"on_hide\")(this);\r\n    this.renderer.on_hide?.();\r\n  }\r\n\r\n  to_next_img() {\r\n    const idx = this.img_idx.value\r\n    this.img_idx.value = () => (idx + 1) % this.data.img.length;\r\n  }\r\n\r\n  readonly cook = UINode.create.bind(UINode)\r\n\r\n  static create(lf2: LF2, info: ICookedUIInfo, parent?: UINode): UINode {\r\n    const ret = new UINode(lf2, info, parent);\r\n    const get_val = lf2.ui_val_getter;\r\n    ret._cook_data(get_val);\r\n    ret._cook_img_idx(get_val);\r\n\r\n    const { component } = ret.data;\r\n    if (component)\r\n      for (const c of factory.create(ret, component))\r\n        ret._components.add(c);\r\n\r\n    if (info.items) {\r\n      for (const item_info of info.items) {\r\n        let count = (is_num(item_info.count) && item_info.count > 0) ? item_info.count : 1\r\n        while (count) {\r\n          const child = UINode.create(lf2, item_info, ret);\r\n          ret.add_child(child)\r\n          --count;\r\n        }\r\n      }\r\n    }\r\n    for (const component of ret._components)\r\n      component.on_add?.();\r\n    return ret;\r\n  }\r\n\r\n  add_child(node: UINode): this {\r\n    this._children.push(node);\r\n    if (node.id) {\r\n      const set = this.id_ui_map.get(node.id) || [];\r\n      set.push(node)\r\n      this.id_ui_map.set(node.id, set);\r\n    }\r\n    if (node.name) {\r\n      const set = this.name_ui_map.get(node.name) || [];\r\n      set.push(node)\r\n      this.name_ui_map.set(node.name, set);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  add_children(...node: UINode[]): this {\r\n    node.forEach(l => this.add_child(l))\r\n    return this;\r\n  }\r\n  add_components(...components: UIComponent[]) {\r\n    for (const component of components) {\r\n      if (this._components.has(component))\r\n        continue;\r\n      this._components.add(component)\r\n      component.on_add?.()\r\n      this._callbacks.emit('on_component_add')(component, this)\r\n    }\r\n  }\r\n  del_components(...components: UIComponent[]) {\r\n    for (const component of components) {\r\n      if (!this._components.has(component))\r\n        continue;\r\n      this._components.delete(component)\r\n      component.on_del?.()\r\n      this._callbacks.emit('on_component_del')(component, this)\r\n    }\r\n  }\r\n  private _cook_data(get_val: IValGetter<UINode>) {\r\n    const { visible, opacity, disabled } = this.data;\r\n    if (is_bool(disabled)) {\r\n      this._disabled.default_value = disabled;\r\n    } else if (is_str(disabled)) {\r\n      const func = new Expression<UINode>(disabled, () => get_val).run;\r\n      this._disabled.default_value = () => func(this);\r\n    }\r\n\r\n    if (is_bool(visible)) {\r\n      this._visible.default_value = visible;\r\n    } else if (is_str(visible)) {\r\n      const func = new Expression<UINode>(visible, () => get_val).run;\r\n      this._visible.default_value = () => func(this);\r\n    }\r\n\r\n    if (is_num(opacity)) {\r\n      this._opacity.default_value = opacity;\r\n    } else if (is_str(opacity)) {\r\n      this._opacity.default_value = () =>\r\n        Number(get_val(this, opacity, \"==\")) || 0;\r\n    }\r\n    this.pos.default_value = () => {\r\n      if (this.parent) return this.data.pos;\r\n      const [x, y, z] = this.data.pos;\r\n      return [x, y - this.lf2.world.screen_h, z]\r\n    }\r\n  }\r\n\r\n  private _cook_img_idx(get_val: IValGetter<UINode>) {\r\n    const imgs = this.imgs.value;\r\n    if (!imgs?.length) return;\r\n    const { which } = this.data;\r\n    if (is_str(which)) {\r\n      this.img_idx.default_value = () => {\r\n        const num = get_val(this, which, \"==\")\r\n        return num % imgs.length || 0;\r\n      };\r\n      return\r\n    }\r\n    if (is_num(which)) {\r\n      this.img_idx.default_value = () => (which % imgs.length || 0)\r\n      return\r\n    }\r\n  }\r\n\r\n  on_click(e: IUIPointerEvent) {\r\n    const { click } = this.data.actions ?? {};\r\n    if (click) {\r\n      actor.act(this, click);\r\n      e.stop_propagation();\r\n    }\r\n    for (const c of this._components) {\r\n      c.on_click?.(e);\r\n      if (e.stopped === 2) break;\r\n    }\r\n  }\r\n\r\n  /** \r\n   * 当前节点从\"不可见\"变为\"可见\"时被调用 \r\n   */\r\n  protected invoke_all_on_show() {\r\n    this.on_show();\r\n    for (const child of this.children) {\r\n      if (child._visible.value) child.invoke_all_on_show();\r\n    }\r\n  }\r\n\r\n  /** \r\n   * 当前节点从\"可见\"变为\"不可见\"时被调用 \r\n   */\r\n  protected invoke_all_on_hide() {\r\n    this.on_hide();\r\n    for (const child of this.children) {\r\n      if (child._visible.value) child.invoke_all_on_hide();\r\n    }\r\n  }\r\n\r\n  protected invoke_all_visible() {\r\n    if (this._visible.value) {\r\n      this.invoke_all_on_show();\r\n    } else {\r\n      this.invoke_all_on_hide();\r\n    }\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (this._update_times === Number.MAX_SAFE_INTEGER)\r\n      this._update_times = 0;\r\n    else\r\n      this._update_times++;\r\n\r\n    for (const i of this.children) if (i.enabled) i.update(dt);\r\n    for (const c of this._components) if (c.enabled) c.update?.(dt);\r\n  }\r\n\r\n  on_key_down(e: IUIKeyEvent) {\r\n    if (e.stopped) return;\r\n    for (const c of this._components) {\r\n      c.on_key_down?.(e);\r\n      if (e.stopped === 2) return;\r\n    }\r\n    for (const i of this.children) {\r\n      i.on_key_down(e);\r\n      if (e.stopped === 2) return;\r\n    }\r\n    if (this.focused && \"a\" === e.game_key) {\r\n      const { click } = this.data.actions ?? {};\r\n      if (click) {\r\n        actor.act(this, click);\r\n        e.stop_immediate_propagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  on_key_up(e: IUIKeyEvent) {\r\n    if (e.stopped) return;\r\n    for (const i of this.children) {\r\n      i.on_key_up(e);\r\n      if (e.stopped === 2) return;\r\n    }\r\n    for (const c of this._components) {\r\n      c.on_key_up?.(e);\r\n      if (e.stopped === 2) return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据子节点ID查找子节点\r\n   *\r\n   * @see {IUIInfo.id}\r\n   * @param {string} id 子节点ID\r\n   * @return {(UINode | undefined)} \r\n   * @memberof UINode\r\n   */\r\n  find_child(id: string): UINode | undefined {\r\n    return this.id_ui_map.get(id)?.[0];\r\n  }\r\n  search_child(id: string): UINode | undefined {\r\n    let ret = this.find_child(id);\r\n    if (ret) return ret;\r\n    for (const child of this.children) {\r\n      ret = child.search_child(id)\r\n      if (ret) return ret;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据子节点名查找子节点\r\n   *\r\n   * @see {IUIInfo.name}\r\n   * @param {string} name 子节点名\r\n   * @return {(UINode | undefined)} \r\n   * @memberof UINode\r\n   */\r\n  find_child_by_name(name: string): UINode | undefined {\r\n    return this.name_ui_map.get(name)?.[0];\r\n  }\r\n\r\n  find_parent<T>(\r\n    id: string | ((node: UINode) => any),\r\n    handler?: (parent: UINode, path: UINode[]) => T\r\n  ): UINode | undefined {\r\n    let { parent } = this;\r\n    const path: UINode[] = []\r\n    while (parent) {\r\n      path.push(parent);\r\n      if (\r\n        (typeof id === 'string' && parent.id === id) ||\r\n        (typeof id === 'function' && id(parent))\r\n      ) {\r\n        handler && handler(parent, path);\r\n        return parent;\r\n      }\r\n      parent = parent.parent;\r\n    }\r\n    return void 0;\r\n  }\r\n\r\n  get_value(name: string, lookup: boolean = true): any {\r\n    const { values } = this.data;\r\n    if (values && name in values) return values[name];\r\n    if (lookup && this.parent) return this.parent.get_value(name, lookup);\r\n    return void 0;\r\n  }\r\n\r\n  /**\r\n   * 查找当前layout符合条件的的component\r\n   *\r\n   * @template T\r\n   * @param {T} type\r\n   * @param {(TCond<T> | string)} [condition=() => 1]\r\n   * @param {(c: InstanceType<T>) => void} [handler]\r\n   * @return {(InstanceType<T> | undefined)}\r\n   * @memberof UINode\r\n   */\r\n  find_component<T extends TCls<UIComponent>>(\r\n    type: T,\r\n    condition: TCond<T> | string = () => 1,\r\n    handler?: (c: InstanceType<T>) => void\r\n  ): InstanceType<T> | undefined {\r\n    const ret = find(\r\n      this.components,\r\n      (v) => {\r\n        if (!(v instanceof type)) return 0;\r\n        if (is_str(condition)) return condition === v.id;\r\n        return condition(v as any);\r\n      },\r\n    ) as InstanceType<T> | undefined;\r\n\r\n    ret && handler?.(ret)\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * 查找当前layout符合条件的的component数组\r\n   *\r\n   * @template T\r\n   * @param {T} type\r\n   * @param {(TCond<T> | string)} [condition=() => 1]\r\n   * @param {(c: InstanceType<T>[]) => void} [handler]\r\n   * @return {InstanceType<T>[]}\r\n   * @memberof UINode\r\n   */\r\n  find_components<T extends TCls<UIComponent>>(\r\n    type: T,\r\n    condition: TCond<T> | string = () => 1,\r\n    handler?: (c: InstanceType<T>[]) => void\r\n  ): InstanceType<T>[] {\r\n    const ret = filter(\r\n      this.components,\r\n      (v) => {\r\n        if (!(v instanceof type)) return 0;\r\n        if (is_str(condition)) return condition === v.id;\r\n        return condition(v as any);\r\n      },\r\n    ) as InstanceType<T>[];\r\n    ret.length && handler?.(ret);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 查找当前layout以及子layout符合条件的component\r\n   *\r\n   * @template T \r\n   * @param {T} type\r\n   * @param {(TCond<T> | string)} [condition=() => 1]\r\n   * @param {(c: InstanceType<T>) => void} [handler]\r\n   * @return {(InstanceType<T> | undefined)}\r\n   * @memberof UINode\r\n   */\r\n  search_component<T extends TCls<UIComponent>>(\r\n    type: T,\r\n    condition: TCond<T> | string = () => 1,\r\n    handler?: (c: InstanceType<T>) => void\r\n  ): InstanceType<T> | undefined {\r\n    const ret = this.find_component(type, condition, handler);\r\n    if (ret) return ret;\r\n    for (const i of this._children) {\r\n      const ret = i.search_component(type, condition, handler);\r\n      if (ret) return ret;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 查找当前layout以及子layout符合条件的component数组\r\n   *\r\n   * @template T\r\n   * @param {T} type\r\n   * @param {(TCond<T> | string)} [condition=() => 1]\r\n   * @param {(c: InstanceType<T>[]) => void} [handler]\r\n   * @return {InstanceType<T>[]}\r\n   * @memberof UINode\r\n   */\r\n  search_components<T extends TCls<UIComponent>>(\r\n    type: T,\r\n    condition: TCond<T> | string = () => 1,\r\n    handler?: (c: InstanceType<T>[]) => void\r\n  ): InstanceType<T>[] {\r\n    const ret = this.find_components(type, condition);\r\n    for (const i of this._children)\r\n      ret.push(...i.search_components(type, condition));\r\n    ret.length && handler?.(ret);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 向上查找组件，当前节点不存在对应组件\r\n   *\r\n   * @template T\r\n   * @param {T} type\r\n   * @param {TCond<T>} [condition=() => 1]\r\n   * @param {(c: InstanceType<T>) => void} [handler]\r\n   * @return {(InstanceType<T> | undefined)}\r\n   * @memberof UINode\r\n   */\r\n  lookup_component<T extends TCls<UIComponent>>(\r\n    type: T,\r\n    condition: TCond<T> = () => 1,\r\n    handler?: (c: InstanceType<T>) => void\r\n  ): InstanceType<T> | undefined {\r\n    const ret = this.find_component(type, condition, handler);\r\n    if (ret) return ret;\r\n    return this.parent?.lookup_component(type, condition, handler);\r\n  }\r\n\r\n  on_foucs(): void {\r\n    for (const c of this._components) c.on_foucs?.();\r\n    this.renderer.on_foucs?.()\r\n  }\r\n  on_blur(): void {\r\n    for (const c of this._components) c.on_blur?.();\r\n    this.renderer.on_blur?.()\r\n  }\r\n}\r\ntype TCls<R = any> = abstract new (...args: any) => R;\r\ntype TCond<T extends TCls> = (c: InstanceType<T>) => unknown;\r\n\r\n","export function filter<T>(set: Iterable<T>, p: (v: T) => unknown): T[] {\r\n  const ret: T[] = [];\r\n  for (const i of set) p(i) && ret.push(i);\r\n  return ret;\r\n}\r\n","import { is_non_blank_str, is_non_nagative_int, is_positive_int } from \"../utils\";\r\nimport { IUIImgInfo } from \"./IUIImgInfo.dat\";\r\n\r\nexport function validate_ui_img_info(any: any, errors: string[] = [], warnings: string[] = []): any is IUIImgInfo {\r\n  const fn = 'validate_ui_img_info';\r\n  if (typeof any !== 'object') { errors.push(`${fn}] must be an object, but got ${any}`); return false; }\r\n  let ret = true;\r\n  const v = any as IUIImgInfo;\r\n  if (!is_non_blank_str(v.path)) { ret = false; errors.push(`[${fn}]path must be a non-blank string, but got ${v.path}`); }\r\n  if ('x' in v && !is_non_nagative_int(v.x)) { ret = false; errors.push(`[${fn}]x must be a non-negative integer or undefiend, but got ${v.x}`); }\r\n  if ('y' in v && !is_non_nagative_int(v.y)) { ret = false; errors.push(`[${fn}]y must be a non-negative integer or undefiend, but got ${v.y}`); }\r\n  if ('w' in v && !is_positive_int(v.w)) { ret = false; errors.push(`[${fn}]w must be a positive integer or undefiend, but got ${v.w}`); }\r\n  if ('h' in v && !is_positive_int(v.h)) { ret = false; errors.push(`[${fn}]h must be a positive integer or undefiend, but got ${v.h}`); }\r\n  if ('dw' in v && !is_positive_int(v.dw)) { ret = false; errors.push(`[${fn}]dw must be a positive integer or undefiend, but got ${v.dw}`); }\r\n  if ('dh' in v && !is_positive_int(v.dh)) { ret = false; errors.push(`[${fn}]dh must be a positive integer or undefiend, but got ${v.dh}`); }\r\n  if ('col' in v && !is_positive_int(v.col)) { ret = false; errors.push(`[${fn}]col must be a positive integer or undefiend, but got ${v.col}`); }\r\n  if ('row' in v && !is_positive_int(v.row)) { ret = false; errors.push(`[${fn}]row must be a positive integer or undefiend, but got ${v.row}`); }\r\n  if ('col' in v !== 'row' in v) { ret = false; errors.push(`[${fn}]col, row should both be set!`); }\r\n  if (('col' in v || 'row' in v) && !('w' in v) || !('h' in v)) { ret = false; errors.push(`[${fn}]w and h are required when col and row are set!`); }\r\n  if ('count' in v && !is_positive_int(v.count)) { ret = false; errors.push(`[${fn}]count must be a positive integer or undefiend, but got ${v.count}`); }\r\n  return ret;\r\n}\r\nvalidate_ui_img_info.TAG = 'validate_ui_img_info'","import { IVector3 } from \"../defines\";\r\nimport { IUIPointerEvent } from \"./IUIPointerEvent\";\r\nimport { LF2UIEvent } from \"./LF2UIEvent\";\r\n\r\n\r\nexport class LF2PointerEvent extends LF2UIEvent implements IUIPointerEvent {\r\n  readonly point: IVector3;\r\n  constructor(vec3: IVector3) {\r\n    super()\r\n    this.point = vec3;\r\n  }\r\n}\r\n","import { floor } from \"./base\";\r\n\r\nexport class MersenneTwister {\r\n  private n: number = 624;\r\n  private m: number = 397;\r\n  private matrixA: number = 0x9908B0DF;\r\n  private upperMask: number = 0x80000000;\r\n  private lowerMask: number = 0x7FFFFFFF;\r\n  private mt: number[] = new Array(this.n);\r\n  private index: number = this.n + 1;\r\n\r\n  constructor(seed: number = Date.now()) {\r\n    this.reset(seed)\r\n  }\r\n  \r\n  reset(seed: number) {\r\n    this.n = 624;\r\n    this.m = 397;\r\n    this.matrixA = 0x9908B0DF;\r\n    this.upperMask = 0x80000000;\r\n    this.lowerMask = 0x7FFFFFFF;\r\n    this.mt = new Array(this.n);\r\n    this.index = this.n + 1;\r\n    this.mt[0] = seed >>> 0;\r\n    for (let i = 1; i < this.n; i++) {\r\n      const s = this.mt[i - 1]! ^ (this.mt[i - 1]! >>> 30);\r\n      this.mt[i] = (((((s & 0xFFFF0000) >>> 16) * 1812433253) << 16) + (s & 0x0000FFFF) * 1812433253) + i;\r\n      this.mt[i]! >>>= 0; // 转换为32位无符号整数\r\n    }\r\n  }\r\n\r\n  // 生成下一组624个值\r\n  private twist(): void {\r\n    for (let i = 0; i < this.n; i++) {\r\n      let x = (this.mt[i]! & this.upperMask) | (this.mt[(i + 1) % this.n]! & this.lowerMask);\r\n      let xA = x >>> 1;\r\n      if (x % 2 !== 0) {\r\n        xA ^= this.matrixA;\r\n      }\r\n      this.mt[i]! = this.mt[(i + this.m) % this.n]! ^ xA;\r\n    }\r\n    this.index = 0;\r\n  }\r\n\r\n  // 提取伪随机数\r\n  public int(): number {\r\n    if (this.index >= this.n) {\r\n      this.twist();\r\n    }\r\n\r\n    let y = this.mt[this.index++]!;\r\n\r\n    // 额外的位操作以改善分布\r\n    y ^= (y >>> 11);\r\n    y ^= (y << 7) & 0x9D2C5680;\r\n    y ^= (y << 15) & 0xEFC60000;\r\n    y ^= (y >>> 18);\r\n\r\n    return y >>> 0; // 确保返回32位无符号整数\r\n  }\r\n\r\n  // 生成[0,1)范围内的浮点数\r\n  public float(): number {\r\n    return this.int() / (0xFFFFFFFF + 1);\r\n  }\r\n\r\n  // 生成[min, max)范围内的整数\r\n  public in_range(min: number, max: number): number {\r\n    return floor(this.float() * (max - min)) + min;\r\n  }\r\n}\r\n","import { BuiltIn_OID, Builtin_FrameId } from \"../defines\";\nimport { Entity, turn_face } from \"../entity\";\nimport { floor } from \"../utils\";\n\n\nexport function handle_ball_frozen(attacker: Entity, victim: Entity) {\n\n  const freeze_ball = attacker.spawn_entity({\n    oid: BuiltIn_OID.FreezeBall,\n    kind: 0,\n    x: 0,\n    y: 0,\n    action: { id: Builtin_FrameId.Auto }\n  }, void 0, turn_face(victim.facing))\n\n  if (freeze_ball) {\n    const p1 = attacker.position;\n    const p2 = victim.position;\n    freeze_ball.position.set(\n      floor(0.5 * (p1.x + p2.x)),\n      floor(p2.y),\n      floor(0.5 * (p1.z + p2.z))\n    );\n    victim.enter_frame({ id: '20' })\n  }\n}\n","import { ICollision } from \"../base\";\nimport { Defines } from \"../defines\";\n\n\nexport function handle_rest(collision: ICollision): void {\n  const { attacker, victim, v_rest, itr } = collision;\n\n  if (v_rest !== void 0) {\n    victim.v_rests.set(collision.attacker.id, collision);\n    attacker.victims.set(collision.victim.id, collision)\n  } else {\n    const arest = itr.arest ?? Defines.DEFAULT_ITR_A_REST;\n    attacker.a_rest = arest + attacker.world.arest_offset;\n  }\n}\n","import { ICollision } from \"../base\";\n\n\nexport function handle_stiffness(collision: ICollision) {\n  const { itr, attacker, victim } = collision;\n  attacker.motionless = itr.motionless ?? collision.victim.world.itr_motionless;\n  victim.shaking = itr.shaking ?? collision.attacker.world.itr_shaking;\n}\n","import { ICollision } from \"../base\";\nimport { Builtin_FrameId, BuiltIn_OID, Defines, EntityGroup, ItrKind, SparkEnum, StateEnum } from \"../defines\";\nimport { Factory, turn_face } from \"../entity\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\n\nexport function handle_ball_is_hit(collision: ICollision): void {\n  const { victim, attacker, itr, a_cube, b_cube, aframe } = collision;\n  handle_rest(collision);\n  handle_stiffness(collision);\n  if (itr.bdefend && itr.bdefend >= Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE) {\n    victim.hp = victim.hp_r = 0;\n  }\n  victim.velocities.length = 1;\n  victim.velocity_0.x = 0;\n  victim.velocity_0.z = 0;\n  victim.velocity_0.y = 0;\n  switch (victim.frame.state) {\n    case StateEnum.Ball_Flying:\n    case StateEnum.Ball_Rebounding:\n      victim.team = attacker.team;\n      break;\n  }\n  victim.world.spark(...victim.spark_point(a_cube, b_cube),\n    itr.fall && itr.fall > Defines.DEFAULT_FALL_VALUE_CRITICAL ?\n      SparkEnum.CriticalHit :\n      SparkEnum.Hit\n  );\n  victim.play_sound(victim.data.base.hit_sounds)\n}","import { ICollision } from \"../base\";\nimport { round } from \"../utils\";\n\nexport function handle_injury(c: ICollision, scale: number = 1) {\n  let { itr, victim, attacker } = c;\n  if (!itr.injury) return;\n  const injury = round(itr.injury * scale);\n  if (!injury) return\n\n  const prev_hp = victim.hp;\n\n  victim.hp -= injury;\n  victim.hp_r -= round(injury * (1 - victim.world.hp_recoverability));\n\n  while (attacker.emitter) attacker = attacker.emitter\n  attacker.add_damage_sum(injury);\n\n  // 分身击杀则不计算\n  if (!victim.emitter && victim.hp <= 0 && prev_hp > 0) \n    attacker.add_kill_sum(1);\n}\n","import { ICollision } from \"../base/ICollision\";\r\nimport { Defines, StateEnum } from \"../defines\";\r\nimport { handle_injury } from \"./handle_injury\";\r\nimport { handle_rest } from \"./handle_rest\";\r\nimport { handle_stiffness } from \"./handle_stiffness\";\r\n\r\nexport function handle_itr_kind_freeze(collision: ICollision) {\r\n  const { itr, victim, attacker } = collision;\r\n  victim.play_sound([\"data/065.wav.mp3\"]);\r\n  victim.fall_value -= itr.fall ? itr.fall : Defines.DEFAULT_ITR_FALL;\r\n  const is_fall =\r\n    victim.fall_value <= 0 ||\r\n    (victim.fall_value <= Defines.DEFAULT_FALL_VALUE_DIZZY &&\r\n      (StateEnum.Caught === victim.frame.state ||\r\n        victim.velocity_0.y > 0 ||\r\n        victim.position.y > 0));\r\n\r\n  if (is_fall && itr.dvy)\r\n    victim.velocity_0.y =\r\n      (itr.dvy ?? attacker.world.ivy_d) * attacker.world.ivy_f;\r\n  if (itr.dvz) victim.velocity_0.z = itr.dvz * attacker.world.ivz_f;\r\n  victim.velocity_0.x =\r\n    (itr.dvx ?? attacker.world.ivx_d) * attacker.facing * attacker.world.ivx_f;\r\n  victim.next_frame = { id: victim.data.indexes?.ice };\r\n  handle_injury(collision);\r\n  handle_rest(collision);\r\n  handle_stiffness(collision)\r\n}\r\n","\r\nimport { ICollision } from \"../base/ICollision\";\r\nimport { Defines, ItrEffect, SparkEnum, TFace } from \"../defines\";\r\nimport { turn_face } from \"../entity\";\r\nimport { is_character } from \"../entity/type_check\";\r\n\r\nexport function handle_fall(collision: ICollision) {\r\n  const { itr, attacker, victim, a_cube, b_cube } = collision;\r\n\r\n  const is_explosion = [ItrEffect.FireExplosion, ItrEffect.Explosion].some(v => v === itr.effect);\r\n  const diff_x = victim.position.x - attacker.position.x\r\n  let attacker_facing: TFace = -1;\r\n  if (!is_explosion) attacker_facing = attacker.facing\r\n  else if (diff_x > 0) attacker_facing = -1;\r\n  else attacker_facing = 1;\r\n\r\n  victim.toughness = 0;\r\n  victim.fall_value = 0;\r\n  victim.defend_value = 0;\r\n  victim.resting = 0;\r\n  victim.velocities.length = 1;\r\n  victim.velocity_0.y = (itr.dvy ?? attacker.world.ivy_d) * attacker.world.ivy_f;\r\n  victim.velocity_0.z = 0;\r\n  victim.velocity_0.x = (itr.dvx || 0) * attacker_facing;\r\n\r\n  const is_critical = !!(itr.fall && itr.fall > Defines.DEFAULT_FALL_VALUE_CRITICAL)\r\n\r\n  const spark_pos = victim.spark_point(a_cube, b_cube);\r\n  let effect = SparkEnum.Hit;\r\n  if (itr.effect === ItrEffect.Sharp && is_character(victim)) {\r\n    effect = is_critical ? SparkEnum.CriticalBleed : SparkEnum.BleedFall;\r\n  } else {\r\n    effect = is_critical ? SparkEnum.CriticalHit : SparkEnum.HitFall;\r\n  }\r\n  victim.world.spark(...spark_pos, effect)\r\n\r\n  const { fire, critical_hit } = victim.data.indexes || {}\r\n\r\n  const normal_fall_act = () => {\r\n    if (!critical_hit) return;\r\n    const direction: TFace = victim.velocity_0.x / victim.facing >= 0 ? 1 : -1;\r\n    victim.enter_frame({ id: critical_hit[direction][0] });\r\n  }\r\n\r\n  switch (itr.effect) {\r\n    case ItrEffect.Fire:\r\n    case ItrEffect.MFire2:\r\n      if (fire) {\r\n        victim.enter_frame({\r\n          id: fire[0],\r\n          facing: turn_face(attacker_facing),\r\n        });\r\n      } else {\r\n        normal_fall_act()\r\n      }\r\n      break;\r\n    case ItrEffect.MFire1:\r\n    case ItrEffect.FireExplosion:\r\n      if (fire) {\r\n        victim.enter_frame({\r\n          id: fire[0],\r\n          facing: attacker_facing,\r\n        });\r\n      } else {\r\n        normal_fall_act()\r\n      }\r\n      break;\r\n    default:\r\n      normal_fall_act()\r\n      break;\r\n  }\r\n\r\n}\r\n","import { ICollision } from \"../base\";\nimport { Defines, ItrEffect, ItrKind, SparkEnum, StateEnum, TFace } from \"../defines\";\nimport { is_character, same_face, turn_face } from \"../entity\";\nimport { handle_fall } from \"./handle_fall\";\nimport { handle_injury } from \"./handle_injury\";\nimport { handle_itr_kind_freeze } from \"./handle_itr_kind_freeze\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\nimport { handle_armor } from \"./handle_armor\";\n\nexport function handle_itr_normal_bdy_normal(collision: ICollision) {\n  const { itr, attacker, victim, a_cube, b_cube } = collision;\n  if (itr.effect == ItrEffect.Ignore) return;\n  if (handle_armor(collision)) return;\n  switch (itr.effect) {\n    case ItrEffect.Fire:\n    case ItrEffect.MFire1:\n    case ItrEffect.MFire2:\n    case ItrEffect.FireExplosion: {\n      handle_injury(collision);\n      handle_rest(collision)\n      handle_stiffness(collision)\n      handle_fall(collision);\n      break;\n    }\n    case ItrEffect.Ice2:\n      handle_itr_kind_freeze(collision)\n      break;\n    case ItrEffect.Ice: {\n      if (victim.frame.state === StateEnum.Frozen) {\n        handle_injury(collision);\n        handle_stiffness(collision)\n        handle_rest(collision)\n        handle_fall(collision);\n      } else {\n        handle_itr_kind_freeze(collision)\n      }\n      break;\n    }\n    case ItrEffect.Explosion:\n    case ItrEffect.Normal:\n    case ItrEffect.Sharp:\n    case void 0: {\n      handle_injury(collision);\n      handle_rest(collision)\n      handle_stiffness(collision)\n      const { fall = Defines.DEFAULT_ITR_FALL } = itr;\n      victim.fall_value -= fall;\n      victim.defend_value = 0;\n      const is_fall =\n        victim.fall_value <= 0 ||\n        victim.hp <= 0 ||\n        victim.frame.state === StateEnum.Frozen ||\n        (victim.fall_value <= Defines.DEFAULT_FALL_VALUE_DIZZY &&\n          (StateEnum.Caught === victim.frame.state ||\n            victim.velocity_0.y > 0 ||\n            victim.position.y > 0));\n      if (is_fall) {\n        handle_fall(collision);\n      } else {\n        if (itr.dvx) victim.velocity_0.x = itr.dvx * attacker.facing;\n        if (victim.position.y > 0 && victim.velocity_0.y > 2)\n          victim.velocity_0.y = 2;\n        victim.velocity_0.z = 0;\n\n        const [x, y, z] = victim.spark_point(a_cube, b_cube)\n        if (itr.effect === ItrEffect.Sharp && is_character(victim)) {\n          victim.world.spark(x, y, z, SparkEnum.Bleed);\n        } else {\n          victim.world.spark(x, y, z, SparkEnum.Hit);\n        }\n        if (StateEnum.Caught === victim.frame.state) {\n          if (victim.frame.cpoint) {\n            const { backhurtact, fronthurtact } = victim.frame.cpoint;\n            if (attacker.facing === victim.facing && backhurtact) {\n              victim.next_frame = { id: backhurtact };\n            } else if (attacker.facing !== victim.facing && fronthurtact) {\n              victim.next_frame = { id: fronthurtact };\n            }\n          }\n        } else {\n          /* 击晕 */\n          if (victim.fall_value <= Defines.DEFAULT_FALL_VALUE_DIZZY) {\n            victim.next_frame = { id: victim.data.indexes?.dizzy };\n          } else if (victim.data.indexes?.grand_injured) {\n            /* 击中 */\n            victim.next_frame = {\n              id: victim.data.indexes.grand_injured[same_face(victim, attacker)][0],\n            };\n          }\n        }\n      }\n      break;\n    }\n  }\n}\n\n","import { ICollision } from \"../base\";\nimport { ArmorEnum, Defines, SparkEnum } from \"../defines\";\nimport { floor } from \"../utils\";\nimport { handle_injury } from \"./handle_injury\";\nimport { handle_rest } from \"./handle_rest\";\nimport { is_armor_work } from \"./is_armor_work\";\n/**\n * 护甲逻辑\n *\n * @export\n * @param {ICollision} collision 碰撞信息\n * @return {boolean} 护甲是否有效\n */\nexport function handle_armor(collision: ICollision): boolean {\n  const { victim, attacker } = collision;\n  const { armor } = victim;\n\n  /* 无护甲 或 护甲耐久为0 */\n  if (!armor || !is_armor_work(collision))\n    return false;\n\n  const { itr, a_cube, b_cube } = collision;\n  /* 判断是否强制破防 */\n  const { bdefend = 0 } = itr;\n  const {\n    type,\n    hit_sounds,\n    injury_ratio = Defines.DEFAULT_ARMOR_INJURY_RATIO,\n    motionless_ratio = Defines.DEFAULT_ARMOR_MOTIONLESS_RATIO,\n    shaking_ratio = Defines.DEFAULT_ARMOR_SHAKING_RATIO,\n    dead_sounds = hit_sounds\n  } = armor;\n  const { fall = Defines.DEFAULT_ITR_FALL, injury = 0 } = itr;\n  let decrease_value = 0;\n  switch (type) {\n    case ArmorEnum.Fall: decrease_value = fall; break;\n    case ArmorEnum.Defend: decrease_value = bdefend; break;\n    case ArmorEnum.Times: decrease_value = 1; break;\n    case ArmorEnum.Injury: decrease_value = injury; break;\n  }\n  victim.toughness -= decrease_value;\n  const [x, y, z] = victim.spark_point(a_cube, b_cube);\n  const spark_type = fall >= Defines.DEFAULT_FALL_VALUE_CRITICAL ?\n    SparkEnum.SlientCriticalHit :\n    SparkEnum.SlientHit;\n  victim.world.spark(x, y, z, spark_type);\n  const sounds = victim.toughness > 0 ? hit_sounds : dead_sounds;\n  if (sounds) for (const s of sounds) victim.lf2.sounds.play(s, x, y, z);\n  const {\n    shaking = victim.world.itr_shaking,\n    motionless = victim.world.itr_motionless\n  } = itr\n  attacker.motionless = floor(motionless_ratio * motionless);\n  victim.shaking = floor(shaking_ratio * shaking);\n  victim.velocities.length = 1;\n  victim.velocity_0.x = 0;\n  victim.velocity_0.y = 0;\n  victim.velocity_0.z = 0;\n  handle_rest(collision)\n  handle_injury(collision, injury_ratio)\n  return true;\n}\n","import { ICollision, ICollisionHandler } from \"../base\";\r\nimport { ALL_ENTITY_ENUM, BdyKind, BuiltIn_OID, EntityEnum, EntityGroup, ItrKind, TEntityEnum } from \"../defines\";\r\nimport { Ditto } from \"../ditto\";\r\nimport { collision_action_handlers } from \"../entity/collision_action_handlers\";\r\nimport { handle_ball_frozen } from \"./handle_ball_frozen\";\r\nimport { handle_ball_hit_other } from \"./handle_ball_hit_other\";\r\nimport { handle_ball_is_hit } from \"./handle_ball_is_hit\";\r\nimport { handle_body_goto as handle_criminal_hit } from \"./handle_body_goto\";\r\nimport { handle_healing } from \"./handle_healing\";\r\nimport { handle_itr_kind_catch } from \"./handle_itr_kind_catch\";\r\nimport { handle_itr_kind_force_catch } from \"./handle_itr_kind_force_catch\";\r\nimport { handle_itr_kind_freeze } from \"./handle_itr_kind_freeze\";\r\nimport { handle_itr_kind_magic_flute } from \"./handle_itr_kind_magic_flute\";\r\nimport { handle_itr_kind_whirlwind } from \"./handle_itr_kind_whirlwind\";\r\nimport { handle_itr_normal_bdy_defend } from \"./handle_itr_normal_bdy_defend\";\r\nimport { handle_itr_normal_bdy_normal } from \"./handle_itr_normal_bdy_normal\";\r\nimport { handle_john_shield_hit_other_ball } from \"./handle_john_shield_hit_other_ball\";\r\nimport { handle_rest } from \"./handle_rest\";\r\nimport { handle_super_punch_me } from \"./handle_super_punch_me\";\r\nimport { handle_weapon_hit_other } from \"./handle_weapon_hit_other\";\r\nimport { handle_weapon_is_hit } from \"./handle_weapon_is_hit\";\r\nimport { handle_weapon_is_picked } from \"./handle_weapon_is_picked\";\r\nimport { handle_weapon_is_picked_secretly } from \"./handle_weapon_is_picked_secretly\";\r\n\r\nexport class CollisionKeeper {\r\n  protected pair_map: Map<string, ((collision: ICollision) => void)[]> = new Map();\r\n  add(\r\n    a_type_list: TEntityEnum[],\r\n    itr_kind_list: ItrKind[],\r\n    v_type_list: TEntityEnum[],\r\n    bdy_kind_list: BdyKind[],\r\n    fn: (collision: ICollision) => void,\r\n  ) {\r\n    for (const itr_kind of itr_kind_list) {\r\n      for (const a_type of a_type_list) {\r\n        for (const bdy_kind of bdy_kind_list) {\r\n          for (const v_type of v_type_list) {\r\n            const key = [a_type, itr_kind, v_type, bdy_kind].join(\"_\")\r\n            const fns = this.pair_map.get(key) || []\r\n            fns.push(fn)\r\n            this.pair_map.set(key, fns);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  adds(...list: ICollisionHandler[]) {\r\n    for (const i of list) {\r\n      this.add(i.a_type, i.itr, i.v_type, i.bdy, i.run.bind(i));\r\n    }\r\n  }\r\n  get(\r\n    a_type: TEntityEnum,\r\n    itr_kind: ItrKind,\r\n    v_type: TEntityEnum,\r\n    bdy_kind: BdyKind,\r\n  ) {\r\n    if (itr_kind === void 0) {\r\n      console.warn(\"[CollisionHandler] itr.kind got\", itr_kind);\r\n      debugger;\r\n    }\r\n    if (bdy_kind === void 0) {\r\n      console.warn(\"[CollisionHandler] bdy.kind got\", bdy_kind);\r\n      debugger;\r\n    }\r\n    return this.pair_map.get(`${a_type}_${itr_kind}_${v_type}_${bdy_kind}`);\r\n  }\r\n  handler(collision: ICollision) {\r\n    return this.get(\r\n      collision.attacker.data.type,\r\n      collision.itr.kind,\r\n      collision.victim.data.type,\r\n      collision.bdy.kind,\r\n    )\r\n  }\r\n  handle(collision: ICollision) {\r\n    const { handlers } = collision\r\n    if (Ditto.DEV && handlers) {\r\n      const collision_desc =\r\n        `[${collision.attacker.data.type}]#${ItrKind[collision.itr.kind]} => ` +\r\n        `[${collision.victim.data.type}]#${BdyKind[collision.bdy.kind]}`;\r\n      Ditto.debug(` collision: ${collision_desc} \\nhandlers: ${handlers?.map(v => v.name) ?? 'none'}`)\r\n    }\r\n\r\n    let ball_hit = false;\r\n    const { itr, bdy, victim, attacker } = collision;\r\n    const itr_tests = itr.actions?.map(v => v.pretest && v.tester?.run(collision) !== false)\r\n    const bdy_tests = bdy.actions?.map(v => v.pretest && v.tester?.run(collision) !== false)\r\n\r\n    handlers?.forEach(fn => {\r\n      ball_hit = ball_hit || fn === handle_ball_is_hit;\r\n      return fn(collision)\r\n    })\r\n\r\n    if (\r\n      attacker.group?.some(v => v === EntityGroup.FreezableBall) &&\r\n      attacker.data.id === BuiltIn_OID.FreezeBall\r\n    ) {\r\n      handle_ball_frozen(victim, attacker);\r\n    } else if (\r\n      (\r\n        (attacker.data.id === BuiltIn_OID.Freeze) ||\r\n        (attacker.data.id === BuiltIn_OID.FreezeBall) ||\r\n        (attacker.data.id === BuiltIn_OID.Weapon_IceSword && attacker.holder)\r\n      ) && (\r\n        victim.group?.some(v => v === EntityGroup.FreezableBall)\r\n      )\r\n    ) {\r\n      handle_ball_frozen(attacker, victim);\r\n    } else {\r\n      itr.actions?.forEach((action, idx) => {\r\n        const test_result = action.pretest ? itr_tests?.[idx] : action.tester?.run(collision);\r\n        if (test_result === false) return;\r\n        collision_action_handlers[action.type](action as any, collision)\r\n      })\r\n      bdy.actions?.forEach((action, idx) => {\r\n        const test_result = action.pretest ? bdy_tests?.[idx] : action.tester?.run(collision);\r\n        if (test_result === false) return;\r\n        collision_action_handlers[action.type](action as any, collision)\r\n      })\r\n    }\r\n\r\n    victim.collided_list.push((victim.lastest_collided = collision));\r\n    attacker.collision_list.push((attacker.lastest_collision = collision));\r\n    if (\r\n      itr.kind !== ItrKind.Block &&\r\n      itr.kind !== ItrKind.Whirlwind &&\r\n      itr.kind !== ItrKind.MagicFlute &&\r\n      itr.kind !== ItrKind.MagicFlute2 &&\r\n      itr.kind !== ItrKind.Pick &&\r\n      itr.kind !== ItrKind.PickSecretly\r\n    ) {\r\n      const sounds = victim.data.base.hit_sounds;\r\n      victim.play_sound(sounds);\r\n    }\r\n  }\r\n}\r\nexport const collisions_keeper = (window as any).collisions_keeper = new CollisionKeeper();\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Catch],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_itr_kind_catch,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.ForceCatch],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_itr_kind_force_catch,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Whirlwind],\r\n  [EntityEnum.Fighter, EntityEnum.Weapon],\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_itr_kind_whirlwind,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Freeze],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_itr_kind_freeze,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [\r\n    ItrKind.JohnShield,\r\n    ItrKind.Normal,\r\n    ItrKind.WeaponSwing,\r\n    ItrKind.CharacterThrew,\r\n  ],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal],\r\n  handle_itr_normal_bdy_normal,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [\r\n    ItrKind.JohnShield,\r\n    ItrKind.Normal,\r\n    ItrKind.WeaponSwing,\r\n    ItrKind.CharacterThrew,\r\n  ],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Defend],\r\n  handle_itr_normal_bdy_defend,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.MagicFlute, ItrKind.MagicFlute2],\r\n  [EntityEnum.Fighter, EntityEnum.Weapon],\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_itr_kind_magic_flute,\r\n);\r\ncollisions_keeper.add(\r\n  [EntityEnum.Fighter],\r\n  [ItrKind.Pick],\r\n  [EntityEnum.Weapon],\r\n  [BdyKind.Normal],\r\n  handle_weapon_is_picked,\r\n);\r\ncollisions_keeper.add(\r\n  [EntityEnum.Fighter],\r\n  [ItrKind.PickSecretly],\r\n  [EntityEnum.Weapon],\r\n  [BdyKind.Normal],\r\n  handle_weapon_is_picked_secretly,\r\n);\r\n\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [\r\n    ItrKind.JohnShield,\r\n    ItrKind.Normal,\r\n    ItrKind.WeaponSwing,\r\n    ItrKind.CharacterThrew,\r\n  ],\r\n  [EntityEnum.Weapon],\r\n  [BdyKind.Normal],\r\n  handle_weapon_is_hit,\r\n);\r\n\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Block],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal],\r\n  handle_rest,\r\n);\r\n\r\ncollisions_keeper.add(\r\n  [EntityEnum.Ball],\r\n  [ItrKind.Normal],\r\n  ALL_ENTITY_ENUM,\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_ball_hit_other\r\n)\r\n\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Normal, ItrKind.WeaponSwing, ItrKind.CharacterThrew],\r\n  [EntityEnum.Ball],\r\n  [BdyKind.Normal],\r\n  handle_ball_is_hit\r\n)\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.JohnShield],\r\n  [EntityEnum.Ball],\r\n  [BdyKind.Normal],\r\n  handle_john_shield_hit_other_ball,\r\n)\r\n\r\ncollisions_keeper.add(\r\n  [EntityEnum.Weapon],\r\n  [ItrKind.Normal],\r\n  ALL_ENTITY_ENUM,\r\n  [BdyKind.Normal, BdyKind.Defend],\r\n  handle_weapon_hit_other\r\n)\r\ncollisions_keeper.add(\r\n  [EntityEnum.Weapon, EntityEnum.Fighter],\r\n  [ItrKind.WeaponSwing, ItrKind.Normal],\r\n  ALL_ENTITY_ENUM,\r\n  [BdyKind.Criminal],\r\n  handle_criminal_hit,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.Heal],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal],\r\n  handle_healing,\r\n);\r\ncollisions_keeper.add(\r\n  ALL_ENTITY_ENUM,\r\n  [ItrKind.SuperPunchMe],\r\n  [EntityEnum.Fighter],\r\n  [BdyKind.Normal],\r\n  handle_super_punch_me,\r\n);\r\n\r\n","import { ICollision } from \"../base/ICollision\";\r\n\r\nexport function handle_itr_kind_catch(c: ICollision) {\r\n  if (c.attacker.catching) return;\r\n  if (c.attacker.dizzy_catch_test(c.victim)) {\r\n    c.attacker.start_catch(c.victim, c.itr);\r\n    c.victim.start_caught(c.attacker, c.itr);\r\n  }\r\n}\r\n","import { ICollision } from \"../base/ICollision\";\r\n\r\nexport function handle_itr_kind_force_catch(c: ICollision) {\r\n  c.attacker.start_catch(c.victim, c.itr);\r\n  c.victim.start_caught(c.attacker, c.itr);\r\n}\r\n","import { ICollision } from \"../base/ICollision\";\r\nimport { EntityEnum, StateEnum } from \"../defines\";\r\nimport { round } from \"../utils/math/base\";\r\n\r\nexport function handle_itr_kind_whirlwind(c: ICollision) {\r\n  const { attacker, victim } = c;\r\n  victim.merge_velocities();\r\n  let { x, y, z } = victim.velocity_0;\r\n  const dz = round(victim.position.z - attacker.position.z);\r\n  const dx = round(victim.position.x - attacker.position.x);\r\n  let d = dx > 0 ? -1 : 1;\r\n  let l = dz > 0 ? -1 : dz < 0 ? 1 : 0;\r\n  y += y < 4 ? 1 : -1;\r\n  x += d * 0.5;\r\n  z += l * 0.5;\r\n  victim.velocity_0.set(x, y, z);\r\n  switch (victim.type) {\r\n    case EntityEnum.Weapon:\r\n      switch (victim.frame.state) {\r\n        case StateEnum.Weapon_InTheSky:\r\n        case StateEnum.HeavyWeapon_InTheSky:\r\n          break;\r\n        default:\r\n          victim.next_frame = { id: victim.data.indexes?.in_the_skys?.[0] };\r\n          break;\r\n      }\r\n      break;\r\n  }\r\n}\r\n","import { ICollision } from \"../base\";\nimport { Defines, IAction_BrokenDefend, IAction_Defend, ItrEffect, SparkEnum } from \"../defines\";\nimport { ActionType } from \"../defines/ActionType\";\nimport { collision_action_handlers } from \"../entity/collision_action_handlers\";\nimport { handle_injury } from \"./handle_injury\";\nimport { handle_itr_normal_bdy_normal } from \"./handle_itr_normal_bdy_normal\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\nexport function handle_itr_normal_bdy_defend(collision: ICollision) {\n  const { itr, attacker, victim, a_cube, b_cube, bdy } = collision;\n  const { bdefend = Defines.DEFAULT_BREAK_DEFEND_VALUE } = itr;\n  if (\n    // 爆炸类型的伤害不论方向都可防御。\n    // 默认仅允许抵御来自前方的伤害\n    (ItrEffect.FireExplosion !== itr.effect &&\n      ItrEffect.Explosion !== itr.effect &&\n      attacker.facing === victim.facing) ||\n    (bdefend >= Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE)) {\n    handle_itr_normal_bdy_normal(collision);\n    return;\n  }\n\n  victim.defend_value -= bdefend;\n  handle_injury(collision, victim.defend_ratio);\n  handle_rest(collision)\n  handle_stiffness(collision)\n  const [x, y, z] = victim.spark_point(a_cube, b_cube);\n\n  if (itr.dvx) victim.velocity_0.x = (itr.dvx * attacker.facing) / 2;\n  \n  if (victim.defend_value <= 0) {\n    // 破防\n    victim.defend_value = 0;\n    victim.world.spark(x, y, z, SparkEnum.BrokenDefend);\n    itr.actions?.forEach((action) => {\n      if (action.type === ActionType.A_Defend)\n        collision_action_handlers.a_next_frame(action, collision);\n      if (action.type === ActionType.V_Defend)\n        collision_action_handlers.v_next_frame(action, collision);\n    })\n    bdy.actions?.forEach((action) => {\n      if (action.type === ActionType.A_BrokenDefend)\n        collision_action_handlers.a_next_frame(action, collision);\n      if (action.type === ActionType.V_BrokenDefend)\n        collision_action_handlers.v_next_frame(action, collision);\n    })\n  } else {\n    victim.world.spark(x, y, z, SparkEnum.DefendHit);\n    itr.actions?.forEach((action) => {\n      if (action.type === ActionType.A_Defend)\n        collision_action_handlers.a_next_frame(action, collision);\n      if (action.type === ActionType.V_Defend)\n        collision_action_handlers.v_next_frame(action, collision);\n    })\n    bdy.actions?.forEach((action) => {\n      if (action.type === ActionType.A_Defend)\n        collision_action_handlers.a_next_frame(action, collision);\n      if (action.type === ActionType.V_Defend)\n        collision_action_handlers.v_next_frame(action, collision);\n    })\n  }\n}\n","import { ICollision } from \"../base/ICollision\";\r\nimport { StateEnum } from \"../defines\";\r\nimport { EntityEnum } from \"../defines/EntityEnum\";\r\nimport { handle_injury } from \"./handle_injury\";\r\nimport { handle_rest } from \"./handle_rest\";\r\n\r\nexport function handle_itr_kind_magic_flute(collision: ICollision): void {\r\n  handle_rest(collision)\r\n  const { victim, attacker } = collision;\r\n  victim.merge_velocities();\r\n  if (victim.velocity_0.y < 3) victim.velocity_0.y += 3;\r\n  switch (victim.data.type) {\r\n    case EntityEnum.Fighter:\r\n      handle_injury(collision)\r\n      if (victim.frame.state !== StateEnum.Falling) {\r\n        victim.next_frame = { id: victim.data.indexes?.falling?.[-1][0] };\r\n      }\r\n      break;\r\n    case EntityEnum.Weapon:\r\n      switch (victim.frame.state) {\r\n        case StateEnum.Weapon_InTheSky:\r\n        case StateEnum.HeavyWeapon_InTheSky:\r\n          break;\r\n        default:\r\n          victim.team = attacker.team;\r\n          victim.next_frame = { id: victim.data.indexes?.in_the_skys?.[0] };\r\n          break;\r\n      }\r\n  }\r\n  victim.handle_velocity_decay(0.25);\r\n}\r\n","import { ICollision } from \"../base\";\r\nimport { WeaponType } from \"../defines\";\r\n\r\nexport function handle_weapon_is_picked(collision: ICollision): void {\r\n  const { victim, attacker } = collision;\r\n  if (attacker.holding) return;\r\n  victim.holder = attacker;\r\n  attacker.holding = victim;\r\n  victim.team = attacker.team;\r\n  if (victim.data.base.type === WeaponType.Heavy) {\r\n    attacker.next_frame = { id: attacker.data.indexes?.picking_heavy };\r\n  } else {\r\n    attacker.next_frame = { id: attacker.data.indexes?.picking_light };\r\n  }\r\n}\r\n","import { ICollision } from \"../base\";\r\nimport { WeaponType } from \"../defines\";\r\n\r\nexport function handle_weapon_is_picked_secretly(collision: ICollision): void {\r\n  const { victim, attacker } = collision;\r\n  if (attacker.holding || victim.data.base.type === WeaponType.Heavy) return;\r\n  victim.holder = attacker;\r\n  attacker.holding = victim;\r\n  victim.team = attacker.team;\r\n}\r\n","import { ICollision } from \"../base\";\nimport { BuiltIn_OID, Defines, W_T } from \"../defines\";\nimport { floor } from \"../utils\";\nimport { handle_injury } from \"./handle_injury\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\nexport function handle_weapon_is_hit(collision: ICollision): void {\n  handle_rest(collision)\n  handle_stiffness(collision)\n  handle_injury(collision)\n  const { itr, attacker, victim, a_cube, b_cube } = collision;\n\n  if (itr.bdefend && itr.bdefend >= Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE) {\n    victim.hp = victim.hp_r = 0;\n  }\n\n  const is_fly = itr.fall && itr.fall >= Defines.DEFAULT_FALL_VALUE_CRITICAL;\n  const spark_frame_name = is_fly ? \"slient_critical_hit\" : \"slient_hit\";\n  victim.world.spark(...collision.victim.spark_point(a_cube, b_cube), spark_frame_name);\n\n  let weight_x = victim.data.base.weight || 1;\n  let weight_y = victim.data.base.weight || 1;\n  let vx = floor((itr.dvx ? itr.dvx * attacker.facing : 0) / weight_x);\n  let vy = floor((itr.dvy ? itr.dvy : Defines.DEFAULT_IVY_D) / weight_y);\n\n\n  if (victim.data.base.type !== W_T.Heavy || is_fly) {\n    victim.velocity_0.x = vx;\n    victim.velocity_0.y = vy;\n    victim.team = attacker.team;\n    victim.next_frame = { id: victim.lf2.random_get(victim.data.indexes?.in_the_skys) };\n  }\n\n  if (\n    attacker.data.id === BuiltIn_OID.Weapon_Stick &&\n    (\n      victim.data.id === BuiltIn_OID.Weapon_baseball ||\n      victim.data.id === BuiltIn_OID.Weapon_milk ||\n      victim.data.id === BuiltIn_OID.Weapon_Beer\n    )\n  ) {\n    const s = attacker.data.base.strength || 1\n    vx = attacker.facing * s * 20\n    victim.next_frame = { id: victim.lf2.random_get(victim.data.indexes?.throwings) }\n  }\n\n}\n","import { ICollision } from \"../base\";\nimport { BdyKind, Defines, FrameBehavior } from \"../defines\";\nimport { is_character } from \"../entity\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\nexport function handle_ball_hit_other(collision: ICollision): void {\n  handle_rest(collision);\n  handle_stiffness(collision);\n  const { attacker, aframe, victim, bdy, itr } = collision;\n  switch (aframe.behavior as FrameBehavior) {\n    case FrameBehavior.JohnChase: {\n      if (!is_character(victim)) break\n      const { bdefend } = itr;\n      if (bdy.kind === BdyKind.Normal) {\n        attacker.hp = attacker.hp_r = 0;\n      } else if (bdy.kind === BdyKind.Defend) {\n        if (bdefend && bdefend >= Defines.DEFAULT_FORCE_BREAK_DEFEND_VALUE) {\n          attacker.hp = attacker.hp_r = 0;\n        } else if (victim.facing === attacker.facing) {\n          attacker.hp = attacker.hp_r = 0;\n        }\n      }\n      break;\n    }\n    case FrameBehavior.DennisChase:\n    case FrameBehavior._03:\n    case FrameBehavior.AngelBlessing:\n    case FrameBehavior.AngelBlessingStart:\n    case FrameBehavior.DevilJudgementStart:\n    case FrameBehavior.ChasingSameEnemy:\n    case FrameBehavior.BatStart:\n    case FrameBehavior.FirzenDisasterStart:\n    case FrameBehavior.JohnBiscuitLeaving:\n    case FrameBehavior.FirzenVolcanoStart:\n    case FrameBehavior.Bat:\n    case FrameBehavior.JulianBallStart:\n    case FrameBehavior.JulianBall:\n      break;\n  }\n  attacker.play_sound(attacker.data.base.hit_sounds)\n}\n","import { ICollision } from \"../base\";\nimport { FrameBehavior } from \"../defines\";\nimport { handle_injury } from \"./handle_injury\";\nimport { handle_rest } from \"./handle_rest\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\n\nexport function handle_john_shield_hit_other_ball(collision: ICollision): void {\n  handle_rest(collision);\n  handle_injury(collision);\n  handle_stiffness(collision);\n  const { attacker } = collision;\n  attacker.shaking = attacker.motionless;\n  attacker.play_sound(attacker.data.base.hit_sounds);\n}\n","import { ICollision } from \"../base\";\nimport { StateEnum, WeaponType } from \"../defines\";\nimport { round } from \"../utils\";\n\nexport function handle_weapon_hit_other(collision: ICollision): void {\n  const { attacker } = collision;\n  if (attacker.frame.state === StateEnum.Weapon_OnHand) {\n    return;\n  }\n  if (attacker.frame.state === StateEnum.Weapon_Throwing) {\n    // TODO: 这里是击中的反弹，如何更合适？ -Gim\n    attacker.velocity_0.x = -0.3 * attacker.velocity_0.x;\n    attacker.velocity_0.y = round(0.3 * attacker.velocity_0.y);\n    attacker.velocity_0.z = 0;\n  }\n\n  const nf = attacker.find_align_frame(\n    attacker.frame.id,\n    attacker.data.indexes?.throwings,\n    attacker.data.indexes?.in_the_skys\n  )\n  attacker.next_frame = nf\n}\n","import { ICollision } from \"../base\";\nimport { handle_stiffness } from \"./handle_stiffness\";\n\nexport function handle_body_goto(collision: ICollision): void {\n  handle_stiffness(collision);\n}\n","import { ICollision } from \"../base\";\n\nexport function handle_healing(collision: ICollision): void {\n  const { itr, victim } = collision;\n  if (itr.injury) victim.healing = itr.injury;\n}\n","import { ICollision } from \"../base\";\n\nexport function handle_super_punch_me(collision: ICollision): void {\n  const { victim, attacker } = collision;\n  victim.v_rests.set(attacker.id, collision);\n}\n","import { Defines } from \"./defines\";\r\nimport { IWorldDataset } from \"./IWorldDataset\";\r\nimport { make_private_properties } from \"./utils/make_private_properties\";\r\n\r\nexport class WorldDataset implements IWorldDataset {\r\n  static readonly TAG: string = 'WorldDataset';\r\n  /** \r\n   * 被击中的对象晃动多少帧\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  itr_shaking: number = Defines.DEFAULT_ITR_SHAKING;\r\n\r\n  /**\r\n   * 击中敌人的对象停顿多少帧\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  itr_motionless: number = Defines.DEFAULT_ITR_MOTIONLESS;\r\n\r\n  /**\r\n   * dvx缩放系数\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  fvx_f: number = Defines.DEFAULT_FVX_F;\r\n\r\n  /**\r\n   * dvy缩放系数\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  fvy_f: number = Defines.DEFAULT_FVY_F;\r\n\r\n  /**\r\n   * dvz缩放系数\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  fvz_f: number = Defines.DEFAULT_FVZ_F;\r\n  ivy_f: number = 1;\r\n  ivz_f: number = 1;\r\n  ivx_f: number = 1;\r\n  ivy_d: number = Defines.DEFAULT_IVY_D;\r\n  ivx_d: number = 4;\r\n  cvy_d: number = 3;\r\n  cvx_d: number = 2;\r\n\r\n  /**\r\n   * X轴丢人初速度系数\r\n   *\r\n   * @type {number}\r\n   */\r\n  tvx_f: number = Defines.DEFAULT_TVX_F;\r\n\r\n  /**\r\n   * Y轴丢人初速度系数\r\n   *\r\n   * @type {number}\r\n   */\r\n  tvy_f: number = Defines.DEFAULT_TVY_F;\r\n\r\n  /**\r\n   * Z轴丢人初速度系数\r\n   *\r\n   * @type {number}\r\n   */\r\n  tvz_f: number = Defines.DEFAULT_TVZ_F;\r\n\r\n  /**\r\n   * 角色进入场地时的闪烁无敌时间\r\n   *\r\n   * @type {number}\r\n   */\r\n  begin_blink_time: number = Defines.DEFAULT_BEGIN_BLINK_TIME;\r\n\r\n  /**\r\n   * 倒地起身后的闪烁无敌时间\r\n   *\r\n   * @type {number}\r\n   */\r\n  lying_blink_time: number = Defines.DEFAULT_LYING_BLINK_TIME;\r\n\r\n  /**\r\n   * “非玩家槽角色”死亡时后的闪烁时间\r\n   * \r\n   * 闪烁完成后，非玩家槽角色应当被移除\r\n   *\r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  gone_blink_time: number = Defines.DEFAULT_GONE_BLINK_TIME;\r\n  vrest_offset: number = 0;\r\n  arest_offset: number = 0;\r\n  arest_offset_2: number = 0;\r\n\r\n  /**\r\n   * “帧等待数”偏移值\r\n   * \r\n   * @note\r\n   * “帧等待数”会在每次更新中减一\r\n   * 每一帧会在“帧等待数”归零时，尝试进入下一帧。\r\n   * \r\n   * 有：“帧等待数” = “帧本身的帧等待数” + “帧等待数”偏移值\r\n   * \r\n   * @see {IFrameInfo.wait} 帧本身的“帧等待数”\r\n   * \r\n   * @type {number}\r\n   * @memberof World\r\n   */\r\n  frame_wait_offset: number = 0;\r\n\r\n  cha_bc_spd: number = Defines.CHARACTER_BOUNCING_SPD;\r\n  cha_bc_tst_spd_x: number = Defines.CHARACTER_BOUNCING_TEST_SPD_X;\r\n  cha_bc_tst_spd_y: number = Defines.CHARACTER_BOUNCING_TEST_SPD_Y;\r\n  hp_recoverability: number = Defines.HP_RECOVERABILITY;\r\n  hp_r_ticks: number = Defines.HP_R_TICKS;\r\n  hp_r_value: number = Defines.HP_R_VALUE;\r\n  hp_healing_ticks: number = Defines.HP_HEALING_TICKS;\r\n  hp_healing_value: number = Defines.HP_HEALING_VALUE;\r\n\r\n  mp_r_ticks: number = Defines.MP_R_TICKS;\r\n  mp_r_ratio: number = Defines.MP_R_RATIO;\r\n  \r\n  /**\r\n   * 按键“双击”判定间隔，单位（帧数）\r\n   *\r\n   * 当同个按键在“双击判定间隔”之内按下两次，\r\n   * 且中途未按下其对应冲突按键，视为“双击”。\r\n   *\r\n   */\r\n  double_click_interval: number = Defines.DOUBLE_CLICK_INTERVAL;\r\n\r\n  /**\r\n   * 按键“按下”/“双击”的判定持续帧，单位：帧数\r\n   *\r\n   * 当某按键被“按下”（不松开），接下来的数帧（数值key_hit_duration）内，均判定为“按下”。\r\n   * 此时若存在对应的“按键‘按下’跳转动作”，且满足跳转条件，角色将会进入对应的“按键‘按下’跳转动作”。\r\n   *\r\n   * 当某双击后，接下来的数帧（数值key_hit_duration）内，均判定为“双击”。\r\n   * 此时若存在对应的“按键‘双击’跳转动作”，且满足跳转条件，角色将会进入对应的“按键‘双击’跳转动作”。\r\n   */\r\n  key_hit_duration: number = Defines.KEY_HIT_DURATION;\r\n  friction_factor: number = Defines.FRICTION_FACTOR;\r\n  /**\r\n   * 地面摩擦X 在地面的物体，每帧X速度将±=此值,向0靠近\r\n   *\r\n   * @type {number}\r\n   * @memberof WorldDataset\r\n   */\r\n  friction_x: number = Defines.FRICTION_X;\r\n  /**\r\n   * 地面摩擦Z 在地面的物体，每帧Z速度将±=此值,向0靠近\r\n   *\r\n   * @type {number}\r\n   * @memberof WorldDataset\r\n   */\r\n  friction_z: number = Defines.FRICTION_Z;\r\n\r\n  /**\r\n   * 地面摩擦X 在地面的物体，每帧X速度将±=此值,向0靠近\r\n   *\r\n   * @type {number}\r\n   * @memberof WorldDataset\r\n   */\r\n  land_friction_x: number = Defines.LAND_FRICTION_X;\r\n  /**\r\n   * 地面摩擦Z 在地面的物体，每帧Z速度将±=此值,向0靠近\r\n   *\r\n   * @type {number}\r\n   * @memberof WorldDataset\r\n   */\r\n  land_friction_z: number = Defines.LAND_FRICTION_Z;\r\n\r\n  screen_w: number = Defines.MODERN_SCREEN_WIDTH;\r\n  screen_h: number = Defines.MODERN_SCREEN_HEIGHT;\r\n  gravity: number = Defines.GRAVITY;\r\n  sync_render: number = 0;\r\n  constructor() {\r\n    make_private_properties(`${WorldDataset.TAG}::constructor`, this, (...args) => this.on_dataset_change?.(...args))\r\n  }\r\n  on_dataset_change?: (k: string, curr: any, prev: any) => void\r\n}","export function make_private_properties(place: string, o: any, on_change?: (k: string, curr: any, prev: any) => void) {\r\n  const keys = Object.keys(o);\r\n  for (const key of keys) {\r\n    if (key.startsWith('on_') || key.startsWith('_')) continue;\r\n    const pk = '_' + key;\r\n    if (typeof o[key] === 'function') continue;\r\n    o[pk] = o[key];\r\n    delete o[key];\r\n    const fn_key = `on_${key}_change`\r\n    Object.defineProperty(o, key, {\r\n      get() { return o[pk]; },\r\n      set(v) {\r\n        if (v === o[pk]) return;\r\n        const prev = o[pk]\r\n        o[pk] = v;\r\n        o[fn_key]?.(v, prev)\r\n        on_change?.(key, v, prev)\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Callbacks, FPS, ICollision } from \"./base\";\r\nimport { collisions_keeper } from \"./collision/CollisionKeeper\";\r\nimport {\r\n  ALL_ENTITY_ENUM,\r\n  Builtin_FrameId, Defines,\r\n  EntityGroup,\r\n  HitFlag,\r\n  IBdyInfo, IBounding, IEntityData,\r\n  IFrameInfo, IItrInfo, ItrKind,\r\n  StateEnum,\r\n  WeaponType\r\n} from \"./defines\";\r\nimport { Ditto } from \"./ditto\";\r\nimport { IWorldRenderer } from \"./ditto/render/IWorldRenderer\";\r\nimport {\r\n  Entity, Factory, ICreator, is_ball,\r\n  is_bot_ctrl,\r\n  is_character,\r\n  is_local_ctrl,\r\n  is_weapon\r\n} from \"./entity\";\r\nimport { IWorldCallbacks } from \"./IWorldCallbacks\";\r\nimport { LF2 } from \"./LF2\";\r\nimport { Stage } from \"./stage/Stage\";\r\nimport { abs, find, floor, is_num, min, round } from \"./utils\";\r\nimport { WorldDataset } from \"./WorldDataset\";\r\nexport class World extends WorldDataset {\r\n  static override readonly TAG: string = \"World\";\r\n  readonly lf2: LF2;\r\n  readonly callbacks = new Callbacks<IWorldCallbacks>();\r\n\r\n  private _spark_data?: IEntityData;\r\n  private _spark_creator?: ICreator<Entity, typeof Entity>;\r\n  private _stage: Stage;\r\n  private _need_FPS: boolean = true;\r\n  private _need_UPS: boolean = true;\r\n  private _FPS = new FPS(0.9);\r\n  private _UPS = new FPS(0.9);\r\n  private _render_worker_id?: ReturnType<typeof Ditto.Render.add>;\r\n  private _update_worker_id?: ReturnType<typeof Ditto.Interval.add>;\r\n  entities = new Set<Entity>();\r\n  incorporeities = new Set<Entity>();\r\n\r\n  readonly slot_fighters = new Map<string, Entity>();\r\n  readonly collisions: ICollision[] = [];\r\n  get stage() {\r\n    return this._stage;\r\n  }\r\n  set stage(v) {\r\n    if (v === this._stage) return;\r\n    const o = this._stage;\r\n    this._stage = v;\r\n    this.callbacks.emit(\"on_stage_change\")(v, o);\r\n    o.dispose();\r\n    v.enter_phase(0);\r\n  }\r\n  override on_dataset_change = (k: string, curr: any, prev: any) => {\r\n    this.callbacks.emit('on_dataset_change')(k as any, curr, prev, this)\r\n  };\r\n  on_sync_render_change(curr: any, prev: any) {\r\n    this.callbacks.emit('on_sync_render_changed')(curr, prev)\r\n    this.start_render();\r\n    this.start_update();\r\n  }\r\n  get bg() {\r\n    return this._stage.bg;\r\n  }\r\n  get left() {\r\n    return this.bg.left || 0;\r\n  }\r\n  get right() {\r\n    return this.bg.right || 0;\r\n  }\r\n  get near() {\r\n    return this.bg.near || 0;\r\n  }\r\n  get far() {\r\n    return this.bg.far || 0;\r\n  }\r\n  get width() {\r\n    return this.bg.width || 0;\r\n  }\r\n  get depth() {\r\n    return this.bg.depth || 0;\r\n  }\r\n  get middle() {\r\n    return this.bg.middle || { x: 0, z: 0 };\r\n  }\r\n\r\n  cam_speed = 0;\r\n  lock_cam_x: number | undefined = void 0;\r\n  public renderer: IWorldRenderer;\r\n\r\n  team_come(_team: string, x: number, y: number, z: number) {\r\n    for (const e of this.entities) {\r\n      const { ctrl, team } = e;\r\n      if (_team === team && is_bot_ctrl(ctrl)) {\r\n        ctrl.goto(x, y, z)\r\n      }\r\n    }\r\n  }\r\n  team_move(_team: string) {\r\n    for (const e of this.entities) {\r\n      const { ctrl, team } = e;\r\n      if (_team === team && is_bot_ctrl(ctrl)) {\r\n        ctrl.move()\r\n      }\r\n    }\r\n  }\r\n  team_stay(_team: string) {\r\n    for (const e of this.entities) {\r\n      const { ctrl, team } = e;\r\n      if (_team === team && is_bot_ctrl(ctrl)) {\r\n        ctrl.stay()\r\n      }\r\n    }\r\n  }\r\n  constructor(lf2: LF2) {\r\n    super()\r\n    this.lf2 = lf2;\r\n    this._stage = new Stage(this, Defines.VOID_BG);\r\n    this.renderer = new Ditto.WorldRender(this);\r\n  }\r\n  add_incorporeities(...entities: Entity[]) {\r\n    for (const entity of entities) {\r\n      this.incorporeities.add(entity);\r\n      this.renderer.add_entity(entity);\r\n    }\r\n  }\r\n  add_entities(...entities: Entity[]) {\r\n    for (const entity of entities) {\r\n      if (is_character(entity)) {\r\n        this.callbacks.emit(\"on_fighter_add\")(entity);\r\n        if (this.lf2.players.has(entity.ctrl.player_id)) {\r\n          this.slot_fighters.set(entity.ctrl.player_id, entity);\r\n          this.callbacks.emit(\"on_player_character_add\")(entity.ctrl.player_id);\r\n        }\r\n      }\r\n      this.entities.add(entity);\r\n      this.renderer.add_entity(entity);\r\n    }\r\n  }\r\n\r\n  list_enemy_fighters(e: Entity, fn: (other: Entity) => boolean): Entity[] {\r\n    const ret: Entity[] = []\r\n    for (const o of this.entities) {\r\n      if (!e.is_ally(o) && is_character(o) && fn(o)) {\r\n        ret.push(o)\r\n      }\r\n    }\r\n    const { x, z } = e.position;\r\n    ret.sort(({ position: a }, { position: b }) => abs(a.x - x) + abs(a.z - z) / 2 - abs(b.x - x) - abs(b.z - z) / 2)\r\n    return ret;\r\n  }\r\n\r\n  list_ally_fighters(e: Entity, fn: (other: Entity) => boolean): Entity[] {\r\n    const ret: Entity[] = []\r\n    for (const o of this.entities) {\r\n      if (e.is_ally(o) && is_character(o) && fn(o)) {\r\n        ret.push(o)\r\n      }\r\n    }\r\n    const { x, z } = e.position;\r\n    ret.sort(({ position: a }, { position: b }) => abs(a.x - x) + abs(a.z - z) / 2 - abs(b.x - x) - abs(b.z - z) / 2)\r\n    return ret;\r\n  }\r\n\r\n  del_entity(entity: Entity) {\r\n    if (!(this.entities.delete(entity) || this.incorporeities.delete(entity)))\r\n      return false;\r\n\r\n    if (is_character(entity))\r\n      this.callbacks.emit(\"on_fighter_del\")(entity);\r\n    if (entity.ctrl?.player_id) {\r\n      const ok = this.slot_fighters.delete(entity.ctrl.player_id);\r\n      if (ok) this.callbacks.emit(\"on_player_character_del\")(entity.ctrl.player_id);\r\n    }\r\n    this.renderer.del_entity(entity);\r\n    entity.dispose();\r\n    return true;\r\n  }\r\n\r\n  del_entities(entities: Entity[]) {\r\n    for (const e of entities) {\r\n      this.del_entity(e);\r\n    }\r\n  }\r\n\r\n  stop_render() {\r\n    this._render_worker_id && Ditto.Render.del(this._render_worker_id);\r\n    this._render_worker_id = 0;\r\n  }\r\n\r\n  start_render() {\r\n    if (this._render_worker_id) Ditto.Render.del(this._render_worker_id);\r\n    if (this.sync_render) return;\r\n    let _r_prev_time = 0;\r\n    const on_render = (time: number) => {\r\n      const dt = time - _r_prev_time;\r\n      if (_r_prev_time !== 0) {\r\n        this.render_once(dt);\r\n      }\r\n      if (_r_prev_time !== 0 && this._need_FPS) {\r\n        this._FPS.update(dt);\r\n        this.callbacks.emit(\"on_fps_update\")(this._FPS.value);\r\n      }\r\n      _r_prev_time = time;\r\n    };\r\n    this._render_worker_id && Ditto.Render.del(this._render_worker_id);\r\n    this._render_worker_id = Ditto.Render.add(on_render);\r\n  }\r\n\r\n  stop_update() {\r\n    this._update_worker_id && Ditto.Interval.del(this._update_worker_id);\r\n    this._update_worker_id = void 0;\r\n  }\r\n\r\n  start_update() {\r\n    if (this._update_worker_id) Ditto.Interval.del(this._update_worker_id);\r\n    let _prev_time = Date.now();\r\n    let _update_count = 0;\r\n    let _fix_radio = 1;\r\n    const on_update = () => {\r\n      const time = Date.now();\r\n      const real_dt = time - _prev_time;\r\n      if (real_dt < this._ideally_dt * _fix_radio) return;\r\n\r\n      this.lf2.ui?.enabled && this.lf2.ui?.update(real_dt);\r\n      _update_count++;\r\n\r\n      for (const key of this.lf2.cmds) {\r\n        switch (key) {\r\n          case 'f1':\r\n            this.set_paused(!this.paused);\r\n            break;\r\n          case 'f2':\r\n            this.set_paused(true);\r\n            this.update_once();\r\n            break;\r\n          case 'f4':\r\n            this.lf2.ui_stacks.length >= 2 && this.lf2.pop_ui()\r\n            break;\r\n          case 'f5':\r\n            this.playrate = this.playrate === 1 ? 100 : 1;\r\n            break;\r\n          case 'f6':\r\n            this.lf2.infinity_mp = !this.lf2.infinity_mp;\r\n            break;\r\n          case 'f7':\r\n            for (const e of this.entities) {\r\n              e.hp = e.hp_max;\r\n              e.mp = e.mp_max;\r\n            }\r\n            break;\r\n          case 'f8':\r\n            this.lf2.weapons.add_random(1, true, EntityGroup.VsWeapon)\r\n            break;\r\n          case 'f9':\r\n            for (const e of this.entities) {\r\n              if (is_weapon(e)) e.hp = 0;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n      this.lf2.cmds.clear()\r\n      if (!this._paused) this.update_once();\r\n      this.update_camera();\r\n      this.bg.update();\r\n\r\n      if (0 === _update_count % this.sync_render) {\r\n        this.render_once(real_dt);\r\n        this.callbacks.emit(\"on_fps_update\")(this._UPS.value / this.sync_render);\r\n      }\r\n      this._UPS.update(real_dt);\r\n      _fix_radio = this._UPS.value / 60;\r\n      if (this._need_UPS) {\r\n        this.callbacks.emit(\"on_ups_update\")(this._UPS.value, 0);\r\n      }\r\n      _prev_time = time;\r\n    };\r\n    this._update_worker_id = Ditto.Interval.add(on_update, 0);\r\n  }\r\n\r\n  /**\r\n   * 限制角色位置\r\n   * \r\n   * @param {Entity} e 角色实体\r\n   * @return {void} \r\n   * @memberof World\r\n   */\r\n  restrict_fighter(e: Entity): void {\r\n    const { near, far, player_l, player_r, enemy_l, enemy_r, team } = this.stage;\r\n\r\n    const is_player = e.team !== team;\r\n    const l = is_player ? player_l : enemy_l;\r\n    const r = is_player ? player_r : enemy_r;\r\n\r\n    const { x, z } = e.position;\r\n    if (x < l) e.position.x = l;\r\n    else if (x > r) e.position.x = r;\r\n\r\n    if (z < far) e.position.z = far;\r\n    else if (z > near) e.position.z = near;\r\n  }\r\n\r\n  /**\r\n   * 限制“波”位置\r\n   *\r\n   * 当“波”离开地图太远，直接标记为移除\r\n   * \r\n   * @param {Entity} e “波”\r\n   * @return {void}\r\n   * @memberof World\r\n   */\r\n  restrict_ball(e: Entity): void {\r\n    const { left, right, near, far } = this.stage;\r\n    const { x, z } = e.position;\r\n    if (x < left - 800) e.enter_frame(Defines.NEXT_FRAME_GONE);\r\n    else if (x > right + 800) e.enter_frame(Defines.NEXT_FRAME_GONE);\r\n    if (z < far) e.position.z = far;\r\n    else if (z > near) e.position.z = near;\r\n  }\r\n\r\n  /**\r\n   * 限制“武器”位置\r\n   *\r\n   * 当“武器”离开地图太远，直接标记为移除\r\n   * \r\n   * @param {Entity} e “武器”\r\n   * @return {void}\r\n   * @memberof World\r\n   */\r\n  restrict_weapon(e: Entity): void {\r\n    const { left, right, near, far, drink_l, drink_r } = this.stage;\r\n    let { x, z } = e.position;\r\n\r\n    if (e.data.base.type === WeaponType.Drink) {\r\n      const l = drink_l;\r\n      const r = drink_r;\r\n      if (x < l) x = e.position.x = l;\r\n      else if (x > r) x = e.position.x = r;\r\n    }\r\n\r\n    if (x < left - 100) e.enter_frame(Defines.NEXT_FRAME_GONE);\r\n    else if (x > right + 100) e.enter_frame(Defines.NEXT_FRAME_GONE);\r\n    if (z < far) e.position.z = far;\r\n    else if (z > near) e.position.z = near;\r\n  }\r\n\r\n  /**\r\n   * 限制“实体”位置\r\n   *\r\n   * @param {Entity} e\r\n   * @memberof World\r\n   */\r\n  restrict(e: Entity): void {\r\n    if (is_character(e)) {\r\n      this.restrict_fighter(e);\r\n    } else if (is_ball(e)) {\r\n      this.restrict_ball(e);\r\n    } else if (is_weapon(e)) {\r\n      this.restrict_weapon(e);\r\n    }\r\n  }\r\n\r\n  manhattan(e1: Entity, e2: Entity) {\r\n    const p1 = e1.position;\r\n    const p2 = e2.position;\r\n    return abs(p1.x - p2.x) + abs(p1.z - p2.z);\r\n  }\r\n\r\n  private gone_entities: Entity[] = [];\r\n  private _enemy_chasers = new Set<Entity>();\r\n  private _ally_chasers = new Set<Entity>();\r\n  add_enemy_chaser(entity: Entity) {\r\n    this._enemy_chasers.add(entity);\r\n  }\r\n  del_enemy_chaser(entity: Entity) {\r\n    this._enemy_chasers.delete(entity);\r\n    entity.chasing = void 0;\r\n  }\r\n  add_ally_chaser(entity: Entity) {\r\n    this._ally_chasers.add(entity);\r\n  }\r\n  del_ally_chaser(entity: Entity) {\r\n    this._ally_chasers.delete(entity);\r\n    entity.chasing = void 0;\r\n  }\r\n\r\n  protected _time = 0;\r\n  get time() { return this._time }\r\n  protected _updating = 0\r\n  update_once() {\r\n    this._updating = 1;\r\n    if (this._time === Number.MAX_SAFE_INTEGER) this._time = 0;\r\n    else ++this._time;\r\n    for (const e of this.entities) {\r\n      e.self_update();\r\n\r\n      if (e.chasing && !e.chasing.ctrl) {\r\n        e.chasing = void 0;\r\n      }\r\n\r\n      for (const chaser of this._enemy_chasers) {\r\n        if (!is_character(e) || chaser.is_ally(e) || e.hp <= 0)\r\n          continue;\r\n        const prev = chaser.chasing;\r\n        if (!prev || prev?.team === chaser.team) {\r\n          chaser.chasing = e;\r\n        } else if (!prev || this.manhattan(prev, chaser) > this.manhattan(e, chaser)) {\r\n          chaser.chasing = e;\r\n        }\r\n      }\r\n      for (const chaser of this._ally_chasers) {\r\n        if (!is_character(e) || !chaser.is_ally(e) || e.hp <= 0)\r\n          continue;\r\n        const prev = chaser.chasing;\r\n        if (!prev || prev?.team !== chaser.team) {\r\n          chaser.chasing = e;\r\n        } else if (this.manhattan(prev, chaser) > this.manhattan(e, chaser)) {\r\n          chaser.chasing = e;\r\n        }\r\n      }\r\n    }\r\n    this.gone_entities.length = 0;\r\n    for (const e of this.entities) {\r\n      e.update();\r\n      if (\r\n        e.frame.id === Builtin_FrameId.Gone ||\r\n        e.frame.state === StateEnum.Gone\r\n      ) {\r\n        this.gone_entities.push(e);\r\n      }\r\n    }\r\n    for (const e of this.incorporeities) {\r\n      e.self_update();\r\n      e.update();\r\n      if (\r\n        e.frame.id === Builtin_FrameId.Gone ||\r\n        e.frame.state === StateEnum.Gone\r\n      ) {\r\n        this.gone_entities.push(e);\r\n      }\r\n    }\r\n    this.del_entities(this.gone_entities);\r\n    this.collision_detections();\r\n    this.stage.update();\r\n    this._updating = 0;\r\n  }\r\n\r\n  render_once(dt: number) {\r\n    this.renderer.render(dt);\r\n  }\r\n\r\n  update_camera() {\r\n\r\n    const old_cam_x = floor(this.renderer.cam_x);\r\n    if (this.bg.id === Defines.VOID_BG.id) {\r\n      this.renderer.cam_x = 0\r\n      if (old_cam_x !== 0) {\r\n        this.callbacks.emit(\"on_cam_move\")(0);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const { cam_l, left, cam_r, right } = this.stage;\r\n    const max_cam_left = is_num(this.lock_cam_x) ? left : cam_l;\r\n    const max_cam_right = is_num(this.lock_cam_x) ? right : cam_r;\r\n    let new_x = this.renderer.cam_x;\r\n    let max_speed_ratio = 50;\r\n    let acc_ratio = 1;\r\n    if (is_num(this.lock_cam_x)) {\r\n      new_x = this.lock_cam_x;\r\n    } else if (this.slot_fighters.size) {\r\n      let l = 0;\r\n      new_x = 0;\r\n      const has_human_player = find(\r\n        this.slot_fighters,\r\n        ([_, p]) => is_local_ctrl(p.ctrl) && p.hp > 0,\r\n      );\r\n      if (has_human_player) { // 取中间部分\r\n        for (const [, player] of this.slot_fighters) {\r\n          const c = player.ctrl;\r\n          if (!is_local_ctrl(c)) continue;\r\n          new_x += player.position.x - this.screen_w / 2 + (player.facing * this.screen_w) / 6;\r\n          ++l;\r\n        }\r\n      } else {\r\n        for (const [, player] of this.slot_fighters) {\r\n          new_x += player.position.x - this.screen_w / 2\r\n          ++l;\r\n        }\r\n      }\r\n\r\n      new_x = floor(new_x / l);\r\n    } else {\r\n\r\n    }\r\n    if (new_x < max_cam_left) new_x = max_cam_left;\r\n    if (new_x > max_cam_right - this.screen_w) new_x = max_cam_right - this.screen_w;\r\n    let cur_x = this.renderer.cam_x;\r\n    const acc = min(\r\n      acc_ratio,\r\n      0.5 * (acc_ratio * abs(cur_x - new_x)) / this.screen_w,\r\n    );\r\n    const max_speed = max_speed_ratio * acc;\r\n\r\n    if (cur_x > new_x) {\r\n      if (this.cam_speed > 0) this.cam_speed = 0;\r\n      else if (this.cam_speed > -max_speed) this.cam_speed -= acc;\r\n      else this.cam_speed = -max_speed;\r\n      this.renderer.cam_x += this.cam_speed;\r\n      if (this.renderer.cam_x < new_x) this.renderer.cam_x = new_x;\r\n    } else if (cur_x < new_x) {\r\n      if (this.cam_speed < 0) this.cam_speed = 0;\r\n      else if (this.cam_speed < max_speed) this.cam_speed += acc;\r\n      else this.cam_speed = max_speed;\r\n      this.renderer.cam_x += this.cam_speed;\r\n      if (this.renderer.cam_x > new_x) this.renderer.cam_x = new_x;\r\n    }\r\n\r\n    const new_cam_x = floor(this.renderer.cam_x);\r\n    if (old_cam_x !== new_cam_x) {\r\n      this.callbacks.emit(\"on_cam_move\")(new_cam_x);\r\n    }\r\n  }\r\n\r\n  private _temp_entitis_set = new Set<Entity>();\r\n  private _used_itrs = new Set<IItrInfo>()\r\n  collision_detections() {\r\n    this.collisions.length = 0;\r\n    this._used_itrs.clear()\r\n    this._temp_entitis_set.clear();\r\n\r\n    for (const a of this.entities) {\r\n      const a_ctrl = a.ctrl\r\n      for (const b of this._temp_entitis_set) {\r\n        const b_ctrl = b.ctrl;\r\n        if (is_bot_ctrl(b_ctrl)) b_ctrl.look_other(a)\r\n        if (is_bot_ctrl(a_ctrl)) a_ctrl.look_other(b)\r\n\r\n        const collision1 = this.collision_detection(a, b);\r\n        const collision2 = this.collision_detection(b, a);\r\n        if (collision1?.handlers && collision2?.handlers) {\r\n          const index1 = ALL_ENTITY_ENUM.indexOf(collision1.attacker.type)\r\n          const index2 = ALL_ENTITY_ENUM.indexOf(collision2.attacker.type)\r\n          if (index1 < index2)\r\n            this.collisions.push(collision1)\r\n          else if (index1 > index2)\r\n            this.collisions.push(collision2)\r\n          else\r\n            this.collisions.push(collision1, collision2)\r\n        }\r\n        else if (collision1?.handlers) this.collisions.push(collision1)\r\n        else if (collision2?.handlers) this.collisions.push(collision2)\r\n      }\r\n      this._temp_entitis_set.add(a);\r\n    }\r\n    for (const collision of this.collisions) {\r\n      collisions_keeper.handle(collision)\r\n    }\r\n  }\r\n\r\n  collision_detection(a: Entity, b: Entity): ICollision | undefined {\r\n    const af = a.frame;\r\n    const bf = b.frame;\r\n    if (!af.itr?.length || !bf.bdy?.length) return;\r\n    const l0 = af.itr.length;\r\n    const l1 = bf.bdy.length;\r\n    for (let i = 0; i < l0; ++i) {\r\n      for (let j = 0; j < l1; ++j) {\r\n        const itr = af.itr[i]!\r\n        const bdy = bf.bdy[j]!\r\n\r\n        if (!itr.vrest && this._used_itrs.has(itr)) return;\r\n\r\n        const collision = this.collision_test(a, af, itr, b, bf, bdy);\r\n\r\n        if (!collision) continue;\r\n\r\n        if (!itr.vrest) this._used_itrs.add(itr)\r\n        collision.handlers = collisions_keeper.handler(collision)\r\n        return collision\r\n      }\r\n    }\r\n  }\r\n\r\n  collision_test(\r\n    attacker: Entity,\r\n    aframe: IFrameInfo,\r\n    itr: IItrInfo,\r\n    victim: Entity,\r\n    bframe: IFrameInfo,\r\n    bdy: IBdyInfo,\r\n  ): ICollision | undefined {\r\n\r\n    if (!itr.vrest && attacker.a_rest) return;\r\n    if (itr.kind !== ItrKind.Heal) {\r\n      const b_catcher = victim.catcher;\r\n      if (victim.blinking || victim.invisible || victim.invulnerable) return;\r\n      if (b_catcher && b_catcher.frame.cpoint?.hurtable !== 1) return;\r\n    }\r\n    switch (aframe.state) {\r\n      case StateEnum.Weapon_OnHand: {\r\n        const atk = attacker.holder?.frame.wpoint?.attacking;\r\n        if (!atk) return;\r\n        const itr_prefab = attacker.data.itr_prefabs?.[atk];\r\n        if (!itr_prefab) return;\r\n        itr = { ...itr, ...itr_prefab };\r\n        break;\r\n      }\r\n    }\r\n\r\n    const a_cube = this.get_bounding(attacker, aframe, itr);\r\n    const b_cube = this.get_bounding(victim, bframe, bdy);\r\n    if (!(\r\n      a_cube.left <= b_cube.right &&\r\n      a_cube.right >= b_cube.left &&\r\n      a_cube.bottom <= b_cube.top &&\r\n      a_cube.top >= b_cube.bottom &&\r\n      a_cube.far <= b_cube.near &&\r\n      a_cube.near >= b_cube.far\r\n    )) return;\r\n\r\n    const ally_flag = attacker.is_ally(victim) ? HitFlag.Ally : HitFlag.Enemy;\r\n    if (\r\n      !(itr.hit_flag & victim.data.type) ||\r\n      !(bdy.hit_flag & attacker.data.type) ||\r\n      !(itr.hit_flag & ally_flag) &&\r\n      !(bdy.hit_flag & ally_flag)\r\n    ) return;\r\n\r\n\r\n    if (!itr.vrest && attacker.a_rest) return;\r\n    if (itr.vrest && victim.get_v_rest(attacker.id) > 0) return;\r\n\r\n    const collision: ICollision = {\r\n      v_rest: !itr.arest && itr.vrest ? itr.vrest + this.vrest_offset : void 0,\r\n      victim,\r\n      attacker,\r\n      itr,\r\n      bdy,\r\n      aframe,\r\n      bframe,\r\n      a_cube,\r\n      b_cube,\r\n    };\r\n    if (\r\n      bdy.tester?.run(collision) === false ||\r\n      itr.tester?.run(collision) === false\r\n    ) return;\r\n\r\n    return collision\r\n  }\r\n\r\n  init_spark_data() {\r\n    this._spark_data = this.lf2.datas.find(Defines.BuiltIn_Dats.Spark);\r\n    this._spark_creator = this._spark_data ? Factory.inst.get_entity_creator(this._spark_data.type) : void 0;\r\n  }\r\n\r\n  /**\r\n   * 火花特效\r\n   *\r\n   * @param {number} x x坐标\r\n   * @param {number} y y坐标\r\n   * @param {number} z z坐标\r\n   * @param {string} f 帧ID\r\n   * @return {void}\r\n   * @memberof World\r\n   */\r\n  spark(x: number, y: number, z: number, f: string): void {\r\n    if (!this._spark_data)\r\n      this.init_spark_data();\r\n    if (!this._spark_data) {\r\n      Ditto.warn(\r\n        World.TAG + \"::spark\",\r\n        `data of \"${Defines.BuiltIn_Dats.Spark}\" not found!`,\r\n      );\r\n      return;\r\n    }\r\n    if (!this._spark_creator) {\r\n      Ditto.warn(World.TAG + \"::spark\", `creator of \"${this._spark_data.type}\" not found!`);\r\n      return;\r\n    }\r\n    const e = this._spark_creator(this, this._spark_data);\r\n    e.position.set(round(x), round(y), round(z));\r\n    e.enter_frame({ id: f });\r\n    e.attach(false);\r\n  }\r\n  etc(x: number, y: number, z: number, f: string): void {\r\n    const data = this.lf2.datas.find(998);\r\n    if (!data) {\r\n      Ditto.warn(\r\n        World.TAG + \"::etc\",\r\n        `data of \"${998}\" not found!`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    const create = Factory.inst.get_entity_creator(data.type)\r\n\r\n    if (!create) {\r\n      Ditto.warn(World.TAG + \"::etc\", `creator of \"${998}\" not found!`);\r\n      return;\r\n    }\r\n    const e = create(this, data);\r\n    e.position.set(round(x), round(y), round(z));\r\n    e.enter_frame({ id: f });\r\n    e.attach(false);\r\n  }\r\n  get_bounding(e: Entity, f: IFrameInfo, i: IItrInfo | IBdyInfo): IBounding {\r\n    const left =\r\n      e.facing > 0\r\n        ? e.position.x - f.centerx + i.x\r\n        : e.position.x + f.centerx - i.x - i.w;\r\n    const top = e.position.y + f.centery - i.y;\r\n    const far = e.position.z + i.z;\r\n    return {\r\n      left,\r\n      right: left + i.w,\r\n      top,\r\n      bottom: top - i.h,\r\n      far,\r\n      near: far + i.l,\r\n    };\r\n  }\r\n\r\n  private _ideally_dt: number = floor(1000 / 60);\r\n  private _playrate: number = 1;\r\n\r\n  get playrate() {\r\n    return this._playrate;\r\n  }\r\n  set playrate(v: number) {\r\n    if (v <= 0) throw new Error(\"playrate must be larger than 0\");\r\n    if (v === this._playrate) return;\r\n    this._playrate = v;\r\n    this._ideally_dt = floor(1000 / 60) / this._playrate;\r\n    this.start_update();\r\n  }\r\n\r\n  private _paused = false;\r\n  get paused() { return this._paused; }\r\n  set paused(v: boolean) { this.set_paused(v); }\r\n  indicator_flags: number = 0;\r\n\r\n  set_paused(v: boolean) {\r\n    if (this._paused === v) return;\r\n    this._paused = v;\r\n    this.callbacks.emit(\"on_pause_change\")(v);\r\n  }\r\n\r\n  dispose() {\r\n    this.callbacks.emit(\"on_disposed\")();\r\n    this.stop_update();\r\n    this.stop_render();\r\n    this.del_entities(Array.from(this.entities));\r\n    this.renderer.dispose();\r\n    this.callbacks.clear()\r\n  }\r\n}","import { IIntersection } from \"./3d\";\nimport {\n  Callbacks, get_short_file_size_txt,\n  new_id,\n  new_team,\n  PIO\n} from \"./base\";\nimport { KEY_NAME_LIST, LocalController } from \"./controller\";\nimport {\n  BackgroundGroup,\n  Builtin_FrameId, CheatType, Defines, Difficulty, IBgData,\n  IStageInfo, TFace\n} from \"./defines\";\nimport {\n  Ditto,\n  IKeyboard,\n  IKeyboardCallback,\n  IKeyEvent,\n  IPointingEvent,\n  IPointings,\n  IPointingsCallback,\n  ISounds,\n  IZip,\n  IZipObject,\n} from \"./ditto\";\nimport { BlobUrl, HitUrl } from \"./ditto/importer\";\nimport { Entity } from \"./entity\";\nimport { IDebugging, make_debugging } from \"./entity/make_debugging\";\nimport { BallsHelper, CharactersHelper, EntitiesHelper, WeaponsHelper } from \"./helper\";\nimport { Randoming } from \"./helper/Randoming\";\nimport { ILf2Callback } from \"./ILf2Callback\";\nimport DatMgr from \"./loader/DatMgr\";\nimport get_import_fallbacks from \"./loader/get_import_fallbacks\";\nimport { ImageMgr } from \"./loader/ImageMgr\";\nimport { PlayerInfo } from \"./PlayerInfo\";\nimport { Stage } from \"./stage\";\nimport { UIComponent } from \"./ui/component/UIComponent\";\nimport { cook_ui_info } from \"./ui/cook_ui_info\";\nimport { ICookedUIInfo } from \"./ui/ICookedUIInfo\";\nimport { IUIInfo } from \"./ui/IUIInfo.dat\";\nimport { LF2PointerEvent } from \"./ui/LF2PointerEvent\";\nimport { LF2UIKeyEvent } from \"./ui/LF2UIKeyEvent\";\nimport { UINode } from \"./ui/UINode\";\nimport {\n  fisrt,\n  is_str\n} from \"./utils\";\nimport { MersenneTwister } from \"./utils/math/MersenneTwister\";\nimport { World } from \"./World\";\n\nconst cheat_info_pair = (n: CheatType) =>\n  [\n    \"\" + n,\n    {\n      keys: Defines.CheatKeys[n],\n      sound: Defines.CheatTypeSounds[n],\n    },\n  ] as const;\n\nexport class LF2 implements IKeyboardCallback, IPointingsCallback, IDebugging {\n  debug!: (_0: string, ..._1: any[]) => void;\n  warn!: (_0: string, ..._1: any[]) => void;\n  log!: (_0: string, ..._1: any[]) => void;\n  static readonly TAG = \"LF2\";\n  static readonly instances: LF2[] = []\n  lang: string = '';\n  static readonly DATA_VERSION: number = Defines.DATA_VERSION;\n  static readonly DATA_TYPE: string = 'DataZip';\n  static get instance() { return LF2.instances[0] }\n  static get ui() { return LF2.instances[0].ui }\n  static get ditto() { return Ditto }\n  private _disposed: boolean = false;\n  readonly callbacks = new Callbacks<ILf2Callback>();\n  private _ui_stacks: UINode[] = [];\n  private _loading: boolean = false;\n  private _playable: boolean = false;\n  private _difficulty: Difficulty = Difficulty.Difficult;\n  private _infinity_mp: boolean = false;\n  private _pointer_on_uis = new Set<UINode>();\n  private _pointer_raycaster = new Ditto.Raycaster();\n  private _pointer_vec_2 = new Ditto.Vector2();\n  private _mt = new MersenneTwister(Date.now())\n  readonly bat_spreading_x = new Randoming(Defines.BAT_CHASE_SPREADING_VX, this)\n  readonly bat_spreading_z = new Randoming(Defines.BAT_CHASE_SPREADING_VZ, this)\n  readonly disater_spreading_x = new Randoming(Defines.DISATER_SPREADING_VX, this)\n  readonly disater_spreading_y = new Randoming(Defines.DISATER_SPREADING_VY, this)\n  readonly jan_devil_judgement_spreading_x = new Randoming(Defines.DEVIL_JUDGEMENT_SPREADING_VX, this)\n  readonly jan_devil_judgement_spreading_y = new Randoming(Defines.DEVIL_JUDGEMENT_SPREADING_VY, this)\n\n  get loading() {\n    return this._loading;\n  }\n  get playable() {\n    return this._playable;\n  }\n  get need_load() {\n    return !this._playable && !this._loading;\n  }\n\n  get ui_stacks(): UINode[] {\n    return this._ui_stacks;\n  }\n  get ui(): UINode | undefined {\n    return this._ui_stacks[this._ui_stacks.length - 1];\n  }\n  get difficulty(): Difficulty {\n    return this._difficulty;\n  }\n  set difficulty(v: Difficulty) {\n    if (this._difficulty === v) return;\n    const old = this._difficulty;\n    this._difficulty = v;\n    this.callbacks.emit(\"on_difficulty_changed\")(v, old);\n  }\n  get infinity_mp(): boolean {\n    return this._infinity_mp;\n  }\n  set infinity_mp(v: boolean) {\n    if (this._infinity_mp === v) return;\n    this._infinity_mp = v;\n    this.callbacks.emit(\"on_infinity_mp\")(v);\n    if (!v) return;\n    for (const e of this.world.entities) e.mp = e.mp_max;\n  }\n\n  readonly world: World;\n\n  /**\n   * 资源包列表\n   * \n   * \n   * @readonly\n   * @type {IZip[]}\n   * @memberof LF2\n   */\n  readonly zips: IZip[] = [];\n  readonly players: Map<string, PlayerInfo> = new Map([\n    [\"1\", new PlayerInfo(\"1\")],\n    [\"2\", new PlayerInfo(\"2\")],\n    [\"3\", new PlayerInfo(\"3\")],\n    [\"4\", new PlayerInfo(\"4\")],\n    [\"5\", new PlayerInfo(\"5\")],\n    [\"6\", new PlayerInfo(\"6\")],\n    [\"7\", new PlayerInfo(\"7\")],\n    [\"8\", new PlayerInfo(\"8\")],\n  ]);\n\n  get player_characters() {\n    return this.world.slot_fighters;\n  }\n  ensure_player(player_id: string): PlayerInfo {\n    let ret = this.players.get(player_id)\n    if (!ret) this.players.set(player_id, ret = new PlayerInfo(player_id))\n    return ret\n  }\n  readonly characters = new CharactersHelper(this);\n  readonly weapons = new WeaponsHelper(this);\n  readonly entities = new EntitiesHelper(this);\n  readonly balls = new BallsHelper(this);\n  readonly datas: DatMgr;\n  readonly sounds: ISounds;\n  readonly images: ImageMgr;\n  readonly keyboard: IKeyboard;\n  readonly pointings: IPointings;\n\n  get stages(): IStageInfo[] {\n    return this.datas.stages;\n  }\n\n  find_stage(stage_id: string): IStageInfo | undefined {\n    return this.stages.find((v) => v.id === stage_id);\n  }\n\n  readonly bgms: string[] = []\n\n  get_player_character(which: string) {\n    return this.player_characters.get(which)\n  }\n  on_click_character?: (c: Entity) => void;\n\n  protected find_in_zip(paths: string[]): IZipObject | undefined {\n    const len = paths.length;\n    for (let i = 0; i < len; i++) {\n      const idx = i\n      const path = paths[idx];\n      const obj = fisrt(this.zips, (z) => z.file(path));\n      if (!obj) continue;\n      return obj;\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @template C \n   * @param {string} path\n   * @param {boolean} exact 准确匹配\n   * @return {Promise<C>}\n   * @memberof LF2\n   */\n  @PIO\n  async import_json<C = any>(path: string, exact: boolean = true): Promise<[C, HitUrl]> {\n    const paths = exact ? [path] : get_import_fallbacks(path)[0];\n    const zip_obj = this.find_in_zip(paths)\n    if (zip_obj) return [await zip_obj.json<C>(), zip_obj.name];\n    const ret = await Ditto.Importer.import_as_json<C>(paths);\n    return ret;\n  }\n\n  /**\n   * 加载资源\n   *\n   * @param {string} path 资源路径\n   * @param {boolean} exact 准确匹配\n   * @return {Promise<[BlobUrl, HitUrl]>}\n   * @memberof LF2\n   */\n  @PIO async import_resource(path: string, exact: boolean): Promise<[BlobUrl, HitUrl]> {\n    const paths = exact ? [path] : get_import_fallbacks(path)[0];\n    const zip_obj = this.find_in_zip(paths)\n    if (zip_obj) return [await zip_obj.blob_url(), zip_obj.name];\n    return Ditto.Importer.import_as_blob_url(paths);\n  }\n\n  @PIO async import_array_buffer(path: string, exact: boolean): Promise<[ArrayBuffer, HitUrl]> {\n    const paths = exact ? [path] : get_import_fallbacks(path)[0];\n    const zip_obj = this.find_in_zip(paths)\n    if (zip_obj) return [await zip_obj.array_buffer(), zip_obj.name];\n    return Ditto.Importer.import_as_array_buffer(paths);\n  }\n\n  constructor() {\n    make_debugging(this)\n    this.world = new World(this);\n    this.datas = new DatMgr(this);\n    this.sounds = new Ditto.Sounds(this);\n    this.images = new ImageMgr(this);\n    this.keyboard = new Ditto.Keyboard(this);\n    this.keyboard.callback.add(this);\n    this.pointings = new Ditto.Pointings();\n    this.pointings.callback.add(this);\n    this.world.start_update();\n    this.world.start_render();\n    LF2.instances.push(this)\n    this.debug(`constructor`)\n    Ditto.Cache.forget(LF2.DATA_TYPE, LF2.DATA_VERSION).catch(e => { })\n    Ditto.Cache.forget(PlayerInfo.DATA_TYPE, PlayerInfo.DATA_VERSION).catch(e => { })\n  }\n\n  random_entity_info(e: Entity) {\n    const { left: l, right: r, near: n, far: f } = this.world;\n    e.id = new_id();\n    e.facing = this.random_in(0, 100) % 2 ? -1 : 1;\n    e.position.x = this.random_in(l, r);\n    e.position.z = this.random_in(f, n);\n    e.position.y = 550;\n    return e;\n  }\n\n\n  protected get_pointer_intersections(e: IPointingEvent): IIntersection<UINode>[] {\n    if (!this.ui) return [];\n    this._pointer_vec_2.x = e.scene_x;\n    this._pointer_vec_2.y = e.scene_y;\n    this.world.renderer.camera.raycaster(this._pointer_raycaster, this._pointer_vec_2);\n    const intersections = this.ui.renderer.sprite.intersect_from_raycaster(this._pointer_raycaster, true);\n    const ret: IIntersection<UINode>[] = []\n    for (const intersection of intersections) {\n      const ui = intersection.object.get_user_data('owner');\n      if (!(ui instanceof UINode)) continue;\n      if (!ui.visible || ui.disabled) continue;\n      intersection.extra = ui;\n      ret.push(intersection);\n    }\n    return ret;\n  }\n\n\n  on_pointer_move(e: IPointingEvent) {\n    const intersections = this.get_pointer_intersections(e);\n    const leave_ui = this._pointer_on_uis;\n    const stay_ui = new Set<UINode>();\n    const enter_ui = new Set<UINode>();\n    for (const { extra: ui } of intersections) {\n      if (leave_ui.has(ui)) {\n        leave_ui.delete(ui)\n        stay_ui.add(ui)\n      } else {\n        enter_ui.add(ui);\n      }\n    }\n    for (const ui of leave_ui) {\n      ui.on_pointer_leave();\n    }\n    this._pointer_on_uis.clear();\n    for (const ui of enter_ui) {\n      ui.on_pointer_enter();\n      this._pointer_on_uis.add(ui)\n    }\n    for (const ui of stay_ui) {\n      this._pointer_on_uis.add(ui)\n    }\n  }\n  _pointer_down_uis = new Set<UINode>();\n\n  on_pointer_down(e: IPointingEvent) {\n    const intersections = this.get_pointer_intersections(e);\n    for (const i of intersections) {\n      this._pointer_down_uis.add(i.extra)\n      const e = new LF2PointerEvent(i.point);\n      i.extra.on_pointer_down(e);\n      if (e.stopped) break;\n    }\n  }\n\n  on_pointer_up(e: IPointingEvent) {\n    const intersections = this.get_pointer_intersections(e);\n    for (const i of intersections) {\n      if (i.extra.pointer_down) {\n        this._pointer_down_uis.delete(i.extra)\n        const e = new LF2PointerEvent(i.point);\n        i.extra.on_pointer_up(e);\n        if (e.stopped) break;\n      }\n    }\n    for (const i of intersections) {\n      if (i.extra.click_flag) {\n        const e = new LF2PointerEvent(i.point);\n        i.extra.on_click(e);\n        if (e.stopped) break;\n      }\n    }\n\n    for (const i of this._pointer_down_uis) {\n      const e = new LF2PointerEvent(new Ditto.Vector3(NaN, NaN, NaN));\n      i.on_pointer_cancel(e);\n    }\n    this._pointer_down_uis.clear()\n  }\n\n  on_pointer_cancel(e: IPointingEvent) {\n    for (const i of this._pointer_down_uis) {\n      const e = new LF2PointerEvent(new Ditto.Vector3(NaN, NaN, NaN));\n      i.on_pointer_cancel(e);\n    }\n    this._pointer_down_uis.clear()\n  }\n\n  private _curr_key_list: string = \"\";\n  private readonly _CheatType_map = new Map<string, Defines.ICheatInfo>([\n    cheat_info_pair(CheatType.LF2_NET),\n    cheat_info_pair(CheatType.HERO_FT),\n    cheat_info_pair(CheatType.GIM_INK),\n  ]);\n  private readonly _CheatType_enable_map = new Map<string, boolean>();\n  private readonly _cheat_sound_id_map = new Map<string, string>();\n  is_cheat_enabled(name: string | CheatType) {\n    return !!this._CheatType_enable_map.get(\"\" + name);\n  }\n  toggle_cheat_enabled(cheat_name: string | CheatType) {\n    const cheat_info = this._CheatType_map.get(cheat_name);\n    if (!cheat_info) return;\n    const { sound: s } = cheat_info;\n    const sound_id = this._cheat_sound_id_map.get(cheat_name);\n    if (sound_id) this.sounds.stop(sound_id);\n    this.sounds\n      .play_with_load(s)\n      .then((v) => this._cheat_sound_id_map.set(cheat_name, v));\n    const enabled = !this._CheatType_enable_map.get(cheat_name);\n    this._CheatType_enable_map.set(cheat_name, enabled);\n    this.callbacks.emit(\"on_cheat_changed\")(cheat_name, enabled);\n    this._curr_key_list = \"\";\n  }\n  cmds = new Set<string>();\n  on_key_down(e: IKeyEvent) {\n    this.debug('on_key_down', e)\n    const key_code = e.key;\n    const ctrl_down = this.keyboard.is_key_down('control')\n    if (ctrl_down) {\n\n    } else {\n      switch (e.key) {\n        case 'f1': case 'f2': case 'f3': case 'f4': case 'f5':\n        case 'f6': case 'f7': case 'f8': case 'f9': case 'f10':\n          e.interrupt()\n          this.cmds.add(e.key)\n          break;\n      }\n    }\n\n    this._curr_key_list += key_code;\n    let match = false;\n    for (const [cheat_name, { keys: k }] of this._CheatType_map) {\n      if (k.startsWith(this._curr_key_list)) match = true;\n      if (k !== this._curr_key_list) continue;\n      this.toggle_cheat_enabled(cheat_name);\n    }\n    if (!match) this._curr_key_list = \"\";\n    if (e.times === 0) {\n      const { ui } = this;\n      if (ui) {\n        for (const key_name of KEY_NAME_LIST) {\n          for (const [player_id, player_info] of this.players) {\n            if (player_info.keys[key_name] === key_code) {\n              const e = new LF2UIKeyEvent(player_id, key_name, key_code)\n              ui.on_key_down(e);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  on_key_up(e: IKeyEvent) {\n    const key_code = e.key?.toLowerCase() ?? \"\";\n    const { ui } = this;\n    if (ui) {\n      for (const key_name of KEY_NAME_LIST) {\n        for (const [player_id, player_info] of this.players) {\n          if (player_info.keys[key_name] === key_code) {\n            const e = new LF2UIKeyEvent(player_id, key_name)\n            ui.on_key_up(e);\n          }\n        }\n      }\n    }\n  }\n  private on_loading_file(url: string, progress: number, full_size: number) {\n    const txt = `${url}(${get_short_file_size_txt(full_size)})`;\n    this.on_loading_content(txt, progress);\n  }\n\n  protected async load_zip_from_info_url(info_url: string): Promise<IZip> {\n    this._dispose_check('load_zip_from_info_url')\n    this.on_loading_content(`${info_url}`, 0);\n    const [{ url, md5 }] = await Ditto.Importer.import_as_json([info_url]);\n    this._dispose_check('load_zip_from_info_url')\n    const exists = await Ditto.Cache.get(md5);\n    this._dispose_check('load_zip_from_info_url')\n    let ret: IZip | null = null;\n    if (exists) {\n      ret = await Ditto.Zip.read_buf(exists.name, exists.data);\n      this._dispose_check('load_zip_from_info_url')\n    } else {\n      ret = await Ditto.Zip.download(url, (progress, full_size) =>\n        this.on_loading_file(url, progress, full_size),\n      );\n      this._dispose_check('load_zip_from_info_url')\n      await Ditto.Cache.del(info_url, \"\");\n      this._dispose_check('load_zip_from_info_url')\n      await Ditto.Cache.put({\n        name: md5,\n        version: LF2.DATA_VERSION,\n        type: LF2.DATA_TYPE,\n        data: ret.buf,\n      });\n    }\n    this.on_loading_content(`${url}`, 100);\n    return ret;\n  }\n\n  async load(arg1: IZip | string): Promise<void> {\n    const is_first = this.zips.length === 0;\n    this._dispose_check('load')\n    this._loading = true;\n    this.callbacks.emit(\"on_loading_start\")();\n    this.set_ui(\"loading\");\n\n    if (is_first)\n      await this.import_json(\"builtin_data/launch/strings.json\").then(r => this.load_strings(r[0])).catch(e => { })\n\n    try {\n      const zip = is_str(arg1) ? await this.load_zip_from_info_url(arg1) : arg1;\n      await this.load_data(zip);\n      await this.load_ui(zip);\n      if (is_first) {\n        this.set_ui(this.uiinfos[0]!)\n        this.callbacks.emit(\"on_prel_loaded\")();\n      }\n      this._playable = true;\n      this.callbacks.emit(\"on_loading_end\")();\n    } catch (e) {\n      this.callbacks.emit(\"on_loading_failed\")(e);\n      return await Promise.reject(e);\n    } finally {\n      this._loading = false;\n    }\n  }\n  static IgnoreDisposed = (e: any) => {\n    console.warn(e)\n    if (e.is_disposed_error === true) return;\n    throw e;\n  }\n  private _dispose_check = (fn: string) => {\n    if (!this._disposed) return;\n    const error = Object.assign(\n      new Error(`[${LF2.TAG}::${fn}] instance disposed.`),\n      { is_disposed_error: true }\n    )\n    throw error;\n  }\n  private async load_data(zip?: IZip) {\n    this._dispose_check('load_data')\n    if (zip) {\n      await zip.file(\"strings.json\")?.json().then(r => this.load_strings(r))\n      this._dispose_check('load_data')\n      await zip.file(\"strings.json5\")?.json().then(r => this.load_strings(r))\n      this._dispose_check('load_data')\n      this.zips.unshift(zip);\n      this.callbacks.emit(\"on_zips_changed\")(this.zips);\n    }\n    await this.datas.load();\n    this._dispose_check('load_data')\n    for (const d of this.datas.characters) {\n      const name = d.base.name?.toLowerCase() ?? d.type + \"_id_\" + d.id;\n      (this.characters as any)[`add_${name}`] = (num = 1, team = void 0) =>\n        this.characters.add(d, num, team);\n      (this.entities as any)[`add_${name}`] = (num = 1, team_1 = void 0) =>\n        this.characters.add(d, num, team_1);\n    }\n    for (const d of this.datas.weapons) {\n      const name = d.base.name?.toLowerCase() ?? d.type + \"_id_\" + d.id;\n      (this.weapons as any)[`add_${name}`] = (num = 1, team_1 = void 0) =>\n        this.weapons.add(d, num, team_1);\n      (this.entities as any)[`add_${name}`] = (num = 1, team_1 = void 0) =>\n        this.weapons.add(d, num, team_1);\n    }\n    for (const d of this.datas.balls) {\n      const name = d.base.name?.toLowerCase() ?? d.type + \"_id_\" + d.id;\n      (this.entities as any)[`add_${name}`] = (num = 1, team_1 = void 0) =>\n        this.entities.add(d, num, team_1);\n    }\n    for (const d of this.datas.entity) {\n      const name = d.base.name?.toLowerCase() ?? d.type + \"_id_\" + d.id;\n      (this.entities as any)[`add_${name}`] = (num = 1, team_1 = void 0) =>\n        this.entities.add(d, num, team_1);\n    }\n    if (zip) {\n      const bgms = zip.file(/bgm\\/.*?/)\n      for (const bgm of bgms) {\n        this.bgms.some(v => v === bgm.name) ||\n          this.bgms.push(bgm.name)\n      }\n    }\n  }\n  dispose() {\n    this.debug('dispose')\n    this._disposed = true;\n    this.callbacks.emit(\"on_dispose\")();\n    this.callbacks.clear()\n    this.world.dispose();\n    this.datas.dispose();\n    this.sounds.dispose();\n    this.images.dispose();\n    this.keyboard.dispose();\n    this.pointings.dispose();\n\n    for (const l of this._ui_stacks) {\n      l?.on_pause();\n      l?.on_stop();\n    }\n    this._ui_stacks.length = 0;\n\n    const i = LF2.instances.indexOf(this);\n    if (i >= 0) LF2.instances.splice(i, 1);\n  }\n\n  add_player_character(player_id: string, character_id: string) {\n    const player_info = this.players.get(player_id);\n    if (!player_info) { debugger; return; }\n\n    const data = this.datas.characters.find((v) => v.id === character_id);\n    if (!data) { debugger; return; }\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let vx = 0;\n    let vy = 0;\n    let vz = 0;\n    let old_facing: TFace = 1;\n    let old_frame_id: string = Builtin_FrameId.Auto;\n    const old = this.player_characters.get(player_id);\n    if (old) {\n      x = old.position.x;\n      y = old.position.y;\n      z = old.position.z;\n      vx = old.velocity_0.x;\n      vy = old.velocity_0.y;\n      vz = old.velocity_0.z;\n      old_facing = old.facing;\n      old_frame_id = old.frame.id;\n      this.world.del_entity(old);\n    }\n\n    const character = new Entity(this.world, data);\n    character.id = old?.id ?? new_id();\n    character.position.x = x;\n    character.position.y = y;\n    character.position.z = z;\n    character.velocity_0.x = vx;\n    character.velocity_0.y = vy;\n    character.velocity_0.z = vz;\n    character.facing = old_facing;\n    character.name = player_info.name;\n    character.team = player_info.team ?? new_team();\n    character.enter_frame({ id: old_frame_id });\n    if (!old) {\n      this.random_entity_info(character);\n    }\n    character.ctrl = new LocalController(\n      player_id,\n      character,\n      player_info?.keys,\n    );\n    character.attach();\n    return character;\n  }\n  del_player_character(player_id: string) {\n    const old = this.player_characters.get(player_id);\n    if (old) this.world.del_entity(old);\n  }\n  change_bg(bg_info: IBgData): void;\n  change_bg(bg_id: string): void;\n  change_bg(arg: IBgData | string | undefined) {\n    if (!arg) return;\n    if (arg === Defines.RANDOM_BG || arg === Defines.RANDOM_BG.id || arg === '?')\n      arg = this.random_get(this.datas.backgrounds.filter(v => v.base.group.some(a => a === BackgroundGroup.Regular)))\n    if (is_str(arg)) arg = this.datas.find_background(arg);\n    if (!arg) return;\n    this.world.stage.change_bg(arg);\n  }\n  remove_bg = () => this.remove_stage();\n\n  change_stage(stage_info: IStageInfo): void;\n  change_stage(stage_id: string): void;\n  change_stage(arg: IStageInfo | string | undefined): void {\n    if (arg === this.world.stage.data) return;\n    if (is_str(arg)) arg = this.stages?.find((v) => v.id === arg);\n    if (!arg) return;\n    this.world.stage = new Stage(this.world, arg);\n  }\n  remove_stage() {\n    this.world.stage = new Stage(this.world, Defines.VOID_STAGE);\n  }\n\n  goto_next_stage() {\n    const next = this.world.stage.data.next;\n    const next_stage = this.stages?.find((v) => v.id === next);\n    if (!next_stage) {\n      this.world.stage.stop_bgm();\n      this.sounds.play_with_load(Defines.Sounds.StagePass);\n      this.callbacks.emit(\"on_stage_pass\")();\n    }\n    this.change_stage(next_stage || Defines.VOID_STAGE);\n    this.callbacks.emit(\"on_enter_next_stage\")();\n  }\n\n  private _uiinfos_loaded = false;\n  private _uiinfos: Readonly<ICookedUIInfo>[] = [];\n  get uiinfos(): readonly ICookedUIInfo[] {\n    return this._uiinfos;\n  }\n  get uiinfos_loaded() {\n    return this._uiinfos_loaded;\n  }\n\n  protected _uiinfo_map = new Map<string, IUIInfo>();\n  protected _strings = new Map<string, { [x in string]?: string }>()\n  string(name: string): string {\n    return (\n      this._strings.get(this.lang)?.[name] ??\n      this._strings.get(\"\")?.[name] ?? name\n    )\n  }\n  load_strings(strings: any) {\n    const collection_pointers: [string, string][] = []\n    for (const key in strings) {\n      const collection = strings[key];\n      if (typeof collection === 'string' && collection !== key)\n        collection_pointers.push([key, collection]);\n      else if (typeof collection === 'object') {\n        for (const key in collection) {\n          const v = collection[key]\n          if (Array.isArray(v))\n            collection[key] = v.join('\\n')\n        }\n        const prev = this._strings.get(key)\n        if (prev) this._strings.set(key, { ...collection, ...prev });\n        else this._strings.set(key, collection)\n      }\n    }\n    for (let i = 0; i < collection_pointers.length; i++) {\n      const [a, b] = collection_pointers[i];\n      const collection = this._strings.get(b)\n      if (!collection) continue;\n      this._strings.set(a, { ...collection });\n      collection_pointers.splice(i, 1);\n      --i\n    }\n  }\n\n  protected async load_builtin_ui(): Promise<ICookedUIInfo[]> {\n\n    this._dispose_check('load_builtin_ui')\n    const ret: ICookedUIInfo[] = []\n    const paths: string[] = [\n      \"builtin_data/launch/bg.json5\",\n      \"builtin_data/launch/loading_anim.json\",\n      \"builtin_data/launch/main_text_button.json\",\n      \"builtin_data/launch/menu_text_button.json\",\n      \"builtin_data/launch/init.json5\",\n    ];\n    for (const path of paths) {\n      const cooked_ui_info = await cook_ui_info(this, path);\n      this._dispose_check('load_builtin_ui')\n      ret.unshift(cooked_ui_info);\n    }\n    return ret\n  }\n\n  async load_ui(zip: IZip): Promise<ICookedUIInfo[]> {\n    this._dispose_check('load_ui')\n    if (this._uiinfos.length) return this._uiinfos;\n\n    this._uiinfos_loaded = false;\n    const files = zip.file(/^layouts\\/.*?\\.json5?$/)\n    const ret: ICookedUIInfo[] = []\n    if (!this._uiinfos.length) {\n      ret.unshift(...await this.load_builtin_ui())\n      this._dispose_check('load_ui')\n    }\n    for (const file of files) {\n      const json = await file.json().catch(() => null);\n      this._dispose_check('load_ui')\n      if (!json || Array.isArray(json)) continue;\n      const cooked_ui_info = await cook_ui_info(this, json);\n      ret.push(cooked_ui_info);\n    }\n    if (this._disposed) {\n      this._uiinfos.length = 0;\n      return this._uiinfos = [];\n    } else {\n      this._uiinfos_loaded = true;\n      this._uiinfos.push(...ret)\n      this.callbacks.emit(\"on_ui_loaded\")(ret);\n      return ret;\n    }\n  }\n\n  ui_val_getter = (item: UINode, word: string) => {\n    if (word === \"mouse_on_me\") return '' + item.pointer_on_me;\n    if (word === \"pointer_on_me\") return '' + item.pointer_on_me;\n    if (word === \"paused\") return this.world.paused ? 1 : 0;\n    return word;\n  };\n\n  set_ui(ui_info?: ICookedUIInfo): void;\n  set_ui(id?: string): void;\n  set_ui(arg: string | ICookedUIInfo | undefined): void {\n    if (is_str(arg) && this.ui?.id === arg) return;\n    if (!is_str(arg) && this.ui?.id === arg?.id) return;\n\n    const prev = this._ui_stacks.pop();\n    prev?.on_pause();\n    prev?.on_stop();\n    const info = is_str(arg)\n      ? this._uiinfos?.find((v) => v.id === arg)\n      : arg;\n    const curr = info && UINode.create(this, info);\n    curr && this._ui_stacks.push(curr);\n    curr?.on_start();\n    curr?.on_resume();\n    this.callbacks.emit(\"on_layout_changed\")(curr, prev);\n  }\n\n  pop_ui(inclusive?: boolean, until?: (ui: UINode, index: number, stack: UINode[]) => boolean): void {\n    const poppeds: UINode[] = []\n    const len = this._ui_stacks.length\n    for (let i = len - 1; i >= 0; --i) {\n      const ui = this._ui_stacks[i]\n      if (until) {\n        if (until(ui, i, this._ui_stacks)) {\n          if (inclusive) {\n            poppeds.unshift(ui)\n          }\n          break;\n        }\n        poppeds.unshift(ui)\n      } else {\n        poppeds.unshift(ui);\n        break;\n      }\n    }\n    for (let i = 0; i < poppeds.length; i++) {\n      const popped = poppeds[i];\n      if (i === 0) popped?.on_pause();\n      popped?.on_stop();\n    }\n    this._ui_stacks.splice(len - poppeds.length, poppeds.length)\n    this.ui?.on_resume();\n    this.callbacks.emit(\"on_layout_changed\")(this.ui, poppeds[0]);\n  }\n\n  push_ui(layout_info?: ICookedUIInfo): void;\n  push_ui(id?: string): void;\n  push_ui(arg: string | ICookedUIInfo | undefined): void {\n    const prev = this.ui;\n    prev?.on_pause();\n\n    const info = is_str(arg)\n      ? this._uiinfos?.find((v) => v.id === arg)\n      : arg;\n    const curr = info && UINode.create(this, info);\n    curr && this._ui_stacks.push(curr);\n    curr?.on_start();\n    curr?.on_resume();\n    this.callbacks.emit(\"on_layout_changed\")(curr, prev);\n  }\n\n  on_loading_content(content: string, progress: number) {\n    this.callbacks.emit(\"on_loading_content\")(content, progress);\n  }\n\n  broadcast(message: string): void {\n    this.callbacks.emit(\"on_broadcast\")(message);\n  }\n  on_component_broadcast(component: UIComponent, message: string) {\n    this.callbacks.emit(\"on_component_broadcast\")(component, message);\n  }\n  switch_difficulty(): void {\n    const { difficulty } = this;\n    const max = this.is_cheat_enabled(CheatType.LF2_NET) ? 4 : 3;\n    const next = (difficulty % max) + 1;\n    this.difficulty = next;\n  }\n\n  random_get<T>(a: T | T[] | undefined): T | undefined {\n    if (!a || !Array.isArray(a)) return a\n    return a[this.random_in(0, a.length)]\n  }\n  random_take<T>(a: T | T[] | undefined): T | undefined {\n    if (!a || !Array.isArray(a)) return a\n    return a.splice(this.random_in(0, a.length), 1)[0]\n  }\n  random_in(l: number, r: number) {\n    return this._mt.in_range(l, r);\n  }\n  random_int() {\n    return this._mt.int();\n  }\n}\n(window as any).LF2 = LF2;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styles from \"./App.module.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport class LoadingImg {\r\n  private tid = 0;\r\n  private img: HTMLImageElement | null = null;\r\n  private _visible: boolean = true;\r\n  private _idx = 0\r\n  readonly w: number;\r\n  readonly h: number;\r\n  set visible(v: boolean) {\r\n    this._visible = v;\r\n    if (this.img) this.img.style.opacity = v ? \"1\" : \"0\"\r\n  }\r\n  get visible() { return this._visible }\r\n  constructor(w = 132, h = 84) {\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n  set_element(img: HTMLImageElement | null) {\r\n    if (this.img === img) return;\r\n    this.img = img;\r\n    if (!img) return;\r\n    img.style.objectPosition = \"0px 0px\";\r\n    img.draggable = false;\r\n    img.style.left = img.style.right = img.style.top = img.style.bottom = \"0\";\r\n    img.style.opacity = this._visible ? \"1\" : \"0\"\r\n    this.update_img();\r\n  }\r\n  protected update_img() {\r\n    const { img } = this;\r\n    if (!img) return;\r\n    const x = -this.w * (this._idx % 15);\r\n    const y = -this.h * Math.floor(this._idx / 15);\r\n    img.style.objectPosition = `${x}px ${y}px`;\r\n  }\r\n  protected start() {\r\n    const update = () => {\r\n      window.clearTimeout(this.tid);\r\n      this._idx = (this._idx + 1) % 44;\r\n      this.update_img();\r\n      const t = this._idx === 21 ? 1000 : 30\r\n      if (this.visible || this._idx !== 43) this.tid = window.setTimeout(update, t);\r\n    };\r\n    update();\r\n  }\r\n\r\n  hide() {\r\n    this.visible = false;\r\n  }\r\n\r\n  show() {\r\n    this.visible = true;\r\n    this.start()\r\n  }\r\n}\r\n\r\n\r\nexport interface ILoadingProps extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'loading'> {\r\n  loading?: boolean;\r\n  big?: boolean;\r\n}\r\nexport function Loading(props: ILoadingProps) {\r\n  const { loading, big = false, className, ..._p } = props;\r\n  const logic = useMemo(() => new LoadingImg(33 * (big ? 4 : 1), 21 * (big ? 4 : 1)), [big])\r\n\r\n  useEffect(() => {\r\n    loading ? logic.show() : logic.hide();\r\n  }, [loading]);\r\n\r\n  const class_name = classNames(className, big ? styles.loading_img_l : styles.loading_img_s)\r\n  return (\r\n    <img\r\n      src={\r\n        big ?\r\n          \"builtin_data/launch/SMALL_LOADING@4x.png\" :\r\n          \"builtin_data/launch/SMALL_LOADING.png\"\r\n      }\r\n      alt=\"loading...\"\r\n      className={class_name}\r\n      ref={r => logic.set_element(r)}\r\n      {..._p} />\r\n  )\r\n}","import { useEffect, useMemo, useState } from \"react\";\r\nimport type { LF2 } from \"../LF2/LF2\";\r\nimport { EntityGroup } from \"../LF2/defines\";\r\nimport { type IEntityData } from \"../LF2/defines/IEntityData\";\r\nimport { is_str } from \"../LF2/utils/type_check\";\r\nimport Select, { ISelectProps } from \"./Select\";\r\n\r\nexport interface CharacterSelectProps\r\n  extends Omit<ISelectProps<IEntityData | \"\", string>, 'parse'> {\r\n  lf2: LF2;\r\n  show_all?: boolean;\r\n}\r\nexport default function CharacterSelect(props: CharacterSelectProps) {\r\n  const { lf2, disabled, show_all = false, placeholder, ..._p } = props;\r\n  const [characters, set_characters] = useState<IEntityData[]>(\r\n    lf2.datas.characters,\r\n  );\r\n\r\n  useEffect(() => {\r\n    set_characters(lf2.datas.characters);\r\n    return lf2.callbacks.add({\r\n      on_loading_end: () => set_characters(lf2.datas.characters),\r\n    });\r\n  }, [lf2]);\r\n\r\n  const items = useMemo(\r\n    () =>\r\n      show_all\r\n        ? characters\r\n        : characters.filter((v) => {\r\n          const r = v.base.group?.indexOf(EntityGroup.Hidden);\r\n          return r === void 0 || r === -1;\r\n        }),\r\n    [characters, show_all],\r\n  );\r\n\r\n  return (\r\n    <Select\r\n      items={[\"\", ...items]}\r\n      disabled={!characters?.length || disabled}\r\n      parse={(i) => is_str(i) ? [\"\", \"Random\"] : [i.id, i.base.name]}\r\n      placeholder={items.length ? placeholder : \"未加载\"}\r\n      {..._p}\r\n    />\r\n  );\r\n}\r\n","import { Defines } from \"../LF2/defines/defines\";\r\nimport Select, { ISelectProps } from \"./Select\";\r\nexport interface TeamSelectProps extends Omit<ISelectProps<Defines.TeamEnum, string>, 'parse'> { }\r\nexport default function TeamSelect(props: TeamSelectProps) {\r\n  return (\r\n    <Select\r\n      {...props}\r\n      items={Defines.Teams}\r\n      parse={(i) => [i, Defines.TeamInfoMap[i].i18n]}\r\n    />\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"./App.module.scss\";\r\nimport { Button } from \"./Component/Buttons/Button\";\r\nimport { ToggleButton } from \"./Component/Buttons/ToggleButton\";\r\nimport CharacterSelect from \"./Component/CharacterSelect\";\r\nimport Combine from \"./Component/Combine\";\r\nimport { Input } from \"./Component/Input\";\r\nimport Select from \"./Component/Select\";\r\nimport Show from \"./Component/Show\";\r\nimport TeamSelect from \"./Component/TeamSelect\";\r\nimport Titled from \"./Component/Titled\";\r\nimport { DummyEnum } from \"./LF2/bot/DummyEnum\";\r\nimport LocalController from \"./LF2/controller/LocalController\";\r\nimport { CheatType } from \"./LF2/defines\";\r\nimport { GameKey } from \"./LF2/defines/GameKey\";\r\nimport { Factory } from \"./LF2/entity/Factory\";\r\nimport { is_bot_ctrl, is_local_ctrl } from \"./LF2/entity/type_check\";\r\nimport { LF2 } from \"./LF2/LF2\";\r\nimport { PlayerInfo } from \"./LF2/PlayerInfo\";\r\nimport { random_get } from \"./LF2/utils/math/random\";\r\nconst key_names: Record<GameKey, string> = {\r\n  U: \"上\",\r\n  D: \"下\",\r\n  L: \"左\",\r\n  R: \"右\",\r\n  a: \"攻\",\r\n  j: \"跳\",\r\n  d: \"防\",\r\n};\r\nconst key_name_arr = Object.keys(key_names) as GameKey[];\r\ninterface Props {\r\n  lf2: LF2;\r\n  visible?: boolean;\r\n  info: PlayerInfo;\r\n  touch_pad_on?: boolean;\r\n  on_click_toggle_touch_pad?(): void;\r\n}\r\nexport function PlayerRow(props: Props) {\r\n  const {\r\n    lf2,\r\n    info,\r\n    visible = true,\r\n    touch_pad_on,\r\n    on_click_toggle_touch_pad,\r\n  } = props;\r\n\r\n  const [keys, set_keys] = useState<Record<GameKey, string>>(info.keys);\r\n  const [player_name, set_player_name] = useState<string>(info.name);\r\n  const [editing_key, set_editing_key] = useState<GameKey | undefined>();\r\n\r\n  const [team, set_team] = useState<string>(info.team);\r\n  const [show_hidden, set_show_hidden] = useState<boolean>(false);\r\n  const [character_id, set_character_id] = useState<string>(info.character);\r\n  const [added, set_added] = useState(!!lf2.get_player_character(info.id));\r\n  const [key_settings_show, set_key_settings_show] = useState(false);\r\n\r\n  const [dummy, set_dummy] = useState<DummyEnum | undefined | \"\">(\"\")\r\n\r\n  useEffect(() => {\r\n    const ctrl = lf2.player_characters.get(info.id)?.ctrl;\r\n    if (is_bot_ctrl(ctrl)) {\r\n      ctrl.dummy = dummy ? dummy : void 0;\r\n    }\r\n  }, [dummy, info.id, lf2.player_characters])\r\n\r\n  useEffect(() => {\r\n    set_show_hidden(lf2.is_cheat_enabled(\"\" + CheatType.LF2_NET));\r\n    return lf2.callbacks.add({\r\n      on_cheat_changed: (name, enabled) => {\r\n        if (name === \"\" + CheatType.LF2_NET) set_show_hidden(enabled);\r\n      },\r\n    });\r\n  }, [lf2]);\r\n\r\n  useEffect(() => {\r\n    set_keys(info.keys);\r\n    set_player_name(info.name);\r\n    return info.callbacks.add({\r\n      on_key_changed: (name, key) => {\r\n        set_keys((v) => {\r\n          const ks = { ...v, [name]: key };\r\n          const character = lf2.get_player_character(info.id);\r\n          if (character && is_local_ctrl(character.ctrl))\r\n            character.ctrl.set_key_code_map(ks);\r\n          return ks;\r\n        });\r\n      },\r\n      on_name_changed: (name) => {\r\n        set_player_name(name);\r\n        const character = lf2.get_player_character(info.id);\r\n        if (character) character.name = name;\r\n      },\r\n      on_team_changed: (team) => {\r\n        set_team(team);\r\n        const character = lf2.get_player_character(info.id);\r\n        if (character) character.team = team;\r\n      },\r\n      on_character_changed: set_character_id,\r\n    });\r\n  }, [info, lf2]);\r\n\r\n  useEffect(() => {\r\n    if (!editing_key) return;\r\n    const on_keydown = (e: KeyboardEvent) => {\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      const key = e.key?.toLocaleLowerCase();\r\n      if (key && key !== \"escape\") {\r\n        info.set_key(editing_key, e.key.toLowerCase(), true).save();\r\n      }\r\n      set_editing_key(void 0);\r\n    };\r\n    window.addEventListener(\"keydown\", on_keydown, true);\r\n    return () => window.removeEventListener(\"keydown\", on_keydown, true);\r\n  }, [editing_key, info]);\r\n\r\n  if (!lf2 || visible === false) return null;\r\n\r\n  const on_click_add = added\r\n    ? () => {\r\n      lf2.del_player_character(info.id); // 移除玩家对应的角色\r\n    }\r\n    : () => {\r\n      const real_character_id =\r\n        character_id || random_get(lf2.datas.characters)?.id;\r\n      if (!real_character_id) {\r\n        debugger;\r\n        return;\r\n      }\r\n      const character = lf2.add_player_character(info.id, real_character_id);\r\n      if (!character) {\r\n        debugger;\r\n        return;\r\n      }\r\n      set_added(true);\r\n      character.callbacks.add({\r\n        on_disposed: () => set_added(false),\r\n        on_team_changed: (_, team) => set_team(\"\" + team),\r\n      });\r\n    };\r\n\r\n\r\n  return (\r\n    <div className={styles.settings_row}>\r\n      <Titled float_label={\"玩家\" + info.id}>\r\n        <Combine>\r\n          <Input\r\n            prefix=\"名称\"\r\n            clearable\r\n            maxLength={50}\r\n            title=\"enter player name\"\r\n            value={player_name}\r\n            onChange={(e) => info.set_name(e, true)}\r\n            onBlur={(e) => info.set_name(e.target.value.trim() || info.id, true).save()}\r\n          />\r\n          <CharacterSelect\r\n            lf2={lf2}\r\n            value={character_id}\r\n            placeholder=\"角色\"\r\n            onChange={(v) => info.set_character(v!, true).save()}\r\n            show_all={show_hidden}\r\n          />\r\n          <TeamSelect\r\n            placeholder=\"队伍\"\r\n            value={team}\r\n            onChange={(v) => info.set_team(v!, true).save()}\r\n          />\r\n          <Button onClick={on_click_add}>{added ? \"移除\" : \"加入\"}</Button>\r\n          <ToggleButton value={touch_pad_on} onClick={on_click_toggle_touch_pad}>\r\n            <>触摸板</>\r\n            <>触摸板✓</>\r\n          </ToggleButton>\r\n        </Combine>\r\n      </Titled>\r\n      <Combine>\r\n        <Button onClick={() => set_key_settings_show((v) => !v)}>键位</Button>\r\n        {!key_settings_show\r\n          ? null\r\n          : key_name_arr.map((k) => {\r\n            const on_click = () =>\r\n              set_editing_key((v) => (v === k ? void 0 : k));\r\n            const name = key_names[k];\r\n            const value = editing_key === k ? \"编辑中...\" : keys[k];\r\n            return (\r\n              <Button key={k} onClick={on_click}>\r\n                {name}:{\" \"}\r\n                {{\r\n                  ARROWUP: \"↑\",\r\n                  ARROWDOWN: \"↓\",\r\n                  ARROWLEFT: \"←\",\r\n                  ARROWRIGHT: \"→\",\r\n                  DELETE: \"DEL\",\r\n                  PAGEDOWN: \"P↓\",\r\n                  PAGEUP: \"P↑\",\r\n                }[value.toUpperCase()] || value.toUpperCase()}\r\n              </Button>\r\n            );\r\n          })}\r\n      </Combine>\r\n      <Show show={added}>\r\n        <Combine>\r\n          <Button\r\n            onClick={() => {\r\n              const character = lf2.player_characters.get(info.id);\r\n              if (!character) return;\r\n              const ctrl = character.ctrl;\r\n              if (is_bot_ctrl(ctrl)) {\r\n                character.ctrl = new LocalController(\r\n                  info.id,\r\n                  character,\r\n                  info.keys,\r\n                );\r\n              } else {\r\n                character.ctrl = Factory.inst.get_ctrl(character.data.id, info.id, character);\r\n              }\r\n              ctrl?.dispose();\r\n            }}>\r\n            <>Bot</>\r\n          </Button>\r\n          <Select\r\n            items={[\"\", ...Object.keys(DummyEnum)]}\r\n            parse={(k) => k ? [(DummyEnum as any)[k], k] : [\"\", \"not dummy\"]}\r\n            value={dummy}\r\n            onChange={set_dummy}\r\n          />\r\n        </Combine>\r\n      </Show>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n","export interface NumberProperty extends PropertyDescriptor {\n  type: 'number';\n  name: string;\n  default_value: number;\n}\nexport interface StringProperty extends PropertyDescriptor {\n  type: 'string';\n  name: string;\n  default_value: string;\n}\nexport interface BooleanProperty extends PropertyDescriptor {\n  type: 'boolean';\n  name: string;\n  default_value: boolean;\n}\nexport type TProperty = NumberProperty | StringProperty | BooleanProperty;\nexport function list_writable_properties(prototype: any, ret: TProperty[] = []) {\n  const obj = Object.getOwnPropertyDescriptors(prototype);\n  for (const name in obj) {\n    if (name.startsWith(\"_\")) continue;\n    const desc = obj[name];\n    const { value, writable, enumerable, set, get } = desc;\n    let default_value: any;\n    if (set && get)\n      default_value = get.call(prototype)\n    else if (writable && enumerable)\n      default_value = value;\n    if (typeof default_value === 'number')\n      ret.push({ name, type: 'number', default_value, ...desc });\n    if (typeof default_value === 'string')\n      ret.push({ name, type: 'string', default_value, ...desc });\n    if (typeof default_value === 'boolean')\n      ret.push({ name, type: 'boolean', default_value, ...desc });\n  }\n  prototype = Object.getPrototypeOf(prototype);\n  if (prototype.constructor.name !== \"Object\") {\n    list_writable_properties(prototype, ret);\n  }\n  return ret;\n}","import { useEffect, useState } from \"react\";\r\nimport {\r\n  is_str,\r\n  is_fun,\r\n  is_num,\r\n  is_bool,\r\n  is_non_empty_str,\r\n} from \"./LF2/utils/type_check\";\r\n\r\ntype T_RET<S> = readonly [S, React.Dispatch<React.SetStateAction<S>>];\r\ntype T_IN<S> = S | (() => S);\r\nconst __clear_flag = \"1001\";\r\nif (localStorage.getItem(\"__clear_flag\") !== __clear_flag) {\r\n  localStorage.clear();\r\n  localStorage.setItem(\"__clear_flag\", __clear_flag);\r\n}\r\nexport function useLocalString<S extends string = string>(\r\n  name: string,\r\n): T_RET<S | undefined>;\r\nexport function useLocalString<S extends string = string>(\r\n  name: string,\r\n  initialState: T_IN<S>,\r\n): T_RET<S>;\r\nexport function useLocalString<S extends string = string>(\r\n  name: string,\r\n  initialState?: T_IN<S>,\r\n): T_RET<S> | T_RET<S | undefined> {\r\n  const [val, set_val] = useState<S | undefined>(() => {\r\n    let v = localStorage.getItem(name);\r\n    if (is_str(v)) return v as S;\r\n    const ret = is_str(initialState)\r\n      ? initialState\r\n      : is_fun(initialState)\r\n        ? initialState()\r\n        : void 0;\r\n    if (is_str(ret)) localStorage.setItem(name, ret);\r\n    return ret as S;\r\n  });\r\n  useEffect(() => {\r\n    if (is_str(val)) localStorage.setItem(name, val);\r\n    else localStorage.removeItem(name);\r\n  }, [name, val]);\r\n  return [val, set_val];\r\n}\r\n\r\nexport function useLocalNumber<S extends number = number>(\r\n  name: string,\r\n): T_RET<S | undefined>;\r\nexport function useLocalNumber<S extends number = number>(\r\n  name: string,\r\n  initialState: T_IN<S>,\r\n): T_RET<S>;\r\nexport function useLocalNumber<S extends number = number>(\r\n  name: string,\r\n  initialState?: T_IN<S>,\r\n): T_RET<S> | T_RET<S | undefined> {\r\n  const [val, set_val] = useState<S | undefined>(() => {\r\n    let v = localStorage.getItem(name);\r\n    if (is_non_empty_str(v)) {\r\n      const n = Number(v);\r\n      if (is_num(n)) return n as S;\r\n    }\r\n    const ret = is_num(initialState)\r\n      ? initialState\r\n      : is_fun(initialState)\r\n        ? initialState()\r\n        : void 0;\r\n    if (is_num(ret)) localStorage.setItem(name, \"\" + ret);\r\n    return ret as S;\r\n  });\r\n  useEffect(() => {\r\n    if (is_num(val)) localStorage.setItem(name, \"\" + val);\r\n    else localStorage.removeItem(name);\r\n  }, [name, val]);\r\n  return [val, set_val];\r\n}\r\n\r\nexport function useLocalBoolean(name: string): T_RET<boolean | undefined>;\r\nexport function useLocalBoolean(\r\n  name: string,\r\n  initialState: T_IN<boolean>,\r\n): T_RET<boolean>;\r\nexport function useLocalBoolean(\r\n  name: string,\r\n  initialState?: T_IN<boolean>,\r\n): T_RET<boolean> | T_RET<boolean | undefined> {\r\n  const [val, set_val] = useState<boolean | undefined>(() => {\r\n    let v = localStorage.getItem(name);\r\n    if (is_str(v)) return v === \"true\";\r\n    const ret = is_bool(initialState)\r\n      ? initialState\r\n      : is_fun(initialState)\r\n        ? initialState()\r\n        : void 0;\r\n    if (is_bool(ret)) localStorage.setItem(name, \"\" + ret);\r\n    return ret as boolean;\r\n  });\r\n  useEffect(() => {\r\n    if (is_bool(val)) {\r\n      localStorage.setItem(name, \"\" + val);\r\n    } else {\r\n      localStorage.removeItem(name);\r\n    }\r\n  }, [name, val]);\r\n  return [val, set_val];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"./App.module.scss\";\r\nimport { Button } from \"./Component/Buttons/Button\";\r\nimport CharacterSelect from \"./Component/CharacterSelect\";\r\nimport Combine from \"./Component/Combine\";\r\nimport { Cross } from \"./Component/Icons/Cross\";\r\nimport { InputRef } from \"./Component/Input\";\r\nimport { InputNumber } from \"./Component/Input\";\r\nimport Select from \"./Component/Select\";\r\nimport Show from \"./Component/Show\";\r\nimport TeamSelect from \"./Component/TeamSelect\";\r\nimport Titled from \"./Component/Titled\";\r\nimport { IWorldDataset } from \"./LF2/IWorldDataset\";\r\nimport { LF2 } from \"./LF2/LF2\";\r\nimport { BotController } from \"./LF2/bot/BotController\";\r\nimport { BaseController } from \"./LF2/controller/BaseController\";\r\nimport { InvalidController } from \"./LF2/controller/InvalidController\";\r\nimport { Defines, Difficulty, IStageInfo, IStagePhaseInfo } from \"./LF2/defines\";\r\nimport { Entity } from \"./LF2/entity/Entity\";\r\nimport { Stage } from \"./LF2/stage/Stage\";\r\nimport { list_writable_properties, TProperty } from \"./LF2/utils/list_writable_properties\";\r\nimport { is_num } from \"./LF2/utils/type_check\";\r\nimport { useLocalNumber, useLocalString } from \"./useLocalStorage\";\r\nconst bot_controllers: { [x in string]?: (e: Entity) => BaseController } = {\r\n  OFF: (e: Entity) => new InvalidController(\"\", e),\r\n  \"enemy chaser\": (e: Entity) => new BotController(\"\", e),\r\n};\r\n\r\nexport interface ISettingsRowsProps {\r\n  lf2?: LF2;\r\n  visible?: boolean;\r\n  show_stage_settings?: boolean;\r\n  show_bg_settings?: boolean;\r\n  show_weapon_settings?: boolean;\r\n  show_bot_settings?: boolean;\r\n  show_world_tuning?: boolean;\r\n}\r\n\r\nexport default function SettingsRows(props: ISettingsRowsProps) {\r\n  const { lf2, visible = true } = props;\r\n  const _stage = lf2?.world.stage;\r\n  const _stage_data = _stage?.data;\r\n\r\n  const [stage_list, set_stage_list] = useState<IStageInfo[]>();\r\n  const [bg_id, set_bg_id] = useState(Defines.VOID_BG.id);\r\n  const [stage_id, set_stage_id] = useState(Defines.VOID_STAGE.id);\r\n\r\n  const [bgm, set_bgm] = useState<string>(lf2?.sounds.bgm() ?? \"\");\r\n  const [stage_phase_list, set_stage_phases] = useState<IStagePhaseInfo[]>(\r\n    _stage_data?.phases ?? [],\r\n  );\r\n  const [stage_phase_idx, set_stage_phase_idx] = useState<number>(\r\n    _stage?.phase_idx ?? -1,\r\n  );\r\n  const [difficulty, set_difficulty] = useState<Difficulty>(\r\n    lf2?.difficulty ?? Difficulty.Difficult,\r\n  );\r\n  const [world_properties, set_world_properties] = useState<TProperty[]>();\r\n  useEffect(() => {\r\n    set_bgm(lf2?.sounds.bgm() ?? \"\");\r\n    set_difficulty(lf2?.difficulty ?? Difficulty.Difficult);\r\n    set_stage_list(lf2?.stages);\r\n    const on_stage_change = (stage: Stage | undefined) => {\r\n      set_stage_id(stage?.data.id ?? Defines.VOID_STAGE.id);\r\n      set_bg_id(stage?.bg.data.id ?? Defines.VOID_BG.id);\r\n      set_stage_phases(stage?.data.phases ?? []);\r\n      set_stage_phase_idx(stage?.phase_idx ?? -1);\r\n      stage?.callbacks.add({\r\n        on_phase_changed(stage, curr) {\r\n          set_stage_phase_idx(curr ? stage.data.phases.indexOf(curr) : -1);\r\n        },\r\n      });\r\n    };\r\n    on_stage_change(lf2?.world.stage);\r\n\r\n    if (!lf2) return;\r\n    const a = [\r\n      lf2.callbacks.add({\r\n        on_difficulty_changed: set_difficulty,\r\n        on_loading_end: () => set_stage_list(lf2.stages),\r\n      }),\r\n      lf2.world.callbacks.add({ on_stage_change }),\r\n    ];\r\n\r\n    const ppp = list_writable_properties(lf2.world)\r\n    set_world_properties(ppp);\r\n    return () => a.forEach((b) => b());\r\n  }, [lf2]);\r\n\r\n  useEffect(() => {\r\n    if (!lf2) return;\r\n    if (!bgm) lf2.sounds.stop_bgm();\r\n    else lf2.sounds.play_bgm(bgm);\r\n  }, [bgm, lf2]);\r\n\r\n  const min_rwn = 1;\r\n  const max_rwn = 100;\r\n  const [rwn, set_rwn] = useLocalNumber<number>(\"debug_rwn\", 10);\r\n\r\n  const min_rcn = 1;\r\n  const max_rcn = 100;\r\n  const [rcn, set_rcn] = useLocalNumber<number>(\"debug_rcn\", 10);\r\n\r\n  const [weapon_id, set_weapon_id] = useState<string>(\"\");\r\n  const [c_id, set_character_id] = useState<string>(\"\");\r\n  const [team, set_team] = useLocalString<string>(\"debug_bot_team\", \"\");\r\n  const [bot_ctrl, set_bot_ctrl] = useLocalString<string>(\"debug_bot_ctrl\", \"\");\r\n\r\n  if (!lf2 || visible === false) return <></>;\r\n\r\n  const on_click_add_weapon = () => {\r\n    weapon_id ? lf2.weapons.add(weapon_id, rwn) : lf2.weapons.add_random(rwn);\r\n  };\r\n  const on_click_del_weapon = () => {\r\n    lf2.weapons.list().forEach(v => v.hp = v.hp_r = 0)\r\n  };\r\n  const on_click_add_bot = () => {\r\n    (c_id\r\n      ? lf2.characters.add(c_id, rcn, team)\r\n      : lf2.characters.add_random(rcn, team)\r\n    ).forEach((e) => {\r\n      e.name = \"bot\";\r\n      const controller_creator = bot_controllers[bot_ctrl];\r\n      if (controller_creator) e.ctrl = controller_creator(e);\r\n    });\r\n  };\r\n  const phase_desc = stage_phase_list[stage_phase_idx]?.desc;\r\n\r\n  return (\r\n    <>\r\n      <Show.Div\r\n        className={styles.settings_row}\r\n        show={props.show_stage_settings !== false}\r\n      >\r\n        <Titled float_label=\"关卡\">\r\n          <Combine>\r\n            <Select\r\n              value={stage_id}\r\n              onChange={v => lf2.change_stage(v!)}\r\n              items={stage_list}\r\n              parse={(i) => [i.id, i.name]}\r\n            />\r\n            {!stage_phase_list.length ? null : (\r\n              <Select\r\n                title={phase_desc}\r\n                onChange={v => set_stage_phase_idx(v!)}\r\n                value={stage_phase_idx}\r\n                items={stage_phase_list}\r\n                parse={(i, idx) => [\r\n                  idx,\r\n                  [`No.${1 + idx}, bound: ${i.bound}`].filter(Boolean).join(\" \"),\r\n                ]}\r\n              />\r\n            )}\r\n          </Combine>\r\n        </Titled>\r\n        <Combine>\r\n          <Button onClick={() => lf2.world.stage.kill_all_enemies()}>\r\n            杀死全部敌人\r\n          </Button>\r\n          <Button onClick={() => lf2.world.stage.kill_boss()}>杀死Boss</Button>\r\n          <Button onClick={() => lf2.world.stage.kill_soliders()}>\r\n            杀死士兵\r\n          </Button>\r\n          <Button onClick={() => lf2.world.stage.kill_others()}>杀死其他</Button>\r\n        </Combine>\r\n      </Show.Div>\r\n\r\n      <Show.Div className={styles.settings_row} show={props.show_bg_settings !== false}>\r\n        <Titled float_label=\"背景\">\r\n          <Select\r\n            value={bg_id}\r\n            onChange={v => lf2.change_bg(v!)}\r\n            items={lf2.datas.backgrounds}\r\n            parse={(i) => [i.id, i.base.name]}\r\n          />\r\n        </Titled>\r\n        <Titled float_label=\"难度\">\r\n          <Select\r\n            value={difficulty}\r\n            onChange={v => set_difficulty(v!)}\r\n            items={[\r\n              Difficulty.Easy,\r\n              Difficulty.Normal,\r\n              Difficulty.Difficult,\r\n              Difficulty.Crazy,\r\n            ]}\r\n            parse={(i) => [i, Defines.DifficultyLabels[i]]}\r\n          />\r\n        </Titled>\r\n        <Button onClick={(v) => lf2.entities.del_all()}>清场</Button>\r\n      </Show.Div>\r\n\r\n      <Show.Div\r\n        className={styles.settings_row}\r\n        show={props.show_weapon_settings !== false}\r\n      >\r\n\r\n        <Titled float_label=\"添加武器\">\r\n          <Combine>\r\n            <InputNumber\r\n              placeholder=\"数量\"\r\n              prefix=\"数量\"\r\n              min={min_rwn}\r\n              max={max_rwn}\r\n              step={1}\r\n              value={rwn}\r\n              onChange={(e) => set_rwn(o => e ?? o)}\r\n              onBlur={() =>\r\n                set_rwn((v) =>\r\n                  Math.min(Math.max(Math.floor(v), min_rwn), max_rwn),\r\n                )\r\n              }\r\n            />\r\n            <Select\r\n              value={weapon_id}\r\n              onChange={v => set_weapon_id(v!)}\r\n              items={[0, ...lf2.datas.weapons]}\r\n              parse={i => is_num(i) ? [\"\", \"Random\"] : [i.id, i.base.name]} >\r\n            </Select>\r\n            <Button onClick={on_click_add_weapon}>\r\n              添加\r\n            </Button>\r\n            <Button onClick={on_click_del_weapon}>\r\n              移除\r\n            </Button>\r\n          </Combine>\r\n        </Titled>\r\n      </Show.Div>\r\n\r\n      <Show.Div\r\n        className={styles.settings_row}\r\n        show={props.show_bot_settings !== false}\r\n      >\r\n        <Titled float_label=\"添加BOT\">\r\n          <Combine>\r\n            <InputNumber\r\n              prefix=\"数量\"\r\n              min={min_rcn}\r\n              max={max_rcn}\r\n              step={1}\r\n              value={rcn}\r\n              onChange={v => set_rcn(o => v ?? o)}\r\n              onBlur={() =>\r\n                set_rcn((v) =>\r\n                  Math.min(Math.max(Math.floor(v), min_rcn), max_rcn),\r\n                )\r\n              }\r\n            />\r\n            <CharacterSelect\r\n              lf2={lf2} value={c_id} onChange={v => set_character_id(v!)} />\r\n            <TeamSelect value={team} onChange={v => set_team(v!)} />\r\n            <Select\r\n              value={bot_ctrl}\r\n              onChange={v => set_bot_ctrl(v!)}\r\n              items={Object.keys(bot_controllers)}\r\n              parse={(i) => [i, i]}\r\n            />\r\n            <Button onClick={on_click_add_bot}>添加</Button>\r\n          </Combine>\r\n        </Titled>\r\n      </Show.Div >\r\n\r\n      <Show.Div\r\n        className={styles.settings_row}\r\n        show={props.show_world_tuning !== false}\r\n      >\r\n        {world_properties?.map((v, idx) => {\r\n          const r = world_field_map[v.name as keyof IWorldDataset]\r\n          if (!r) return null\r\n          const { title, desc = title, type } = r\r\n          if (!type) return null;\r\n          let ref: InputRef | null = null;\r\n          return (\r\n            <Titled\r\n              float_label={title}\r\n              title={desc}\r\n              key={v.name + \"_\" + idx}>\r\n              <Combine>\r\n                <InputNumber\r\n                  precision={type === 'float' ? 2 : 0}\r\n                  ref={(r) => { ref = r }}\r\n                  placeholder={v.name}\r\n                  step={type === 'float' ? 0.01 : type === 'int' ? 1 : 0.01}\r\n                  defaultValue={(lf2.world as any)[v.name]}\r\n                  onChange={(e) =>\r\n                    ((lf2.world as any)[v.name] = e)\r\n                  } />\r\n                <Button\r\n                  title=\"重置\"\r\n                  onClick={(_) => {\r\n                    (lf2.world as any)[v.name] = Number(v.default_value);\r\n                    ref!.value = \"\" + v.default_value;\r\n                  }}>\r\n                  <Cross />\r\n                </Button>\r\n              </Combine>\r\n            </Titled>\r\n          );\r\n        })}\r\n      </Show.Div>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface IFieldInfo {\r\n  title: string;\r\n  type: '' | 'int' | 'float';\r\n  desc?: string;\r\n}\r\nconst world_field_map: Record<keyof IWorldDataset, IFieldInfo> = {\r\n  gravity: { title: \"重力\", desc: \"重力\", type: 'float' },\r\n  begin_blink_time: { title: \"入场闪烁时长\", desc: \"入场闪烁时长\", type: 'int' },\r\n  gone_blink_time: { title: \"消失闪烁时长\", desc: \"消失闪烁时长\", type: 'int' },\r\n  lying_blink_time: { title: \"起身闪烁时长\", desc: \"起身闪烁时长\", type: 'int' },\r\n  double_click_interval: { title: \"双击判定时长\", desc: \"双击判定时长\", type: 'int' },\r\n  key_hit_duration: { title: \"按键判定时长\", desc: \"按键判定时长\", type: 'int' },\r\n  itr_shaking: { title: \"受伤摇晃时长\", desc: \"受伤摇晃时长\", type: 'int' },\r\n  itr_motionless: { title: \"命中停顿时长\", desc: \"命中停顿时长\", type: 'int' },\r\n  hp_healing_ticks: { title: \"治疗回血周期\", desc: \"治疗效果下，每几帧回血一次\", type: 'int' },\r\n  hp_healing_value: { title: \"治疗回血量\", desc: \"治疗效果下，每次回血多少\", type: 'int' },\r\n  fvx_f: { title: \"dvx缩放系数\", desc: \"fvx_f\", type: 'float' },\r\n  fvy_f: { title: \"dvy缩放系数\", desc: \"fvy_f\", type: 'float' },\r\n  fvz_f: { title: \"dvz缩放系数\", desc: \"fvz_f\", type: 'float' },\r\n  ivy_f: { title: \"ivy_f\", desc: \"ivy_f\", type: 'float' },\r\n  ivz_f: { title: \"ivz_f\", desc: \"ivz_f\", type: 'float' },\r\n  ivx_f: { title: \"ivx_f\", desc: \"ivx_f\", type: 'float' },\r\n  ivy_d: { title: \"ivy_d\", desc: \"默认的攻击Y轴速度\", type: 'float' },\r\n  ivx_d: { title: \"ivx_d\", desc: \"默认的攻击X轴速度\", type: 'float' },\r\n  cvy_d: { title: \"cvy_d\", desc: \"cvy_d\", type: 'float' },\r\n  cvx_d: { title: \"cvx_d\", desc: \"cvx_d\", type: 'float' },\r\n  tvx_f: { title: \"X轴丢人初速度系数\", desc: \"tvx_f\", type: 'float' },\r\n  tvy_f: { title: \"Y轴丢人初速度系数\", desc: \"tvy_f\", type: 'float' },\r\n  tvz_f: { title: \"Z轴丢人初速度系数\", desc: \"tvz_f\", type: 'float' },\r\n  vrest_offset: { title: \"vrest_offset\", desc: \"vrest_offset\", type: 'int' },\r\n  arest_offset: { title: \"arest_offset\", desc: \"arest_offset\", type: 'int' },\r\n  arest_offset_2: { title: \"arest_offset_2\", desc: \"arest_offset_2\", type: 'int' },\r\n  frame_wait_offset: { title: \"frame_wait_offset\", desc: \"frame_wait_offset\", type: 'int' },\r\n  cha_bc_spd: { title: \"cha_bc_spd\", desc: \"cha_bc_spd\", type: 'float' },\r\n  cha_bc_tst_spd_x: { title: \"cha_bc_tst_spd_x\", desc: \"cha_bc_tst_spd_x\", type: 'float' },\r\n  cha_bc_tst_spd_y: { title: \"cha_bc_tst_spd_y\", desc: \"cha_bc_tst_spd_y\", type: 'float' },\r\n  hp_recoverability: { title: \"可回血比例\", desc: \"可回血比例\", type: 'float' },\r\n  hp_r_ticks: { title: \"自动回血周期\", desc: \"每几帧回血一次\", type: 'int' },\r\n  hp_r_value: { title: \"自动回血量\", desc: \"每次回血多少\", type: 'int' },\r\n  mp_r_ticks: { title: \"自动回蓝周期\", desc: \"每几帧回蓝一次\", type: 'int' },\r\n  mp_r_ratio: { title: \"mp_r_ratio\", desc: \"mp_r_ratio\", type: 'int' },\r\n  friction_factor: { title: \"地速衰减系数\", desc: \"在地面的物体，速度将每帧乘以此值\", type: 'float' },\r\n  friction_x: { title: \"地面摩擦X\", desc: \"在地面的物体，每帧X速度将±=此值,向0靠近\", type: 'float' },\r\n  friction_z: { title: \"地面摩擦Z\", desc: \"在地面的物体，每帧Z速度将±=此值,向0靠近\", type: 'float' },\r\n  screen_w: { title: \"screen_w\", desc: \"screen_w\", type: '' },\r\n  screen_h: { title: \"screen_h\", desc: \"screen_h\", type: '' },\r\n  sync_render: { title: \"sync_render\", desc: \"sync_render\", type: '' },\r\n}","import classNames from \"classnames\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DomAdapter } from \"splittings-dom/dist/es/splittings-dom\";\nimport \"splittings-dom/dist/es/splittings-dom.css\";\nimport { Workspaces } from \"splittings/dist/es/splittings\";\nimport styles from \"./App.module.scss\";\nimport { Button } from \"./Component/Buttons/Button\";\nimport { StatusButton } from \"./Component/Buttons/StatusButton\";\nimport { ToggleButton } from \"./Component/Buttons/ToggleButton\";\nimport { ToggleImgButton } from \"./Component/Buttons/ToggleImgButton\";\nimport Combine from \"./Component/Combine\";\nimport { InputNumber } from \"./Component/Input\";\nimport Select from \"./Component/Select\";\nimport Show from \"./Component/Show\";\nimport Titled from \"./Component/Titled\";\nimport { useShortcut } from \"./Component/useShortcut\";\nimport { DanmuOverlay } from \"./DanmuOverlay\";\nimport { DatViewer } from \"./pages/dat_viewer/DatViewer\";\nimport { __Pointings } from \"./DittoImpl\";\nimport { Indicating, INDICATINGS } from \"./DittoImpl/renderer/FrameIndicators\";\nimport { WorldRenderer } from \"./DittoImpl/renderer/WorldRenderer\";\nimport EditorView from \"./EditorView\";\nimport { GameOverlay } from \"./GameOverlay\";\nimport GamePad from \"./GamePad\";\nimport { LF2 } from \"./LF2/LF2\";\nimport Invoker from \"./LF2/base/Invoker\";\nimport { CheatType } from \"./LF2/defines\";\nimport { Defines } from \"./LF2/defines/defines\";\nimport { Ditto } from \"./LF2/ditto\";\nimport { is_weapon } from \"./LF2/entity/type_check\";\nimport { IUIInfo } from \"./LF2/ui/IUIInfo.dat\";\nimport { fisrt } from \"./LF2/utils/container_help\";\nimport { arithmetic_progression } from \"./LF2/utils/math/arithmetic_progression\";\nimport { Loading } from \"./LoadingImg\";\nimport { Log } from \"./Log\";\nimport { PlayerRow } from \"./PlayerRow\";\nimport SettingsRows from \"./SettingsRows\";\nimport { open_file } from \"./Utils/open_file\";\nimport img_btn_0_3 from \"./assets/btn_0_3.png\";\nimport img_btn_1_0 from \"./assets/btn_1_0.png\";\nimport img_btn_1_1 from \"./assets/btn_1_1.png\";\nimport img_btn_1_2 from \"./assets/btn_1_2.png\";\nimport img_btn_1_3 from \"./assets/btn_1_3.png\";\nimport img_btn_2_0 from \"./assets/btn_2_0.png\";\nimport img_btn_2_1 from \"./assets/btn_2_1.png\";\nimport img_btn_2_2 from \"./assets/btn_2_2.png\";\nimport img_btn_2_3 from \"./assets/btn_2_3.png\";\nimport img_btn_3_0 from \"./assets/btn_3_0.png\";\nimport img_btn_3_1 from \"./assets/btn_3_1.png\";\nimport img_btn_3_2 from \"./assets/btn_3_2.png\";\nimport \"./init\";\nimport {\n  useLocalBoolean,\n  useLocalNumber,\n  useLocalString,\n} from \"./useLocalStorage\";\nimport { useWorkspaces } from \"./pages/dat_viewer/useWorkspaces\";\n\nfunction App() {\n  const [fullscreen] = useState(() => new Ditto.FullScreen());\n  const ref_lf2 = useRef<LF2 | undefined>(void 0)\n  const [lf2, set_lf2] = useState<LF2 | undefined>()\n  const [ele_game_canvas, set_ele_game_canvas] = useState<HTMLCanvasElement | null>(null)\n  const [ele_game_overlay, set_ele_game_overlay] = useState<HTMLElement | null>(null)\n  const [ele_root, set_ele_root] = useState<HTMLDivElement | null>(null)\n  const [[workspace, , game_cell, pannel_cell], set_workspace] = useState<\n    [Workspaces | null, DomAdapter | null, HTMLElement | null, HTMLElement | null]\n  >([null, null, null, null])\n\n  const [dat_viewer_open, set_dat_viewer_open] = useState(false);\n  const [editor_open, set_editor_open] = useState(false);\n  const [game_overlay, set_game_overlay] = useLocalBoolean(\n    \"game_overlay\",\n    false,\n  );\n  const [showing_panel, set_showing_panel] = useLocalString<\n    \"world_tuning\" | \"stage\" | \"bg\" | \"weapon\" | \"bot\" | \"player\" | \"\"\n  >(\"showing_panel\", \"\");\n  const [control_panel_visible, set_control_panel_visible] = useLocalBoolean(\n    \"control_panel\",\n    false,\n  );\n  const [cheat_1, _set_cheat_1] = useLocalBoolean(\"cheat_1\", false);\n  const [cheat_2, _set_cheat_2] = useLocalBoolean(\"cheat_2\", false);\n  const [cheat_3, _set_cheat_3] = useLocalBoolean(\"cheat_3\", false);\n  const [loading, set_loading] = useState(false);\n  const [loaded, set_loaded] = useState(false);\n  const [paused, _set_paused] = useState(false);\n  const [bg_id, _set_bg_id] = useState(Defines.VOID_BG.id);\n  const [muted, _set_muted] = useLocalBoolean(\"total_muted\", false);\n  const [bgm_muted, _set_bgm_muted] = useLocalBoolean(\"bgm_muted\", false);\n  const [sound_muted, _set_sound_muted] = useLocalBoolean(\"sound_muted\", false);\n  const [volume, _set_volume] = useLocalNumber<number>(\"total_volume\", 0.3);\n  const [bgm_volume, _set_bgm_volume] = useLocalNumber<number>(\"bgm_volume\", 0.5);\n  const [sound_volume, _set_sound_volume] = useLocalNumber<number>(\"sound_volume\", 1,);\n  const [render_size_mode, set_render_size_mode] = useLocalString<\n    \"fixed\" | \"fill\" | \"cover\" | \"contain\"\n  >(\"render_size_mode\", \"contain\");\n  const [render_fixed_scale, set_render_fixed_scale] = useLocalNumber<number>(\n    \"render_fixed_scale\",\n    1,\n  );\n  const [custom_render_fixed_scale, set_custom_render_fixed_scale] =\n    useLocalNumber<number>(\"custom_render_fixed_scale\", 1);\n  const [v_align, set_v_align] = useLocalNumber<number>(\n    \"v_align\",\n    document.body.parentElement!.className.indexOf(\"portrait\") >= 0 ? 0.3 : 0.5,\n  );\n  const [h_align, set_h_align] = useLocalNumber<number>(\"h_align\", 0.5);\n  const [custom_h_align, set_custom_h_align] = useLocalNumber<number>(\n    \"custom_h_align\",\n    0.5,\n  );\n  const [custom_v_align, set_custom_v_align] = useLocalNumber<number>(\n    \"custom_v_align\",\n    0.5,\n  );\n  const [debug_ui_pos, set_debug_ui_pos] = useLocalString<\n    \"left\" | \"right\" | \"top\" | \"bottom\"\n  >(\"debug_ui_pos\", \"bottom\");\n  const [touch_pad_on, set_touch_pad_on] = useLocalString<string>(\n    \"touch_pad_on\",\n    \"\",\n  );\n  const [is_fullscreen, _set_is_fullscreen] = useState(false);\n  const [sync_render, set_sync_render] = useLocalNumber<0 | 1 | 2>(\n    \"sync_render\",\n    0,\n  );\n  const [indicator_flags, set_indicator_flags] = useState<number>(0);\n\n  const update_once = () => {\n    lf2?.world.set_paused(true);\n    lf2?.world.update_once();\n  };\n\n  useEffect(() => {\n    if (!lf2) return;\n    lf2.world.indicator_flags = indicator_flags;\n  }, [indicator_flags]);\n\n  const [fast_forward, set_fast_forward] = useState(false);\n  useEffect(() => {\n    if (!lf2) return;\n    lf2.world.playrate = fast_forward ? 100 : 1;\n  }, [fast_forward]);\n\n  const toggle_fullscreen = useCallback(() => {\n    if (fullscreen.is_fullscreen) fullscreen.exit();\n    else fullscreen.enter(document.body.parentElement!);\n  }, [fullscreen]);\n\n  const [layout_id, _set_layout] = useState<string | undefined>(void 0);\n  const [layouts, set_layouts] = useState<Readonly<IUIInfo>[]>([\n    { id: \"\", name: \"无页面\" },\n  ]);\n\n  useEffect(() => {\n    if (!lf2 || !ele_game_overlay) return;\n    const ele = new GameOverlay(lf2.world, ele_game_overlay);\n    return () => ele.release()\n\n  }, [lf2, ele_game_overlay])\n\n  useEffect(() => {\n    const lf2 = ref_lf2.current = new LF2();\n    lf2.load(\"prel.zip.json\").catch(LF2.IgnoreDisposed);\n\n    lf2.lang = navigator.language.toLowerCase()\n    set_lf2(lf2)\n    lf2.sounds.set_muted(muted);\n    lf2.sounds.set_volume(volume);\n    lf2.sounds.set_bgm_muted(bgm_muted);\n    lf2.sounds.set_bgm_volume(bgm_volume);\n    lf2.sounds.set_sound_muted(sound_muted);\n    lf2.sounds.set_sound_volume(sound_volume);\n    lf2.world.sync_render = sync_render;\n    _set_cheat_1(lf2.is_cheat_enabled(CheatType.LF2_NET));\n    _set_cheat_2(lf2.is_cheat_enabled(CheatType.HERO_FT));\n    _set_cheat_3(lf2.is_cheat_enabled(CheatType.GIM_INK));\n    _set_bg_id(lf2.world.stage.bg.id);\n    const on_touchstart = () => {\n      set_touch_pad_on(fisrt(lf2.players.keys())!);\n    };\n    const on_keydown = () => {\n      set_touch_pad_on(\"\");\n    };\n    window.addEventListener(\"touchstart\", on_touchstart, { once: true });\n    window.addEventListener(\"keydown\", on_keydown);\n    _set_is_fullscreen(!!fullscreen.target);\n    _set_paused(lf2.world.paused);\n    const invoker = new Invoker()\n      .add(\n        () => window.removeEventListener(\"keydown\", on_keydown),\n        () => window.removeEventListener(\"touchstart\", on_touchstart),\n        fullscreen.callbacks.add({\n          onChange: (e) => _set_is_fullscreen(!!e),\n        }),\n        lf2.world.callbacks.add({\n          on_stage_change: (s) => _set_bg_id(s.bg.id),\n          on_pause_change: (v) => _set_paused(v),\n          on_sync_render_changed: (v) => set_sync_render(v),\n        }),\n        lf2.callbacks.add({\n          on_ui_loaded: (layouts) => {\n            const layout_data_list = layouts.map((l) => ({\n              id: l.id,\n              name: l.name,\n            }));\n            layout_data_list.unshift({ id: \"\", name: \"无页面\" });\n            set_layouts(layout_data_list);\n\n            if (layout_data_list.length > 1)\n              _set_layout((v) => v || layout_data_list[1].id);\n          },\n          on_layout_changed: (v) => _set_layout(v?.id ?? \"\"),\n          on_loading_start: () => set_loading(true),\n          on_loading_end: () => {\n            set_loaded(true);\n            set_loading(false);\n          },\n          on_cheat_changed: (cheat_name, enabled) => {\n            switch (cheat_name) {\n              case CheatType.LF2_NET:\n                _set_cheat_1(enabled);\n                break;\n              case CheatType.HERO_FT:\n                _set_cheat_2(enabled);\n                break;\n              case CheatType.GIM_INK:\n                _set_cheat_3(enabled);\n                set_control_panel_visible(enabled)\n                set_game_overlay(enabled)\n                break;\n            }\n          },\n        }),\n        lf2.sounds.callbacks.add({\n          on_muted_changed: _set_muted,\n          on_bgm_muted_changed: _set_bgm_muted,\n          on_sound_muted_changed: _set_sound_muted,\n          on_volume_changed: _set_volume,\n          on_bgm_volume_changed: _set_bgm_volume,\n          on_sound_volume_changed: _set_sound_volume,\n        }),\n        () => lf2.dispose(),\n      )\n\n    return () => {\n      invoker.invoke()\n    };\n  }, [LF2]);\n\n  const on_click_load_local_zip = () => {\n    if (!lf2) return;\n    open_file({ accept: \".zip\" })\n      .then((v) => Ditto.Zip.read_file(v[0]))\n      .then((v) => lf2.load(v))\n      .catch((e) => Log.print(\"App -> on_click_load_local_zip\", e));\n  };\n\n  const on_click_download_zip = () => {\n    const download = (url: string) => {\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = url;\n      a.click();\n    }\n    download(\"data.zip.json\")\n    download(\"data.zip\")\n    download(\"prel.zip.json\")\n    download(\"prel.zip\")\n  };\n\n  const on_click_load_builtin = async () => {\n    if (!lf2) return;\n    lf2\n      .load(\"prel.zip.json\")\n      .then(() => lf2.load(\"data.zip.json\"))\n      .catch((e) => Log.print(\"App -> on_click_load_builtin\", e));\n  };\n\n  useEffect(() => {\n    const ele = ele_game_canvas;\n    const contaner = ele?.parentElement\n    if (!ele || !contaner) return;\n    const scale: number = render_fixed_scale || custom_render_fixed_scale;\n    const on_resize = () => {\n      const screen_w = 794;\n      const screen_h = 450;\n      const { width, height } = contaner.getBoundingClientRect()\n      const win_w = Math.floor(width);\n      const win_h = Math.floor(height);\n      let view_w = win_w;\n      let view_h = win_h;\n      const s_1 = screen_w / screen_h;\n      const s_2 = win_w / win_h;\n      switch (render_size_mode) {\n        case \"fill\":\n          ele.style.width = win_w + \"px\";\n          ele.style.height = win_h + \"px\";\n          break;\n        case \"cover\":\n          if (s_1 > s_2) {\n            ele.style.height = win_h + \"px\";\n            ele.style.width = (view_w = win_h * s_1) + \"px\";\n          } else {\n            ele.style.width = win_w + \"px\";\n            ele.style.height = (view_h = win_w / s_1) + \"px\";\n          }\n          break;\n        case \"contain\":\n          if (s_1 > s_2) {\n            ele.style.width = win_w + \"px\";\n            ele.style.height = (view_h = win_w / s_1) + \"px\";\n          } else {\n            ele.style.height = win_h + \"px\";\n            ele.style.width = (view_w = win_h * s_1) + \"px\";\n          }\n          break;\n        case \"fixed\":\n        default:\n          ele.style.width = (view_w = scale * screen_w) + \"px\";\n          ele.style.height = (view_h = scale * screen_h) + \"px\";\n          break;\n      }\n      const h_align_ = h_align < -1 ? custom_h_align : h_align;\n      const v_align_ = v_align < -1 ? custom_v_align : v_align;\n      ele.style.left = Math.floor((win_w - view_w) * h_align_) + \"px\";\n      ele.style.top = Math.floor((win_h - view_h) * v_align_) + \"px\";\n    };\n    window.addEventListener(\"resize\", on_resize);\n    on_resize();\n\n    const resize_ob = new ResizeObserver(on_resize)\n    if (game_cell) resize_ob.observe(game_cell)\n\n    return () => {\n      window.removeEventListener(\"resize\", on_resize)\n      resize_ob.disconnect()\n    };\n  }, [\n    game_cell,\n    render_size_mode,\n    render_fixed_scale,\n    custom_render_fixed_scale,\n    v_align,\n    h_align,\n    custom_h_align,\n    custom_v_align,\n    ele_game_canvas\n  ]);\n\n  const player_infos = lf2?.players;\n  const players = useMemo(() => {\n    if (!player_infos) return [];\n    return Array.from(player_infos.values());\n  }, [player_infos]);\n\n  const touch_pad_player_items = useMemo(\n    () => [\n      { value: \"\", label: \"触控板: 关闭\" },\n      ...players.map((v) => ({ value: v.id, label: \"触控板: 玩家\" + v.id })),\n    ],\n    [players],\n  );\n\n  useShortcut(\"F8\", 0, () => lf2?.weapons.add_random(9));\n  useShortcut(\"F9\", 0, () => lf2?.world.stage.kill_all_enemies());\n  useShortcut(\"F10\", 0, () => {\n    if (lf2) for (const e of lf2.world.entities) if (is_weapon(e)) e.hp = 0;\n  });\n\n  useShortcut(\"F11\", 0, () => toggle_fullscreen());\n  useShortcut(\"ctrl+F1\", 0, () => lf2?.is_cheat_enabled(CheatType.GIM_INK) && set_control_panel_visible((v) => !v));\n  useShortcut(\"ctrl+F3\", 0, () => lf2?.is_cheat_enabled(CheatType.GIM_INK) && set_game_overlay((v) => !v));\n  useEffect(() => {\n\n    const ele = ele_game_canvas;\n    if (!ele) return;\n    if (layout_id) {\n      ele.style.transition = \"opacity 1000ms\";\n      ele.style.opacity = \"1\";\n    } else {\n      ele.style.opacity = \"0\";\n    }\n  }, [layout_id, ele_game_canvas]);\n\n  useEffect(() => {\n    if (!lf2) return;\n    (lf2.pointings as __Pointings).set_element(ele_game_canvas);\n    (lf2.world.renderer as WorldRenderer).scene.set_canvas(ele_game_canvas);\n  }, [lf2, ele_game_canvas])\n\n  useWorkspaces({ container: ele_root })\n\n  useEffect(() => {\n    if (!ele_root) return;\n    const adpater = new DomAdapter(ele_root)\n    const workspace = new Workspaces(adpater)\n    const game_slot = workspace.root;\n\n    workspace.on_leaves_changed = () => {\n      for (const leaf of workspace.leaves) {\n        const cell = workspace.adapter.get_cell(leaf)\n        if (!cell || cell.children.length) continue;\n        if (!cell.parentElement) workspace.adapter.container.appendChild(cell)\n      }\n      const pannel_slot = workspace.find(\"panel\")\n      set_workspace([\n        workspace,\n        adpater,\n        adpater.get_cell(game_slot) ?? null,\n        pannel_slot ? adpater.get_cell(pannel_slot) || null : null\n      ])\n    }\n    workspace.confirm()\n    return () => {\n      workspace.on_leaves_changed = void 0\n      workspace.root.release()\n      workspace.release()\n    }\n  }, [ele_root])\n\n  useEffect(() => {\n    if (!workspace) return;\n    workspace.del(\"panel\");\n    if (control_panel_visible) {\n      switch (debug_ui_pos) {\n        case \"left\": workspace.add(\"slot_1\", debug_ui_pos, { id: \"panel\" }); break;\n        case \"right\": workspace.add(\"slot_1\", debug_ui_pos, { id: \"panel\" }); break;\n        case \"top\": workspace.add(\"slot_1\", \"up\", { id: \"panel\" }); break;\n        case \"bottom\": workspace.add(\"slot_1\", \"down\", { id: \"panel\" }); break;\n      }\n      workspace.root.keep = true\n    }\n    workspace.confirm()\n  }, [workspace, debug_ui_pos, control_panel_visible])\n\n\n  const game_cell_view = game_cell ? createPortal(\n    <div className={styles.game_contiainer}>\n      <canvas\n        ref={set_ele_game_canvas}\n        tabIndex={-1}\n        className={styles.game_canvas}\n        width={794}\n        height={450}\n        draggable={false}\n        onContextMenu={e => { e.preventDefault(); e.stopPropagation(); }}\n        onContextMenuCapture={e => { e.preventDefault(); e.stopPropagation(); }}\n      />\n      <div ref={set_ele_game_overlay} className={classNames(styles.game_overlay, { [styles.gone]: !game_overlay })} />\n      <DanmuOverlay lf2={lf2} />\n      <GamePad player_id={touch_pad_on} lf2={lf2} />\n      <Loading loading={!layout_id} big className={styles.loading_img} />\n      <div className={styles.debug_pannel}>\n        <Show show={lf2?.is_cheat_enabled(CheatType.GIM_INK)}>\n          <ToggleImgButton\n            checked={control_panel_visible}\n            onClick={() => set_control_panel_visible((v) => !v)}\n            src={[img_btn_1_2, img_btn_1_3]}\n          />\n        </Show>\n        <ToggleImgButton\n          checked={is_fullscreen}\n          onClick={() => toggle_fullscreen()}\n          src={[img_btn_3_1, img_btn_3_2]}\n        />\n        <ToggleImgButton\n          checked={bgm_muted}\n          onClick={() => lf2?.sounds?.set_bgm_muted(!bgm_muted)}\n          src={[img_btn_2_0, img_btn_3_0]}\n        />\n        <ToggleImgButton\n          checked={sound_muted}\n          onClick={() => lf2?.sounds?.set_sound_muted(!sound_muted)}\n          src={[img_btn_0_3, img_btn_1_0]}\n        />\n        <Show\n          show={bg_id !== Defines.VOID_BG.id && layout_id !== \"ctrl_settings\"}\n        >\n          <ToggleImgButton\n            checked={paused}\n            onClick={() => lf2?.world.set_paused(!paused)}\n            src={[img_btn_2_1, img_btn_2_2]}\n          />\n        </Show>\n        <Show\n          show={\n            layouts.length > 1 &&\n            !loading &&\n            layout_id !== \"launch\" &&\n            layout_id !== \"ctrl_settings\"\n          }\n        >\n          <ToggleImgButton\n            onClick={() => {\n              lf2?.world.set_paused(true);\n              lf2?.push_ui(\"ctrl_settings\");\n            }}\n            src={[img_btn_1_1, img_btn_1_1]}\n          />\n        </Show>\n        <Show show={layout_id && Number(lf2?.ui_stacks.length) > 1}>\n          <ToggleImgButton\n            onClick={() => lf2 && lf2.ui_stacks.length >= 2 && lf2.pop_ui()}\n            src={[img_btn_2_3]}\n          />\n        </Show>\n      </div>\n    </div>, game_cell, null) : null\n\n  const pannel_cell_view = pannel_cell ? createPortal(\n    <div className={classNames(styles.debug_ui, styles[\"debug_ui_\" + debug_ui_pos])}>\n      <div className={styles.settings_row}>\n        <Button onClick={on_click_download_zip}>下载数据包</Button>\n        <Button onClick={on_click_load_local_zip} disabled={loading}>\n          加载数据包\n        </Button>\n        <Button onClick={on_click_load_builtin} disabled={loading}>\n          加载内置数据\n        </Button>\n        <Button onClick={() => set_dat_viewer_open(true)}>查看dat文件</Button>\n        <Button onClick={() => set_editor_open(true)}>查看数据包</Button>\n        <Select\n          items={[\"top\", \"bottom\", \"left\", \"right\"] as const}\n          parse={(v) => [v, \"位置：\" + v]}\n          value={debug_ui_pos}\n          onChange={v => set_debug_ui_pos(v!)}\n        />\n        <Button\n          style={{ marginLeft: \"auto\" }}\n          onClick={() => set_control_panel_visible(false)}\n        >\n          ✕\n        </Button>\n      </div>\n      <div className={styles.settings_row}>\n        <Combine>\n          <ToggleButton\n            onChange={(v) => lf2?.sounds.set_muted(v)}\n            value={muted}\n          >\n            <>音量</>\n            <>静音</>\n          </ToggleButton>\n          <Show show={!muted}>\n            <InputNumber\n              precision={0}\n              min={0}\n              max={100}\n              step={1}\n              value={Math.ceil(volume * 100)}\n              onChange={(e) =>\n                lf2?.sounds.set_volume(e! / 100)\n              }\n            />\n          </Show>\n          <ToggleButton\n            onChange={(v) => lf2?.sounds.set_bgm_muted(v)}\n            value={bgm_muted}>\n            <>音乐</>\n            <>音乐(已禁用)</>\n          </ToggleButton>\n          <Show show={!bgm_muted}>\n            <InputNumber\n              precision={0}\n              min={0}\n              max={100}\n              step={1}\n              value={Math.ceil(bgm_volume * 100)}\n              onChange={(e) =>\n                lf2?.sounds.set_bgm_volume(e! / 100)\n              }\n            />\n          </Show>\n          <ToggleButton\n            onChange={(v) => lf2?.sounds.set_sound_muted(v)}\n            value={sound_muted}>\n            <>音效</>\n            <>音效(已禁用)</>\n          </ToggleButton>\n          <Show show={!sound_muted}>\n            <InputNumber\n              precision={0}\n              min={0}\n              max={100}\n              step={1}\n              value={Math.ceil(sound_volume * 100)}\n              onChange={(e) =>\n                lf2?.sounds.set_sound_volume(e! / 100)\n              }\n            />\n          </Show>\n        </Combine>\n      </div>\n      <div className={styles.settings_row}>\n        <Select\n          placeholder=\"页面\"\n          value={layout_id}\n          onChange={v => lf2?.set_ui(v!)}\n          items={layouts}\n          parse={(o) => [o.id!, o.name]}\n        />\n        <Titled float_label=\"显示模式\">\n          <Select\n            value={render_size_mode}\n            onChange={v => set_render_size_mode(v!)}\n            placeholder=\"显示模式\"\n            parse={i => [i, i]}\n            items={[\"fixed\", \"fill\", \"cover\", \"contain\"] as const}\n          />\n        </Titled>\n        <Show show={render_size_mode === \"fixed\"}>\n          <Titled float_label=\"缩放\">\n            <Combine>\n              <Select\n                value={render_fixed_scale}\n                onChange={v => set_render_fixed_scale(v!)}\n                items={arithmetic_progression(0, 4, 0.5)}\n                parse={(i) => [i, \"✕\" + (i || \"?\")]}\n              />\n              <Show show={!render_fixed_scale}>\n                <InputNumber\n                  precision={2}\n                  min={0}\n                  step={custom_render_fixed_scale <= 0.5 ? 0.1 : 0.5}\n                  value={custom_render_fixed_scale}\n                  onChange={(e) =>\n                    set_custom_render_fixed_scale(e!)\n                  } />\n              </Show>\n            </Combine>\n          </Titled>\n        </Show>\n        <Show show={render_size_mode !== \"fill\"}>\n          <Titled float_label=\"对齐\">\n            <Combine>\n              <Select\n                value={v_align}\n                onChange={v => set_v_align(v!)}\n                items={[-2, 0, 0.5, 1]}\n                parse={(v, idx) => [\n                  v, v <= -1 ? \"?\" : [\"上\", \"中\", \"下\"][idx - 1],\n                ]}\n              />\n              <Show show={v_align < 0}>\n                <InputNumber\n                  precision={2}\n                  min={-1}\n                  max={2}\n                  step={0.1}\n                  value={custom_v_align}\n                  onChange={(e) => set_custom_v_align(e!)}\n                />\n              </Show>\n              <Select\n                value={h_align}\n                onChange={v => set_h_align(v!)}\n                items={[-2, 0, 0.5, 1]}\n                parse={(v, idx) => [\n                  v,\n                  v <= -1 ? \"?\" : [\"左\", \"中\", \"右\"][idx - 1],\n                ]}\n              />\n              <Show show={h_align < 0}>\n                <InputNumber\n                  precision={2}\n                  min={-1}\n                  max={2}\n                  step={0.1}\n                  value={custom_h_align}\n                  onChange={(e) => set_custom_h_align(e!)}\n                />\n              </Show>\n            </Combine>\n          </Titled>\n        </Show>\n      </div>\n      <div className={styles.settings_row}>\n        <Combine>\n          <ToggleButton\n            value={paused}\n            onClick={() => lf2?.world.set_paused(!paused)}\n          >\n            <>游戏暂停</>\n            <>游戏暂停✓</>\n          </ToggleButton>\n          <Button onClick={update_once}>\n            更新一帧\n          </Button>\n          <ToggleButton\n            value={fast_forward}\n            onClick={() => set_fast_forward(!fast_forward)}\n          >\n            <>不限速度</>\n            <>不限速度✓</>\n          </ToggleButton>\n        </Combine>\n\n        <Combine>\n          {\n            Object.keys(INDICATINGS).map(k => {\n              const key = k as Indicating;\n              const num = INDICATINGS[key]\n              return (\n                <ToggleButton\n                  key={key}\n                  value={!!(indicator_flags & num)}\n                  onClick={() => set_indicator_flags(v => toggle_bit(v, num))}>\n                  <>{k}</>\n                  <>{k}✓</>\n                </ToggleButton>\n              )\n            })\n          }\n        </Combine>\n        <Combine>\n          <ToggleButton\n            title=\"ctrl+F3\"\n            value={game_overlay}\n            onChange={set_game_overlay}\n          >\n            <>游戏覆盖</>\n            <>游戏覆盖✓</>\n          </ToggleButton>\n          <ToggleButton\n            onClick={toggle_fullscreen}\n            value={fullscreen.is_fullscreen}\n          >\n            <>全屏</>\n            <>全屏✓</>\n          </ToggleButton>\n          <StatusButton\n            items={[\n              { value: 0, label: \"非同步渲染✓\" },\n              { value: 1, label: \"同步渲染✓\" },\n              { value: 2, label: \"同步渲染(x0.5)✓\" },\n            ]}\n            parse={i => [i.value, i.label]}\n            value={sync_render}\n            onClick={() => { if (lf2) lf2.world.sync_render = (lf2.world.sync_render + 1) % 3 }}\n          />\n\n        </Combine>\n      </div>\n      <div className={styles.settings_row}>\n        <Combine>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) => (v === \"stage\" ? \"\" : \"stage\"))\n            }\n            value={showing_panel === \"stage\"}\n          >\n            <>关卡面板</>\n            <>关卡面板✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) => (v === \"bg\" ? \"\" : \"bg\"))\n            }\n            value={showing_panel === \"bg\"}\n          >\n            <>背景面板</>\n            <>背景面板✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) => (v === \"weapon\" ? \"\" : \"weapon\"))\n            }\n            value={showing_panel === \"weapon\"}\n          >\n            <>武器面板</>\n            <>武器面板✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) => (v === \"bot\" ? \"\" : \"bot\"))\n            }\n            value={showing_panel === \"bot\"}\n          >\n            <>Bot面板</>\n            <>Bot面板✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) => (v === \"player\" ? \"\" : \"player\"))\n            }\n            value={showing_panel === \"player\"}\n          >\n            <>玩家面板</>\n            <>玩家面板✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() =>\n              set_showing_panel((v) =>\n                v === \"world_tuning\" ? \"\" : \"world_tuning\",\n              )\n            }\n            value={showing_panel === \"world_tuning\"}>\n            <>世界微调</>\n            <>世界微调✓</>\n          </ToggleButton>\n        </Combine>\n        <Combine>\n          <StatusButton\n            value={touch_pad_on}\n            items={touch_pad_player_items}\n            parse={i => [i.value, i.label]}\n            onChange={(v) => set_touch_pad_on(v!)} />\n          <ToggleButton\n            onChange={() => lf2?.toggle_cheat_enabled(CheatType.LF2_NET)}\n            value={cheat_1}>\n            <>LF2_NET</>\n            <>LF2_NET✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() => lf2?.toggle_cheat_enabled(CheatType.HERO_FT)}\n            value={cheat_2}>\n            <>HERO_FT</>\n            <>HERO_FT✓</>\n          </ToggleButton>\n          <ToggleButton\n            onChange={() => lf2?.toggle_cheat_enabled(CheatType.GIM_INK)}\n            value={cheat_3}>\n            <>GIM_INK</>\n            <>GIM_INK✓</>\n          </ToggleButton>\n        </Combine>\n      </div>\n      <Show show={showing_panel === \"player\"}>\n        {players.map((info, idx) => (\n          <PlayerRow\n            key={idx}\n            lf2={lf2!}\n            info={info}\n            touch_pad_on={touch_pad_on === info.id}\n            on_click_toggle_touch_pad={() =>\n              set_touch_pad_on(touch_pad_on === info.id ? \"\" : info.id)\n            }\n          />\n        ))}\n      </Show>\n      <SettingsRows\n        lf2={lf2}\n        show_stage_settings={showing_panel === \"stage\"}\n        show_bg_settings={showing_panel === \"bg\"}\n        show_weapon_settings={showing_panel === \"weapon\"}\n        show_bot_settings={showing_panel === \"bot\"}\n        show_world_tuning={showing_panel === \"world_tuning\"}\n      />\n    </div>, pannel_cell, null) : null\n\n  return (\n    <>\n      <div className={styles.app} ref={set_ele_root} />\n      {game_cell_view}\n      {pannel_cell_view}\n      {dat_viewer_open ? <DatViewer open={dat_viewer_open} onClose={() => set_dat_viewer_open(false)} /> : void 0}\n\n      <EditorView\n        open={editor_open}\n        onClose={() => set_editor_open(false)}\n        style={{ background: 'black', position: 'fixed', left: 0, top: 0, right: 0, bottom: 0, zIndex: 1 }}\n        lf2={lf2} />\n    </>\n  );\n}\nfunction toggle_bit(v: number, b: number): number {\n  return v & b ? v ^ b : v | b\n}\nexport default App;\n\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { Button, IButtonProps } from \"./Button\";\r\nimport { TShortcut } from \"../useShortcut\";\r\n\r\nexport interface IStatusButtonProps<V = any, I = any>\r\n  extends Omit<IButtonProps, \"children\" | \"value\" | \"onChange\" | \"defaultValue\"> {\r\n  value?: V;\r\n  defaultValue?: V;\r\n  items?: I[];\r\n  parse?: (item: I) => [V, React.ReactNode]\r\n  onChange?(v: V | undefined): void;\r\n  shortcut?: TShortcut;\r\n  shortcutTarget?: Window | Document | Element;\r\n  show_shortcut?: boolean;\r\n  _ref?: React.Ref<HTMLButtonElement>;\r\n}\r\nfunction default_parse<V = any, I = any>(i: I): [V, React.ReactNode] {\r\n  return [i as any, '' + i]\r\n}\r\n\r\nexport function StatusButton<V = any, I = any>(props: IStatusButtonProps<V, I>) {\r\n  const { value: outter_val, onClick, onChange, parse = default_parse, defaultValue, items, ..._p } = props;\r\n  const ref_value = useRef(outter_val);\r\n  const ref_onChange = useRef(onChange);\r\n\r\n  const [inner_val, _set_inner_val] = useState(defaultValue);\r\n  ref_value.current = outter_val ?? inner_val;\r\n  ref_onChange.current = onChange ?? _set_inner_val;\r\n\r\n  const value = outter_val ?? inner_val;\r\n\r\n  const _onClick = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    onClick?.(e);\r\n    const value = ref_value.current;\r\n    const onChange = ref_onChange.current;\r\n    if (!items) {\r\n      onChange?.(value);\r\n      return;\r\n    }\r\n    const next_index = (items.findIndex(item => parse(item)[0] === value) + 1) % items.length;\r\n    const next_item = items[next_index];\r\n    const [next_value] = parse(next_item)\r\n    onChange?.(next_value);\r\n\r\n  }, [onClick, items, parse]);\r\n\r\n  const label = useMemo(() => {\r\n    if (!items) return '' + value;\r\n    for (const item of items) {\r\n      const [v, label] = parse(item)\r\n      if (v === value) return label;\r\n    }\r\n    return '' + value;\r\n  }, [items, value, parse]);\r\n\r\n  return (\r\n    <Button {..._p} onClick={_onClick}>\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n"],"names":["ToggleButton","props","children","onChange","value","_p","v","set_v","useState","_items","useMemo","Array","isArray","a","b","label","_jsx","StatusButton","items","parse","i","is_desktop","device","desktop","ToggleImgButton","React","ref","_children$","_props$type","src","checked","onClick","onToggle","shortcut","shortcutTarget","window","show_shortcut","className","alt","remain_props","ref_btn","on_ref","useForwardedRef","useRef","current","unchecked_src","checked_src","alt_0","alt_1","useShortcut","disabled","has_keyboard","set_has_keyboard","useEffect","o","addEventListener","once","removeEventListener","_show_shortcut","root_className","classNames","styles","lf2ui_img_button","type","e","title","_jsxs","inner_div","draggable","inner_0","inner_1","CameraCtrl","UIComponent","constructor","arguments","time","free","_staring","keys","GameKey","L","KeyStatus","this","R","U","D","j","d","staring","lr","is_end","on_key_down","game_key","hit","on_key_up","end","update","dt","_this$staring","cam_x","world","renderer","lock_cam_x","is_start","use","fighters","lf2","characters","list","idx","indexOf","len","length","is_attach","position","x","screen_w","TAG","make_sum_info","team","wins","loses","kills","damages","pickings","spawns","deads","latest_dead_time","hp_lost","mp_usage","lost","make_fighter_sum","data","SummaryLogic","Map","players","teams","losing_teams","Set","_world_cb","on_fighter_del","on_fighter_add","_fighter_cb","on_damage_sum_changed","prev","_e$emitter","emitter","team_sum","fighter_sum","player_sum","on_kill_sum_changed","_e$emitter2","on_picking_sum_changed","on_dead","lives","node","update_times","add","on_hp_changed","hp","max","diif","on_mp_changed","on_reserve_changed","reserve","_temps","ret","get","set","make_team_sum_info","entity","id","ctrl","player_id","delete","callbacks","del","on_start","_super$on_start","super","call","entities","is_character","on_stop","_super$on_stop","_super$update","size","losing_team","push","forEach","DanmuGameLogic","_staring_countdown","Times","_gameover_countdown","_teams","_cam_ctrl","init","update_teams","clear","fighter","_this$_cam_ctrl","reset","random_get","update_bg","sounds","play_bgm","on_component_broadcast","BROADCAST_ON_START","find_component","BROADCAST_ON_STOP","change_bg","Defines","VOID_BG","_this$_cam_ctrl2","_this$_cam_ctrl3","enter_frame","Builtin_FrameId","Gone","fighter_enter","key_role","dead_gone","name","base","blinking","OID","John","TE","Team_1","Sorcerer","Team_2","update_staring","left","right","stage","max_cam_right","_this$_cam_ctrl4","_this$_cam_ctrl5","k","has","n","nn","toFixed","replace","t","undefined","DanmuOverlayLogic","component","timer","ele","times","Number","MAX_SAFE_INTEGER","release","msg","_this$open","open","clearInterval","setInterval","_this$close","close","innerHTML","from","values","sort","w","s","sum","get_team_text_color","anchor","floor","remain_times","sort_by_kd","sort_by_kills_per_spawn","sort_by_damages_per_spawn","akd","kd","DanmuOverlay","ref_div","set_open","logic","style","color","pointerEvents","display","whiteSpace","top","fontSize","opacity","fontFamily","textShadow","document","createElement","bind","GameOverlay","ele_fps","remove","ele_ups","ele_sps","ele_cam_bar","ele_loading","ele_btn_free_cam","container","cam_bar_pressing","ctx_cam_bar","cam_locked","_pointer_down","isPrimary","handle_cam_ctrl_pointer_event","_pointer_move","_pointer_up","cam_bar_handle_padding","ele_loading_tid","update_timer","update_camera","bg","_l_listener","on_loading_content","content","progress","loading","_w_listener","on_ups_update","ups","sps","UPS","SPS","on_fps_update","fps","FPS","on_pause_change","pause","on_stage_change","_this$_w_listener$on_","_this$_w_listener","on_cam_move","width","height","getBoundingClientRect","draw_cam_bar","on_disposed","init_ele_btn_free_cam","init_ele_cam_bar","append","Button","default_class_name","innerText","is_num","getContext","s_width","Math","CLASSIC_SCREEN_WIDTH","min","pageX","background_w","bar_width","player_l","player_left","player_r","player_right","x_l","x_r","hh","h","fillStyle","strokeStyle","fillRect","lineWidth","strokeRect","transition","clearTimeout","setTimeout","LF2UIEvent","_stopped","stopped","stop_propagation","stop_immediate_propagation","LF2UIKeyEvent","player","_player","_key","key","_key_code","key_code","get_rect","l","r","y","get_circ","copy_touch","touch","identifier","pageY","radiusX","radiusY","GamePad","controller","set_controller","ref_btn_U","ref_btn_D","ref_btn_L","ref_btn_R","ref_btn_a","ref_btn_j","ref_btn_d","ref_left_pad","ref_right_pad","ref_pad_text","refresh_tag","set_refresh_tag","on_player_character_add","add_player_id","_lf2$player_character","player_characters","on_player_character_del","del_player_id","left_pad","right_pad","on_resize","btns","Infinity","map","pad","btn_infos","rect","circ","prev_pressings","touches","find_touch_index","touch_id","findIndex","pad_text","handle_touchs","curr_pressings","pow","_lf2$ui","_lf2$ui2","ui","start","substring","on_touch_start","preventDefault","changedTouches","on_touch_move","splice","on_touch_end","passive","_lf2$ui3","_lf2$ui4","_Fragment","img_touch_btn_arrow","GK","BallController","BaseController","__is_ball_ctrl__","target_position","chasing","clone","frame","centery","facing","p1","p2","vx","velocity","merge_velocities","press","z","target_lost","behavior","FrameBehavior","JohnBiscuitLeaving","CtrlDevice","LocalController","_e$key","code","toLowerCase","_code_key_map","_e$key2","kc","__is_local_ctrl__","_key_code_map","_ax_using","_ay_using","ensure_player","set_key_code_map","disposer","keyboard","callback","key_code_map","Object","_key_code_map$key","Keyboard","ax","ay","axes","abs","BallsHelper","is_ball","at","CharactersHelper","num","datas","find_character","add_random","filter","EntitiesHelper","team_randoming","Randoming","TeamEnum","Team_3","Team_4","creator","Factory","inst","get_entity_creator","get_ctrl","take","new_team","random_entity_info","attach","del_all","del_entities","WeaponsHelper","random_map","random_d_map","is_weapon","find_weapon","randoms","group","duplicate","weapons","_v$base$group","some","g","manhattan_xz","DummyEnum","dummy_updaters","LockAtMid_Stand","self","lock_when_stand_and_rest","LockAtMid_Defend","key_down","key_up","LockAtMid_RowingWhenFalling","state","StateEnum","Falling","LockAtMid_JumpAndRowingWhenFalling","AvoidEnemyAllTheTime","LockAtMid_dUa","LockAtMid_dUj","LockAtMid_dDa","LockAtMid_dDj","LockAtMid_dLa","LockAtMid_dLj","LockAtMid_dRa","LockAtMid_dRj","LockAtMid_dja","LockAtMid_dUa_auto","LockAtMid_dUj_auto","LockAtMid_dDa_auto","LockAtMid_dDj_auto","LockAtMid_dLj_auto","LockAtMid_dRa_auto","LockAtMid_dRj_auto","LockAtMid_dja_auto","NearestTargets","targets","look","other","defendable","distance","condition","target","BotState_Base","defend_test","c","me","defends","random_jumping","desire","Running","dash_desire","Standing","Walking","jump_desire","is_stage_finish","KEY_NAME_LIST","find","v_rests","itr","kind","ItrKind","Block","handle_defends","action_desire","d_desire","Defend","dx","t_facing","keep_press","fast_click","handle_block","handle_bot_actions","_bot$frames","_bot$states","bot","keys_list","action_ids","frames","aid","handle_action","actions","states","BotState_Avoiding","BotStateEnum","Avoiding","_c$get_chasing","_c$get_avoiding","following","Following","en","get_chasing","av","get_avoiding","Chasing","Idle","Normal","enemy_x","enemy_z","manhattan_to","near","far","x_d","db_hit","z_d","BotState_Chasing","a_facing","my_x","my_z","my_y","next_x","en_x","next_z","en_z","next_y","en_y","guess_entity_pos","dist_en_x","dist_en_y","abs_dx","abs_dz","x_reach","w_atk_x","z_reach","w_atk_z","out_of_range","en_out_of_range","AI_STAY_CHASING_RANGE","r_atk_desire","between","r_atk_x","r_atk_z","r_stop_desire","Injured","Catching","catching","Attacking","BurnRun","Z_Moveable","r_desire","Dash","d_atk_x","d_atk_z","Jump","j_atk_x","j_atk_z","j_atk_y_min","j_atk_y_max","BotState_Idle","enter","BotState_Following","offset_x","AI_FOLLOWING_RANGE_X","offset_z","AI_FOLLOWING_RANGE_Z","bound_l","bound_r","bound_t","bound_b","is_ray_hit","ray","p0","min_x","max_x","min_z","max_z","max_d","DAFUALT_QUBE_LENGTH_POW2","reverse","dz","px","pz","project_to_line","BotController","_this$get_chasing","w_atk_f_x","w_atk_b_x","_this$get_chasing2","r_atk_b_x","r_atk_f_x","_this$get_chasing3","d_atk_b_x","d_atk_f_x","_this$get_chasing4","j_atk_b_x","j_atk_f_x","_this$get_chasing5","r_x_min","should_run","r_x_r","r_x_max","clamp","r_desire_min","r_desire_max","chasings","avoidings","dummy","_dummy","fsm","FSM","__is_bot_ctrl__","AI_W_ATK_F_X","AI_W_ATK_B_X","w_atk_m_x","AI_W_ATK_M_X","AI_W_ATK_Z","data_set","AI_R_ATK_DESIRE","AI_R_ATK_F_X","AI_R_ATK_Z","AI_D_ATK_F_X","AI_D_ATK_B_X","AI_D_ATK_Z","AI_J_ATK_F_X","AI_J_ATK_B_X","AI_J_ATK_Z","AI_J_ATK_Y_MIN","AI_J_ATK_Y_MAX","AI_J_DESIRE","AI_D_DESIRE","AI_R_DESIRE_MIN","AI_R_DESIRE_MAX","AI_R_X_MIN","AI_R_X_MAX","AI_R_STOP_DESIRE","AI_DEF_DESIRE","x1","z1","should_chase","Lying","invisible","invulnerable","should_avoid","_e$frame$bdy","bdy","should_defend","toughness","itrs","ATTCKING_STATES","DAFUALT_QUBE_LENGTH","has_atk_itr_kind","just_a_rest","ATTCKING_ITR_KINDS","DEFAULT_FORCE_BREAK_DEFEND_VALUE","bdefend","vrest","a_rest","look_other","is_ally","dd","py","vz","vy","_len","ks","_len2","_key2","_len3","_key3","ck","CONFLICTS_KEY_MAP","_len4","_key4","random_in","MAX_AI_DESIRE","_this$entity$data$bas","_this$entity$data$bas2","_this$entity$data$bas3","_dummy_updaters$this$","dataset","assign","is_chapter_finish","_ref","_ref2","_ref3","resting","Difficulty","MAX","difficulty","action","status","e_ray","judger","_this$fsm$state","_this$get_chasing6","ray_hit","run","move","stay","goto","_Checker","_OneOf","check","toString","JSON","stringify","join","_ArrayOf","_NonNagativeInt","is_non_nagative_int","one_of","check_field","obj","obj_name","field_name","expected","error","type_name","expecteds","expected_type_name","check_stage_info","info","errors","my_errors","preprocess_bg_data","jobs","layers","shadow","is_non_blank_str","images","load_img","file","BinOp","a_included_b","predicate_maps","==","!=",">=","<=","<",">","}}","!{","!}","Expression","arg_0","get_val_getter","is_expression","err","text","result","before","not","op","val_1","val_2","child","p","count","letter","alway_false","reg_result","match","word_1","word_2","predicate","getter_1","getter_2","Include","IncludedBy","NotInclude","split","console","warn","is","check_frame","_frame$bdy","_frame$itr","frame_name","entity_val_getters","E_Val","TrendX","velocity_0","PressFB","LR","PressUD","UD","PressLR","Holding_W_Type","_e$holding$data$base$","_e$holding","holding","HP_P","round","hp_max","LF2_NET_ON","is_cheat_enabled","CheatType","LF2_NET","HERO_FT_ON","HERO_FT","GIM_INK_ON","GIM_INK","HAS_TRANSFORM_DATA","transform_datas","CAUGHT","catcher","RequireSuperPunch","attacker","SuperPunchMe","diff_x","HitByCharacter","collided_list","HitByWeapon","HitByBall","HitByState","aframe","HitByItrKind","HitByItrEffect","effect","HitOnCharacter","collision_list","victim","HitOnWeapon","HitOnBall","HitOnState","bframe","HitOnSth","HP","MP","mp","VX","VY","VZ","FrameState","Shaking","shaking","Holding","HpRecoverable","hp_r","LastestCollidedItrKind","_e$lastest_collided","lastest_collided","entity_world_val_getters","get_val_getter_from_entity","word","val_getter","world_val_getter","fallback","get_val_from_lf2","arg","get_val_from_world","bot_val_getters","BotVal","Desire","BotState","_e$fsm$state$key","_e$fsm$state","EnemyY","_e$get_chasing","_e$get_chasing$entity","EnemyDiffY","_e$get_chasing2","NaN","EnemyX","_e$get_chasing3","_e$get_chasing3$entit","EnemyDiffX","_e$get_chasing4","EnemyState","_e$get_chasing5","_e$get_chasing5$entit","Safe","_e$get_chasing6","_e$get_avoiding","avoiding","EnemyOutOfRange","bot_entity_val_getters","get_val_from_bot_ctrl","is_armor_work","collision","armor","Caught","Frozen","Tired","BrokenDefend","Burning","fulltime","fireproof","ItrEffect","Fire","MFire1","MFire2","FireExplosion","antifreeze","Ice2","Ice","Ball_3006","CollisionVal","AttackerType","VictimType","SameTeam","SameFacing","AttackerState","VictimState","AttackerHasHolder","holder","VictimHasHolder","AttackerHasHolding","VictimHasHolding","AttackerOID","VictimOID","BdyKind","VictimFrameId","VictimFrameIndex_ICE","_c$victim$data$indexe","indexes","ice","ItrFall","fall","AttackerThrew","throwinjury","VictimThrew","VictimIsChasing","VictimIsFreezableBall","_c$victim$group","EntityGroup","FreezableBall","AttackerIsFreezableBall","_c$attacker$group","ArmorWork","V_FrameBehavior","NoItrEffect","A_HP_P","V_HP_P","BdyHitFlag","hit_flag","ItrHitFlag","BdyCode","ItrCode","get_val_geter_from_collision","preprocess_next_frame","nf","expression","preprocess_action","tester","test","ActionType","A_Sound","V_Sound","sound","path","load","A_NextFrame","V_NextFrame","A_Defend","V_Defend","A_BrokenDefend","V_BrokenDefend","preprocess_bdy","_data$bdy_prefabs","_bdy$hit_flag","_bdy$actions","prefab","prefab_id","bdy_prefabs","HitFlag","AllEnemy","Tag","cache_map","preprocess_frame_pic","_find","pic","pic_info","files","tex","Ditto","find_by_pic_info","scale","cache_key","scale_img_w","scale_img_h","f_i_1","pixel_w","pixel_h","f_i_2","preprocess_itr","_data$itr_prefabs","_itr$hit_flag","_itr$actions","itr_prefabs","catchingact","caughtact","preprocess_frame","opoint","cpoint","bpoint","wpoint","f_qube_1","centerx","f_qube_2","indicator_info","rect_1","rect_2","cook_frame_indicator_info","seqs","seq_map","traversal","hold","next","on_exhaustion","on_landing","unchecked_frame","center","_frame$centerx","_frame$centery","read_nums","Inner","cancelled","mgr","inner_id","data_list_map","background","EntityEnum","Entity","Fighter","Weapon","Ball","all","data_map","stages","VOID_STAGE","_cook_data","is_bg_data","is_ball_data","set_ctrl_creator","is_weapon_data","InvalidController","is_character_data","is_entity_data","async","_data$base$fall_value","_data$base$defend_val","_data$base$hp","_data$base$mp","_data$base$dead_sound","_data$base$drop_sound","_data$base$hit_sounds","_data$base$bot","_data$base$bot2","_data$base$bot3","small","head","fall_value","DEFAULT_FALL_VALUE_MAX","defend_value","DEFAULT_DEFEND_VALUE_MAX","DEFAULT_HP","DEFAULT_MP","dead_sounds","drop_sounds","hit_sounds","_","load_by_e_pic_info","Promise","preprocess_entity_data","_add_data","index_id","raw_data","_index_id","_data_id","DatMgr","BuiltIn_Imgs","BuiltIn_Dats","import_json","then","objects","backgrounds","catch","Error","_this$data_list_map$t","stage_file","unshift","process_entity_data","find_group","f","balls","_inner_id","_inner","randomings","dispose","get_randoming_by_group","is_str","find_background","get_characters_of_group","get_characters_not_in_group","split_path","suffix","endsWith","name_index","lastIndexOf","get_import_fallbacks","fallbacks","ppp","PlayerInfo","_info","storage_key","debug","character","_random_character","random_character","is_random","joined","_joined","is_com","_is_com","team_decided","_team_decided","character_decided","_character_decided","get_default_keys","__debugging","Callbacks","version","make_debugging","func","log","save","Cache","put","DATA_TYPE","DATA_VERSION","TextEncoder","encode","raw_text","TextDecoder","decode","raw_info","json5","set_name","set_key","set_ctrl","emit","set_character","set_random_character","set_team","set_joined","set_is_com","set_character_decided","is_decided","set_team_decided","get_key","visible","c1","c2","cc","now","Background","_layers","depth","middle","_update_times","add_layer","loop","Layer","layer","Item","randoming","entity_cb","on_team_changed","_this$entity_cb$on_di","_this$entity_cb","is_soldier","all_boss_dead","spawn","all_enemies_dead","enter_phase","phase_idx","data_list","randoming_list","oid","_this$randoming","_this$info$join_team","range_x","range_z","act","hp_map","mp_map","dead_join","join_team","_hp","Easy","Crazy","_mp","mp_max","NEXT_FRAME_AUTO","Status","Stage","_is_stage_finish","_is_chapter_finish","_bg","phases","_phase_idx","phase","_phase","cam_l","enemy_l","cam_r","enemy_r","drink_l","drink_r","next_stage","_disposed","_disposers","Completed","should_goto_next_stage","End","_stop_bgm","bg_id","bg_data","play_phase_bgm","music","stop_bgm","_this$_stop_bgm","set_phase","_phase$player_l","_phase$camera_l","_phase$enemy_l","_phase$drink_l","_phase$player_r","_phase$camera_r","_phase$enemy_r","_phase$drink_r","respawn","health_up","mp_up","hp_recovery","hp_respawn","mp_recovery","slot_fighters","object","spawn_object","cam_jump_to_x","player_jump_to_x","player_teams","camera_l","bound","camera_r","_this$next_stage","chapter","obj_info","_c$data$base$ce","ce","Difficult","ratio","spawn_count","stage_object","kill_all_enemies","kill_soliders","kill_boss","is_boss","kill_others","item","temp","unsafe_is_object","fn","_judger","find_ui_value","ui_info","_ui_info$values","parent","instance_of","parse_ui_value","_find_ui_value","startsWith","trim","ui_load_img","img","output","imgs","validate_ui_img_info","col","cols","row","rows","flat_ui_img_info","is_arr","dw","dh","img_key","ui_load_txt","txt","out","txts","infos","string","i18n","load_text","get_value","is_func","value_to_state","dirty","_dirty","default_value","_default_value","_values","index","insert","pop","parse_call_func_expression","first","args","enabled","properties","UIActor","_handler_map","alert","url","layout_id","set_ui","push_ui","pop_ui","to_next_img","_ref4","_ref5","message","broadcast","_ref6","play_preset","_ref7","switch_difficulty","_ref8","remove_stage","_ref9","confirm","handler","layout","raw","Alignment","UITextLoader","_jid","_style","_load_txt","_out_of_date","textures","__is_out_of_date_error","set_style","ignore_out_of_date","set_text","_txts","jid","resolve","reject","txt_idx","BackgroundNameText","_background","RANDOM_BG","_text_loader","fill_style","font","_this$lf2$datas$backg","on_resume","update_text","on_pause","on_broadcast","BuiltIn_Broadcast","SwitchBackground","background_id","curr_idx","next_idx","Invoker","_this","_f_list","clear_fn","invoke_and_clear","invoke","SlotSelStatus","SlotSelLogic","_unmount_jobs","Empty","gpl","GamePrepareState","Computer","on_player_key_down","handling_com","game_mode","Ready","Team","handle_prev_com","swtich_fighter","switch_team","handle_next_com","root","GamePrepareLogic","_characters$next$id","_characters$next","_characters$next$id2","_characters$next2","Teams","on_state_changed","_fsm$prev_state","_fsm$state","prev_state","on_cheat_changed","cheat_name","handle_hidden_character","Hidden","_this$fsm$state$on_pl","Player","StageNameText","_stage","show_all","_this$lf2$stages","is_starting","_this$_stage$starting","starting_name","SwitchStage","state_id","_count_down","_com_num","slot","coms","joined_players","_slot$fsm$state","joined_slots","CountingDown","ceil","prev_second","curr_second","empty_slots","ComNumberSel","GameSetting","_this$node$find_child","joined_num","not_joined_num","_min_com_num","_max_com_num","find_child","set_visible","leave","_this$node$find_child2","_this$handling_com","_this$node$find_child3","update_random","_this$node$find_child4","slots","background_row","search_child","stage_row","set_disabled","iterable","map_no_void","on_joined_changed","on_someone_changed","on_team_decided","m","ResetGPL","UpdateRandom","StartGame","start_game","_this$fsm$state2","_this$fsm$state2$on_p","ready_num","Regular","remains","min_com_num","max_com_num","com_num","search_components","joined_coms","set_com_num","shift","character_data","FacingFlag","Left","Right","begin_blink_time","stage_name_text","search_component","background_name_text","change_stage","ComNumButton","on_click","_this$gpl","_this$gpl2","focused","on_show","_super$on_show","DemoModeLogic","score_board","character_datas","player_count","random_take","fill","player_infos","_player_teams$shift","team_remains","DifficultyText","DifficultyLabels","on_difficulty_changed","Loop","_times","_count","set_count","set_times","continue","done","Animation","_value","_time","_duration","_direction","_fill_mode","fill_mode","set_fill_mode","direction","set_direction","set_reverse","duration","set_duration","set_value","set_time","calc","Delay","Easing","_val_1","set_val_1","_val_2","set_val_2","ease_method","_ease_method","begin","ease_in_out_sine","set_ease_method","factor","Sequence","curr_anim","_curr_anim","anims","reduce","anim","Periodic","set_offset","offset","set_scale","bottom","_b","_h","_s","method","Sine","sin","PI","FlexItem","align","Flex","_this$props$str","str","gap","_this$props$num","row_gap","_this$props$num2","col_gap","_this$props$num3","_this$props$str2","fit","bool","fit_w","_this$props$bool","fit_h","_this$props$bool2","padding","nums","padding_top","padding_right","padding_bottom","padding_left","temp_x","temp_y","my_cross","cross","self_visible","child_w","child_h","my_w","my_h","pos","item_align","item_x","mid_y","item_y","mid_x","Jalousie","_anim","click_test","_super$on_click","update_children","EndingPageLogic","jalousie","txt_node","jalousie_cbs","on_anim_end","on_jalousie_anim_end","_this$jalousie","_this$jalousie2","_this$jalousie3","_this$jalousie4","_this$jalousie5","ui_stacks","FadeInOpacity","_this$num","UIComponentExpressionBuilder","cls","parts","set_enabled","set_id","FadeOutOpacity","delay","_this$num2","FighterHead","_this$node$find_paren","_this$node$find_paren2","find_parent","_v$data$values","_this$player","_this$lf2$datas$find_","character_id","RFACE","countdown_node","hints_node","_opacity","_mesh_head","_player_callbacks","handle_changed","on_character_changed","on_random_character_changed","SpriteNode","set_center","set_position","apply","_this$player2","sprite","on_countdown","seconds","_this$player3","p_create_pic_by_img_key","set_info","_this$gpl3","FighterName","decided","_character$base$name","on_is_com_changed","FitChildren","min_left","min_top","max_right","max_bottom","cz","HorizontalLayout","ImgLoop","ease_linearity","stop","img_idx","OpacityAnimation","_this$bool","_this$bool2","prev_opacity","is_play","is_reverse","PositionAnimation","seq_anim","prev_value","pair","ScaleAnimation","prev_scale","SineOpacity","_this$num3","_this$num4","_this$num5","LaunchPage","entry_name","tap_to_launch","sound_warning","yeonface","bearface","long_text","_prel_loaded","lf2_cb","on_prel_loaded","TapHints","Introduction","Timeout","play","GoToEntry","uiinfos_loaded","on_tap","LoadingContentText","fadeout","fade_out_duration","fade_out_delay","factory","create","add_components","on_loading_end","page","_this$fadeout","OpacityHover","pointer_on_me","PlayerCtrlType","player_info","on_ctrl_changed","PlayerScore","_hp_lost","_mp_usage","_lose","_unmount_job","lose","_this$character","PlayerFighterThumb","_player_id","thumb_url","_this$character$data$","CHARACTER_THUMB","_mesh_thumb","_this$node$lookup_com","lookup_component","create_pic_by_img_info","create_pic","PlayerKeyText","key_name","_player$keys","toUpperCase","SHORT_KEY_CODES","on_key_changed","PlayerKeyEdit","others","on_pointer_down","on_foucs","_super$on_foucs","pointings","on_blur","_super$on_blur","padding_l","padding_r","padding_t","padding_b","PlayerName","player_name","_this$player$name","can_join","_this$player4","on_name_changed","PlayerNameInput","TextInput","maxLength","defaultValue","_text","PlayerScoreCell","get_style","player_score","get_txt","_this$player_score","clr","_this$player_score2","kill_sum","damage_sum","picking_sum","PlayerTeamName","TeamInfoMap","on_character_decided","_this$player5","PlayingTimeText","ms","PrefixAndDifficultyText","_prefix","_this$str","DifficultyNames","line_width","disposable","img_idx_list_map","RandomImgOnLayoutResume","_img_idx_list","img_idx_list","_super$on_resume","ReachableGroup","binded_layout","lid","Reachable","group_name","global_pos","focused_layout","focused_node","Sounds","seq","BuiltIn_Sounds","play_with_load","StageModeLogic","go_sounds","go_flashing","game_over_time","paused","playrate","GONE_FRAME_INFO","goto_next_stage","on_phase_changed","curr","on_chapter_finish","on_requrie_goto_next_stage","StageTitleShow","_opactiy","back_style","stroke_style","_stage$data$title","StageTitleText","StageTransitions","on_enter_next_stage","TeamSituationText","_team","_sum","_this$node$root$searc","rr","VerticalLayout","max_w","max_h","cx","cy","pos_list","yy","xx","VsModeLogic","is_game_over","cancellers","fighter_callbacks","next_frame","COMPONENTS","ComponentFactory","_component_map","register","Cls","components","UINode","_callbacks","_root","_focused_node","val","_val","_val2","old","_l","_parent","_state","_visible","_this$focused_node","invoke_all_visible","_disabled","_this$focused_node2","global_opacity","set_opacity","_children","set_size","set_w","set_h","_components","_pointer_on_me","pointer_down","click_flag","_click_flag","_parent$root","id_ui_map","name_ui_map","StateDelegate","txt_infos","img_infos","flip_x","flip_y","_parse_ui_value","cook","freeze","UINodeRenderer","on_pointer_up","on_pointer_cancel","on_pointer_leave","on_pointer_enter","_this$renderer$on_sta","_this$renderer","_c$on_start","actor","_this$renderer$on_sto","_this$renderer2","_c$on_stop","_this$renderer$on_res","_this$renderer3","_c$on_resume","resume","_this$renderer$on_pau","_this$renderer4","invoke_all_on_hide","del_self","_c$on_pause","_this$renderer$on_sho","_this$renderer5","_c$on_show","auto_focus","on_hide","_this$renderer$on_hid","_this$renderer6","_c$on_hide","get_val","ui_val_getter","_cook_img_idx","item_info","add_child","_component$on_add","on_add","add_children","_component$on_add2","del_components","_component$on_del","on_del","is_bool","screen_h","which","_this$data$actions","click","_c$on_click","invoke_all_on_show","_c$update","_c$on_key_down","_this$data$actions2","_c$on_key_up","_this$id_ui_map$get","find_child_by_name","_this$name_ui_map$get","lookup","find_components","_this$parent","_this$renderer$on_fou","_this$renderer7","_c$on_foucs","_this$renderer$on_blu","_this$renderer8","_c$on_blur","any","is_positive_int","find_ui_template","template_name","raw_template","_n$templates","templates","read_ui_template","template","remain_raw_info","cook_ui_info","data_or_path","_parse_ui_value4","Date","raws","_parse_ui_value2","_parse_ui_value3","cook_ui_txt_info","img_w","img_h","sw","sh","LF2PointerEvent","vec3","point","MersenneTwister","seed","matrixA","upperMask","lowerMask","mt","twist","xA","int","float","in_range","handle_ball_frozen","freeze_ball","spawn_entity","BuiltIn_OID","FreezeBall","Auto","turn_face","handle_rest","v_rest","victims","_itr$arest","arest","DEFAULT_ITR_A_REST","arest_offset","handle_stiffness","_itr$motionless","_itr$shaking","motionless","itr_motionless","itr_shaking","handle_ball_is_hit","a_cube","b_cube","velocities","Ball_Flying","Ball_Rebounding","spark","spark_point","DEFAULT_FALL_VALUE_CRITICAL","SparkEnum","CriticalHit","Hit","play_sound","handle_injury","injury","prev_hp","hp_recoverability","add_damage_sum","add_kill_sum","handle_itr_kind_freeze","_itr$dvy","_itr$dvx","_victim$data$indexes","DEFAULT_ITR_FALL","DEFAULT_FALL_VALUE_DIZZY","dvy","ivy_d","ivy_f","dvz","ivz_f","dvx","ivx_d","ivx_f","handle_fall","is_explosion","Explosion","attacker_facing","is_critical","spark_pos","Sharp","CriticalBleed","BleedFall","HitFall","fire","critical_hit","normal_fall_act","handle_itr_normal_bdy_normal","Ignore","injury_ratio","DEFAULT_ARMOR_INJURY_RATIO","motionless_ratio","DEFAULT_ARMOR_MOTIONLESS_RATIO","shaking_ratio","DEFAULT_ARMOR_SHAKING_RATIO","decrease_value","ArmorEnum","Fall","Injury","spark_type","SlientCriticalHit","SlientHit","handle_armor","_victim$data$indexes2","Bleed","backhurtact","fronthurtact","dizzy","grand_injured","same_face","collisions_keeper","pair_map","a_type_list","itr_kind_list","v_type_list","bdy_kind_list","itr_kind","a_type","bdy_kind","v_type","fns","adds","handle","_attacker$group","_victim$group","handlers","DEV","_handlers$map","collision_desc","ball_hit","itr_tests","_v$tester","pretest","bdy_tests","_v$tester2","Freeze","Weapon_IceSword","_itr$actions2","_bdy$actions2","_action$tester","collision_action_handlers","_action$tester2","lastest_collision","Whirlwind","MagicFlute","MagicFlute2","Pick","PickSecretly","ALL_ENTITY_ENUM","Catch","dizzy_catch_test","start_catch","start_caught","ForceCatch","_victim$data$indexes$","Weapon_InTheSky","HeavyWeapon_InTheSky","in_the_skys","JohnShield","WeaponSwing","CharacterThrew","DEFAULT_BREAK_DEFEND_VALUE","defend_ratio","a_next_frame","v_next_frame","DefendHit","_victim$data$indexes3","falling","handle_velocity_decay","_attacker$data$indexe","_attacker$data$indexe2","WeaponType","Heavy","picking_heavy","picking_light","is_fly","spark_frame_name","weight_x","weight","weight_y","DEFAULT_IVY_D","W_T","Weapon_Stick","Weapon_baseball","Weapon_milk","Weapon_Beer","strength","throwings","JohnChase","DennisChase","_03","AngelBlessing","AngelBlessingStart","DevilJudgementStart","ChasingSameEnemy","BatStart","FirzenDisasterStart","FirzenVolcanoStart","Bat","JulianBallStart","JulianBall","Weapon_OnHand","Weapon_Throwing","find_align_frame","Criminal","Heal","healing","WorldDataset","DEFAULT_ITR_SHAKING","DEFAULT_ITR_MOTIONLESS","fvx_f","DEFAULT_FVX_F","fvy_f","DEFAULT_FVY_F","fvz_f","DEFAULT_FVZ_F","cvy_d","cvx_d","tvx_f","DEFAULT_TVX_F","tvy_f","DEFAULT_TVY_F","tvz_f","DEFAULT_TVZ_F","DEFAULT_BEGIN_BLINK_TIME","lying_blink_time","DEFAULT_LYING_BLINK_TIME","gone_blink_time","DEFAULT_GONE_BLINK_TIME","vrest_offset","arest_offset_2","frame_wait_offset","cha_bc_spd","CHARACTER_BOUNCING_SPD","cha_bc_tst_spd_x","CHARACTER_BOUNCING_TEST_SPD_X","cha_bc_tst_spd_y","CHARACTER_BOUNCING_TEST_SPD_Y","HP_RECOVERABILITY","hp_r_ticks","HP_R_TICKS","hp_r_value","HP_R_VALUE","hp_healing_ticks","HP_HEALING_TICKS","hp_healing_value","HP_HEALING_VALUE","mp_r_ticks","MP_R_TICKS","mp_r_ratio","MP_R_RATIO","double_click_interval","DOUBLE_CLICK_INTERVAL","key_hit_duration","KEY_HIT_DURATION","friction_factor","FRICTION_FACTOR","friction_x","FRICTION_X","friction_z","FRICTION_Z","land_friction_x","LAND_FRICTION_X","land_friction_z","LAND_FRICTION_Z","MODERN_SCREEN_WIDTH","MODERN_SCREEN_HEIGHT","gravity","GRAVITY","sync_render","on_dataset_change","place","on_change","pk","fn_key","defineProperty","_o$fn_key","make_private_properties","_this$on_dataset_chan","World","on_sync_render_change","start_render","start_update","team_come","is_bot_ctrl","team_move","team_stay","_spark_data","_spark_creator","_need_FPS","_need_UPS","_FPS","_UPS","_render_worker_id","_update_worker_id","incorporeities","collisions","cam_speed","gone_entities","_enemy_chasers","_ally_chasers","_updating","_temp_entitis_set","_used_itrs","_ideally_dt","_playrate","_paused","indicator_flags","WorldRender","add_incorporeities","add_entity","add_entities","list_enemy_fighters","list_ally_fighters","del_entity","_entity$ctrl","stop_render","Render","_r_prev_time","render_once","stop_update","Interval","_prev_time","_update_count","_fix_radio","on_update","_this$lf2$ui","_this$lf2$ui2","real_dt","cmds","set_paused","update_once","infinity_mp","VsWeapon","restrict_fighter","is_player","restrict_ball","NEXT_FRAME_GONE","restrict_weapon","Drink","restrict","manhattan","e1","e2","add_enemy_chaser","del_enemy_chaser","add_ally_chaser","del_ally_chaser","self_update","chaser","collision_detections","render","old_cam_x","max_cam_left","new_x","is_local_ctrl","cur_x","acc","max_speed","new_cam_x","a_ctrl","b_ctrl","collision1","collision_detection","collision2","index1","index2","_af$itr","_bf$bdy","af","bf","l0","l1","collision_test","_bdy$tester","_itr$tester","_b_catcher$frame$cpoi","b_catcher","hurtable","_attacker$holder","_attacker$holder$fram","_attacker$data$itr_pr","atk","attacking","itr_prefab","get_bounding","ally_flag","Ally","Enemy","get_v_rest","init_spark_data","Spark","etc","cheat_info_pair","CheatKeys","CheatTypeSounds","LF2","_LF","instance","instances","ditto","_loading","playable","_playable","need_load","_ui_stacks","_difficulty","_infinity_mp","find_stage","stage_id","get_player_character","find_in_zip","paths","fisrt","zips","zip_obj","json","Importer","import_as_json","import_resource","exact","blob_url","import_as_blob_url","import_array_buffer","array_buffer","import_as_array_buffer","lang","_pointer_on_uis","_pointer_raycaster","Raycaster","_pointer_vec_2","Vector2","_mt","bat_spreading_x","BAT_CHASE_SPREADING_VX","bat_spreading_z","BAT_CHASE_SPREADING_VZ","disater_spreading_x","DISATER_SPREADING_VX","disater_spreading_y","DISATER_SPREADING_VY","jan_devil_judgement_spreading_x","DEVIL_JUDGEMENT_SPREADING_VX","jan_devil_judgement_spreading_y","DEVIL_JUDGEMENT_SPREADING_VY","bgms","on_click_character","_pointer_down_uis","_curr_key_list","_CheatType_map","_CheatType_enable_map","_cheat_sound_id_map","_dispose_check","is_disposed_error","remove_bg","_uiinfos_loaded","_uiinfos","_uiinfo_map","_strings","ImageMgr","Pointings","forget","new_id","get_pointer_intersections","scene_x","scene_y","camera","raycaster","intersections","intersect_from_raycaster","intersection","get_user_data","extra","on_pointer_move","leave_ui","stay_ui","enter_ui","Vector3","toggle_cheat_enabled","cheat_info","sound_id","is_key_down","interrupt","_e$key$toLowerCase","on_loading_file","full_size","get_short_file_size_txt","load_zip_from_info_url","info_url","md5","exists","Zip","read_buf","download","buf","arg1","is_first","load_strings","zip","load_data","load_ui","uiinfos","_zip$file","_zip$file2","_d$base$name$toLowerC","_d$base$name","team_1","_d$base$name$toLowerC2","_d$base$name2","_d$base$name$toLowerC3","_d$base$name3","_d$base$name$toLowerC4","_d$base$name4","bgm","add_player_character","_old$id","_player_info$team","old_facing","old_frame_id","del_player_character","BackgroundGroup","_this$stages","_this$stages2","StagePass","_this$_strings$get$na","_this$_strings$get","_this$_strings$get2","strings","collection_pointers","collection","load_builtin_ui","cooked_ui_info","_this$ui","_this$ui2","_this$_uiinfos","inclusive","until","_this$ui3","poppeds","popped","_this$_uiinfos2","random_int","IgnoreDisposed","_class","_applyDecoratedDescriptor","prototype","PIO","getOwnPropertyDescriptor","LoadingImg","tid","_idx","set_element","objectPosition","update_img","hide","show","Loading","big","class_name","loading_img_l","loading_img_s","CharacterSelect","placeholder","set_characters","Select","TeamSelect","key_names","key_name_arr","PlayerRow","touch_pad_on","on_click_toggle_touch_pad","set_keys","set_player_name","editing_key","set_editing_key","show_hidden","set_show_hidden","set_character_id","added","set_added","key_settings_show","set_key_settings_show","set_dummy","on_keydown","stopImmediatePropagation","stopPropagation","toLocaleLowerCase","on_click_add","_random_get","real_character_id","settings_row","Titled","float_label","Combine","Input","prefix","clearable","onBlur","ARROWUP","ARROWDOWN","ARROWLEFT","ARROWRIGHT","DELETE","PAGEDOWN","PAGEUP","Show","list_writable_properties","getOwnPropertyDescriptors","desc","writable","enumerable","getPrototypeOf","__clear_flag","useLocalString","initialState","set_val","localStorage","getItem","is_fun","setItem","removeItem","useLocalNumber","is_non_empty_str","useLocalBoolean","bot_controllers","OFF","SettingsRows","_lf2$sounds$bgm","_stage_data$phases","_stage$phase_idx","_lf2$difficulty","_stage_phase_list$sta","_stage_data","stage_list","set_stage_list","set_bg_id","set_stage_id","set_bgm","stage_phase_list","set_stage_phases","stage_phase_idx","set_stage_phase_idx","set_difficulty","world_properties","set_world_properties","_lf2$sounds$bgm2","_lf2$difficulty2","_stage$data$id","_stage$bg$data$id","_stage$data$phases","_stage$phase_idx2","rwn","set_rwn","rcn","set_rcn","weapon_id","set_weapon_id","c_id","bot_ctrl","set_bot_ctrl","phase_desc","show_stage_settings","Boolean","show_bg_settings","show_weapon_settings","InputNumber","step","on_click_add_weapon","on_click_del_weapon","show_bot_settings","on_click_add_bot","controller_creator","show_world_tuning","world_field_map","precision","Cross","fullscreen","FullScreen","ref_lf2","set_lf2","ele_game_canvas","set_ele_game_canvas","ele_game_overlay","set_ele_game_overlay","ele_root","set_ele_root","workspace","game_cell","pannel_cell","set_workspace","dat_viewer_open","set_dat_viewer_open","editor_open","set_editor_open","game_overlay","set_game_overlay","showing_panel","set_showing_panel","control_panel_visible","set_control_panel_visible","cheat_1","_set_cheat_1","cheat_2","_set_cheat_2","cheat_3","_set_cheat_3","set_loading","loaded","set_loaded","_set_paused","_set_bg_id","muted","_set_muted","bgm_muted","_set_bgm_muted","sound_muted","_set_sound_muted","volume","_set_volume","bgm_volume","_set_bgm_volume","sound_volume","_set_sound_volume","render_size_mode","set_render_size_mode","render_fixed_scale","set_render_fixed_scale","custom_render_fixed_scale","set_custom_render_fixed_scale","v_align","set_v_align","body","parentElement","h_align","set_h_align","custom_h_align","set_custom_h_align","custom_v_align","set_custom_v_align","debug_ui_pos","set_debug_ui_pos","set_touch_pad_on","is_fullscreen","_set_is_fullscreen","set_sync_render","set_indicator_flags","fast_forward","set_fast_forward","toggle_fullscreen","useCallback","exit","_set_layout","layouts","set_layouts","navigator","language","set_muted","set_volume","set_bgm_muted","set_bgm_volume","set_sound_muted","set_sound_volume","on_touchstart","invoker","on_sync_render_changed","on_ui_loaded","layout_data_list","on_layout_changed","_v$id","on_loading_start","on_muted_changed","on_bgm_muted_changed","on_sound_muted_changed","on_volume_changed","on_bgm_volume_changed","on_sound_volume_changed","contaner","win_w","win_h","view_w","view_h","s_1","s_2","h_align_","v_align_","resize_ob","ResizeObserver","observe","disconnect","touch_pad_player_items","scene","set_canvas","useWorkspaces","adpater","DomAdapter","Workspaces","game_slot","on_leaves_changed","_adpater$get_cell","leaf","leaves","cell","adapter","get_cell","appendChild","pannel_slot","keep","game_cell_view","createPortal","game_contiainer","tabIndex","game_canvas","onContextMenu","onContextMenuCapture","gone","loading_img","debug_pannel","_lf2$sounds","_lf2$sounds2","img_btn_1_1","pannel_cell_view","debug_ui","on_click_download_zip","href","on_click_load_local_zip","open_file","accept","read_file","Log","print","marginLeft","arithmetic_progression","INDICATINGS","toggle_bit","app","DatViewer","onClose","EditorView","zIndex","default_parse","outter_val","ref_value","ref_onChange","inner_val","_set_inner_val","_onClick","next_index","next_item","next_value"],"sourceRoot":""}