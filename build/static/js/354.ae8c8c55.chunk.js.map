{"version":3,"file":"static/js/354.ae8c8c55.chunk.js","mappings":"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","sources":["../node_modules/@fimagine/writeboard/writeboard/event/Events.ts","../node_modules/@fimagine/writeboard/writeboard/event/EventType.ts","../node_modules/@fimagine/writeboard/writeboard/utils/Numbers.ts","../node_modules/@fimagine/writeboard/writeboard/utils/BinaryRange.ts","../node_modules/@fimagine/writeboard/writeboard/utils/BinaryTree.ts","../node_modules/@fimagine/writeboard/writeboard/utils/Rect.ts","../node_modules/@fimagine/writeboard/writeboard/utils/QuadTree.ts","../node_modules/@fimagine/writeboard/writeboard/utils/Vector.ts","../node_modules/@fimagine/writeboard/writeboard/utils/RotatedRect.ts","../node_modules/@fimagine/writeboard/writeboard/utils/Arrays.ts","../node_modules/@fimagine/writeboard/writeboard/utils/helper.ts","../node_modules/@fimagine/writeboard/writeboard/shape/ShapeEnum.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/ShapeStatus.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/IShapeStyle.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/ShapeEvent.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/tools/ToolEnum.ts","../node_modules/@fimagine/writeboard/writeboard/shape/base/ShapeNeedPath.ts","../node_modules/@fimagine/writeboard/writeboard/shape/cross/Data.ts","../node_modules/@fimagine/writeboard/writeboard/mgr/Gaia.ts","../node_modules/@fimagine/writeboard/writeboard/shape/cross/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/utils/RectHelper.ts","../node_modules/@fimagine/writeboard/writeboard/shape/img/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/pen/Data.ts","../node_modules/@fimagine/writeboard/writeboard/tools/base/SimpleTool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/cross/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/halftick/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/halftick/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/halftick/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/img/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/img/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/lines/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/lines/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/lines/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/oval/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/oval/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/oval/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/pen/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/pen/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/polygon/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/polygon/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/polygon/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/rect/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/rect/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/rect/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/text/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/text/TextSelection.ts","../node_modules/@fimagine/writeboard/writeboard/shape/text/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/text/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/shape/tick/Data.ts","../node_modules/@fimagine/writeboard/writeboard/shape/tick/Shape.ts","../node_modules/@fimagine/writeboard/writeboard/shape/tick/Tool.ts","../node_modules/@fimagine/writeboard/writeboard/board/Layer.ts","../node_modules/@fimagine/writeboard/writeboard/board/Board.ts","../node_modules/@fimagine/writeboard/writeboard/board/ShapeDecoration.ts","../node_modules/@fimagine/writeboard/writeboard/mgr/ShapesMgr.ts","../node_modules/@fimagine/writeboard/writeboard/tools/base/InvalidTool.ts","../node_modules/@fimagine/writeboard/writeboard/mgr/FactoryEnum.ts","../node_modules/@fimagine/writeboard/writeboard/fonts/checker.ts","../node_modules/@fimagine/writeboard/writeboard/fonts/builtInFontFamilies.ts","../node_modules/@fimagine/writeboard/writeboard/mgr/Factory.ts","../node_modules/@fimagine/writeboard/writeboard/tools/selector/ShapeRotator.ts","../node_modules/@fimagine/writeboard/writeboard/tools/selector/ShapeSelector.ts","../node_modules/@fimagine/writeboard/writeboard/tools/selector/SelectorTool.ts","../node_modules/@fimagine/writeboard/writeboard/utils/Throttle.ts","../node_modules/@fimagine/writeboard/writeboard/features/ActionQueue.ts"],"sourcesContent":["import type { Layer } from \"../board/Layer\";\r\nimport type { ShapeType } from \"../shape/ShapeEnum\";\r\nimport type { IShapeData } from \"../shape/base/Data\";\r\nimport type { ToolType } from \"../tools/ToolEnum\";\r\nimport { IRect } from \"../utils\";\r\nimport type { EventEnum } from \"./EventType\";\r\n\r\nexport namespace Events {\r\n  export interface IOperatorDetail {\r\n    operator: string;\r\n  }\r\n  export interface IShapesDetail extends IOperatorDetail {\r\n    shapeDatas: IShapeData[];\r\n  }\r\n  export interface IShagesDetail<T extends Partial<IShapeData>> extends IOperatorDetail {\r\n    shapeType: ShapeType;\r\n    shapeDatas: [T, T][];\r\n  }\r\n  export interface IAnyShagesDetail extends IOperatorDetail {\r\n    tool: ToolType,\r\n    shapeDatas: (readonly [Partial<IShapeData>, Partial<IShapeData>])[];\r\n  }\r\n  export interface ILayerDetail extends IOperatorDetail {\r\n    layer: Layer\r\n  }\r\n  export interface IShapeGeoData {\r\n    i: string;\r\n    x?: number;\r\n    y?: number;\r\n    w?: number;\r\n    h?: number;\r\n    r?: number;\r\n  }\r\n  export function pickShapePosData(data: IShapeData): IShapeGeoData {\r\n    return {\r\n      i: data.i,\r\n      x: data.x,\r\n      y: data.y,\r\n    }\r\n  }\r\n  export function pickShapeGeoData(data: IShapeData): IShapeGeoData {\r\n    return {\r\n      i: data.i,\r\n      x: data.x,\r\n      y: data.y,\r\n      w: data.w,\r\n      h: data.h,\r\n      r: data.r\r\n    }\r\n  }\r\n  export interface IToolChangedDetail {\r\n    operator: string;\r\n    from?: ToolType;\r\n    to?: ToolType;\r\n  }\r\n  export interface IRectChangeDetail {\r\n    form: IRect;\r\n    to: IRect;\r\n  }\r\n  export interface EventDetailMap {\r\n    [EventEnum.ShapesAdded]: IShapesDetail;\r\n    [EventEnum.ShapesRemoved]: IShapesDetail;\r\n    [EventEnum.ShapesChanging]: IShagesDetail<IShapeData>;\r\n    [EventEnum.ShapesChanged]: IShagesDetail<IShapeData>;\r\n    [EventEnum.ShapesDone]: IShapesDetail;\r\n    [EventEnum.ShapesGeoChanging]: IAnyShagesDetail;\r\n    [EventEnum.ShapesGeoChanged]: IAnyShagesDetail;\r\n    [EventEnum.ToolChanged]: IToolChangedDetail;\r\n    [EventEnum.LayerAdded]: ILayerDetail;\r\n    [EventEnum.LayerRemoved]: ILayerDetail;\r\n    [EventEnum.ShapesSelected]: IShapesDetail;\r\n    [EventEnum.ShapesDeselected]: IShapesDetail;\r\n    [EventEnum.WorldRectChanged]: IRectChangeDetail;\r\n    [EventEnum.ViewportChanged]: IRectChangeDetail;\r\n  }\r\n  export interface EventMap extends HTMLElementEventMap {\r\n    [EventEnum.ShapesAdded]: CustomEvent<EventDetailMap[EventEnum.ShapesAdded]>;\r\n    [EventEnum.ShapesRemoved]: CustomEvent<EventDetailMap[EventEnum.ShapesRemoved]>;\r\n    [EventEnum.ShapesChanging]: CustomEvent<EventDetailMap[EventEnum.ShapesChanging]>;\r\n    [EventEnum.ShapesChanged]: CustomEvent<EventDetailMap[EventEnum.ShapesChanged]>;\r\n    [EventEnum.ShapesDone]: CustomEvent<EventDetailMap[EventEnum.ShapesDone]>;\r\n    [EventEnum.ShapesGeoChanging]: CustomEvent<EventDetailMap[EventEnum.ShapesGeoChanging]>;\r\n    [EventEnum.ShapesGeoChanged]: CustomEvent<EventDetailMap[EventEnum.ShapesGeoChanged]>;\r\n    [EventEnum.ToolChanged]: CustomEvent<EventDetailMap[EventEnum.ToolChanged]>;\r\n    [EventEnum.LayerAdded]: CustomEvent<EventDetailMap[EventEnum.LayerAdded]>;\r\n    [EventEnum.LayerRemoved]: CustomEvent<EventDetailMap[EventEnum.LayerRemoved]>;\r\n    [EventEnum.ShapesSelected]: CustomEvent<EventDetailMap[EventEnum.ShapesSelected]>;\r\n    [EventEnum.ShapesDeselected]: CustomEvent<EventDetailMap[EventEnum.ShapesDeselected]>;\r\n    [EventEnum.WorldRectChanged]: CustomEvent<EventDetailMap[EventEnum.WorldRectChanged]>;\r\n    [EventEnum.ViewportChanged]: CustomEvent<EventDetailMap[EventEnum.ViewportChanged]>;\r\n  }\r\n}\r\n\r\n","export enum EventEnum {\r\n  Invalid = '',\r\n  ShapesAdded = 'SHAPES_ADDED',\r\n  ShapesRemoved = 'SHAPES_REMOVED',\r\n  ShapesChanging = 'SHAPES_CHANGING',\r\n  ShapesChanged = 'SHAPES_CHANGED',\r\n  ShapesDone = 'SHAPES_DONE',\r\n  ShapesGeoChanging = 'SHAPES_GEO_CHANGING',\r\n  ShapesGeoChanged = 'SHAPES_GEO_CHANGED',\r\n  ToolChanged = 'TOOL_CHANGED',\r\n  LayerAdded = 'LAYER_ADDED',\r\n  LayerRemoved = 'LAYER_REMOVED',\r\n  ShapesSelected = 'SHAPES_SELECTED',\r\n  ShapesDeselected = 'SHAPES_DESELECTED',\r\n  WorldRectChanged = 'WORLD_RECT_CHANGED',\r\n  ViewportChanged = 'VIEWPORT_CHANGED'\r\n}\r\nexport type EventType = EventEnum | string;\r\n","export namespace Numbers {\r\n  export function equals(a: number, b: number) {\r\n    return Math.abs(a - b) <= Number.EPSILON\r\n  }\r\n}\r\nexport namespace Degrees {\r\n  export function normalized(v: number): number\r\n  export function normalized(v: null): null\r\n  export function normalized(v: undefined): undefined\r\n  export function normalized(v?: number | null): number | undefined | null {\r\n    if (!v) return v\r\n    else if (Numbers.equals(0, v)) return 0\r\n    else if (v < 0) return v % (Math.PI * 2) + Math.PI * 2\r\n    else return v % (Math.PI * 2)\r\n  }\r\n  export function angle(v: number): number\r\n  export function angle(v: null): null\r\n  export function angle(v: undefined): undefined\r\n  export function angle(v?: number | null): number | undefined | null {\r\n    return v ? 180 * v / Math.PI : v\r\n  }\r\n}","export interface IBinaryRange {\r\n  from: number;\r\n  to: number;\r\n}\r\nexport class BinaryRange implements IBinaryRange {\r\n  from: number;\r\n  to: number;\r\n  constructor(f: number, t: number) {\r\n    this.from = f;\r\n    this.to = t;\r\n  }\r\n  set(range: IBinaryRange) {\r\n    this.from = range.from\r\n    this.to = range.to\r\n  }\r\n  get mid() {\r\n    return (this.from + this.to) / 2\r\n  }\r\n  hit(other: IBinaryRange) {\r\n    return !(this.from > other.to) && !(this.to < other.from)\r\n  }\r\n}\r\n","import { BinaryRange, IBinaryRange } from \"./BinaryRange\";\r\nimport { ITree } from \"./ITree\";\r\n\r\nexport type BinaryTreeOptions<T = any> = {\r\n  range: IBinaryRange\r\n  getItemRange: (item: T) => IBinaryRange\r\n  getTree?: (item: T) => BinaryTree<T> | undefined,\r\n  onTreeChanged?: (item: T, from: BinaryTree<T>, to: BinaryTree<T>) => void,\r\n  maxItems?: number\r\n}\r\nexport class BinaryTree<T = any> implements ITree<T> {\r\n  private _range = new BinaryRange(0, 0);\r\n  private _items: T[] = [];\r\n  private _child0: BinaryTree<T> | undefined;\r\n  private _child1: BinaryTree<T> | undefined;\r\n  private _childRange0: BinaryRange | undefined;\r\n  private _childRange1: BinaryRange | undefined;\r\n  private _itemCount: number = 0;\r\n  private _level: number = 0;\r\n  private _parent: BinaryTree<T> | undefined\r\n  private _opts: BinaryTreeOptions<T>\r\n  constructor(opts: BinaryTreeOptions<T>) {\r\n    this._opts = { ...opts }\r\n    this._range.set(opts.range);\r\n  }\r\n\r\n  get children(): (BinaryTree<T> | undefined)[] { return [this._child0, this._child1] }\r\n  get maxItems() { return this._opts.maxItems || 20 }\r\n  get parent() { return this._parent }\r\n  get level() { return this._level }\r\n  get itemCount() { return this._itemCount; }\r\n  get range(): BinaryRange { return this._range; }\r\n  get items() { return this._items; }\r\n  get child0() { return this._child0; }\r\n  get child1() { return this._child1; }\r\n\r\n  private get genChild0() {\r\n    if (!this._child0) {\r\n      this._child0 = new BinaryTree<T>({\r\n        ...this._opts,\r\n        range: this.childRange0,\r\n      });\r\n      this._child0._parent = this\r\n      this._child0._level = this._level + 1;\r\n    }\r\n    return this._child0;\r\n  }\r\n  private get genChild1() {\r\n    if (!this._child1) {\r\n      this._child1 = new BinaryTree<T>({\r\n        ...this._opts,\r\n        range: this.childRange1\r\n      });\r\n      this._child1._parent = this\r\n      this._child1._level = this._level + 1;\r\n    }\r\n    return this._child1;\r\n  }\r\n  private get childRange0(): BinaryRange {\r\n    if (!this._childRange0)\r\n      this._childRange0 = new BinaryRange(this._range.from, this._range.mid);\r\n    return this._childRange0;\r\n  }\r\n  private get childRange1(): BinaryRange {\r\n    if (!this._childRange1)\r\n      this._childRange1 = new BinaryRange(this._range.mid, this._range.to);\r\n    return this._childRange1;\r\n  }\r\n  split() {\r\n    if (this._child0 && this._child1)\r\n      return;\r\n    let item: T, itemRange: IBinaryRange, inChild0: number, inChild1: number, in_lb: number, in_rb: number, hitCount: number;\r\n    for (let i = 0; i < this._items.length; ++i) {\r\n      item = this._items[i];\r\n      itemRange = this._opts.getItemRange(item);\r\n      inChild0 = this.childRange0.hit(itemRange) ? 1 : 0;\r\n      inChild1 = this.childRange1.hit(itemRange) ? 1 : 0;\r\n      hitCount = inChild0 + inChild1;\r\n      if (hitCount !== 1)\r\n        continue;\r\n      this._items.splice(i, 1);\r\n      --i;\r\n      if (inChild0) {\r\n        this.genChild0.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild0)\r\n      } else if (inChild1) {\r\n        this.genChild1.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild1)\r\n      }\r\n    }\r\n  }\r\n  insert(item: T): BinaryTree<T> {\r\n    ++this._itemCount;\r\n    const itemRange = this._opts.getItemRange(item);\r\n    const needSplit = this._itemCount >= this.maxItems\r\n    needSplit && this.split();\r\n\r\n    if (needSplit) {\r\n      const inChild0 = this.childRange0.hit(itemRange) ? 1 : 0;\r\n      const inChild1 = this.childRange1.hit(itemRange) ? 1 : 0;\r\n      if (inChild0)\r\n        return this.genChild0.insert(item);\r\n      else if (inChild1)\r\n        return this.genChild1.insert(item);\r\n    }\r\n    this._items.push(item);\r\n    return this;\r\n  }\r\n  removeOnlyUnderMe(item: T) {\r\n    const idx = this._items.indexOf(item);\r\n    if (idx >= 0) {\r\n      --this._itemCount;\r\n      this._items.splice(idx, 1);\r\n      return true;\r\n    }\r\n    return false\r\n  }\r\n  remove(item: T) {\r\n    if (this._opts.getTree) {\r\n      // 从子节点到父节点的移除逻辑\r\n      let tree = this._opts.getTree(item)\r\n      if (!tree) return false\r\n      const result = tree.removeOnlyUnderMe(item)\r\n      tree._itemCount++\r\n      let treeNeedMerge: BinaryTree<T> | undefined\r\n      do {\r\n        --tree._itemCount\r\n        if (tree._itemCount <= 0) {\r\n          if (tree.parent?._child0 === tree) delete tree.parent._child0\r\n          if (tree.parent?._child1 === tree) delete tree.parent._child1\r\n        } else if (tree._itemCount < this.maxItems) {\r\n          treeNeedMerge = tree\r\n        }\r\n        tree = tree.parent\r\n      } while (tree)\r\n\r\n      treeNeedMerge?.merge()\r\n      return result\r\n    }\r\n\r\n    // 从父节点的到子节点移除逻辑\r\n    if (this.removeOnlyUnderMe(item))\r\n      return true\r\n    if (this._child0?.remove(item)) {\r\n      !this._child0.itemCount && delete this._child0;\r\n    } else if (this._child1?.remove(item)) {\r\n      !this._child1.itemCount && delete this._child1;\r\n    } else {\r\n      return false;\r\n    }\r\n    --this._itemCount;\r\n    if (this._itemCount < this.maxItems)\r\n      this.merge()\r\n    return true\r\n  }\r\n  merge() {\r\n    this.children.forEach(child => {\r\n      if (!child) return\r\n      child.merge()\r\n      child._items.forEach(item => {\r\n        this.items.push(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, child, this)\r\n      })\r\n    })\r\n    delete this._child0\r\n    delete this._child1\r\n  }\r\n}\r\n","import { IVector } from \"./Vector\"\r\n\r\nexport interface IRect { x: number, y: number, w: number, h: number }\r\nexport class Rect implements IRect {\r\n  x: number\r\n  y: number\r\n  w: number\r\n  h: number\r\n  get top() { return this.y }\r\n  get left() { return this.x }\r\n  get right() { return this.x + this.w }\r\n  get bottom() { return this.y + this.h }\r\n  set top(v: number) {\r\n    this.h = this.bottom - v;\r\n    this.y = v;\r\n  }\r\n  set left(v: number) {\r\n    this.w = this.right - v;\r\n    this.x = v;\r\n  }\r\n  set right(v: number) {\r\n    this.w = v - this.x\r\n  }\r\n  set bottom(v: number) {\r\n    this.h = v - this.y\r\n  }\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n    this.w = w\r\n    this.h = h\r\n  }\r\n  pure(): IRect {\r\n    return {\r\n      x: this.x,\r\n      y: this.y,\r\n      w: this.w,\r\n      h: this.h,\r\n    }\r\n  }\r\n  set(o: IRect) {\r\n    this.x = o.x\r\n    this.y = o.y\r\n    this.w = o.w\r\n    this.h = o.h\r\n  }\r\n  hit(b: IRect | IVector): boolean {\r\n    return Rect.hit(this, b)\r\n  }\r\n  toString() {\r\n    return `Rect(x=${this.x}, y=${this.x}, w=${this.w}, h=${this.h})`\r\n  }\r\n  moveTo(x: number, y: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  mid(): IVector {\r\n    return { x: this.x + this.w / 2, y: this.y + this.h / 2 }\r\n  }\r\n  static create(rect: IRect) {\r\n    return new Rect(rect.x, rect.y, rect.w, rect.h)\r\n  }\r\n  static pure(x: number, y: number, w: number, h: number): IRect {\r\n    return { x, y, w, h };\r\n  }\r\n  static bounds(r1: IRect, r2: IRect): IRect {\r\n    const x = Math.min(r1.x, r2.x)\r\n    const y = Math.min(r1.y, r2.y)\r\n    return {\r\n      x, y,\r\n      w: Math.max(r1.x + r1.w, r2.x + r2.w) - x,\r\n      h: Math.max(r1.y + r1.h, r2.y + r2.h) - y\r\n    }\r\n  }\r\n  static hit(a: IRect, b: IRect | IVector): boolean {\r\n    let w = 0\r\n    let h = 0\r\n    if ('w' in b && 'h' in b) {\r\n      w = b.w\r\n      h = b.h\r\n    }\r\n    return (\r\n      a.x + a.w >= b.x &&\r\n      b.x + w >= a.x &&\r\n      a.y + a.h >= b.y &&\r\n      b.y + h >= a.y\r\n    )\r\n  }\r\n  static intersect(a: IRect, b: IRect): IRect {\r\n    const x = Math.max(a.x, b.x)\r\n    const y = Math.max(a.y, b.y)\r\n    const right = Math.min(a.x + a.w, b.x + b.w)\r\n    const bottom = Math.min(a.y + a.h, b.y + b.h)\r\n    return {\r\n      x, y,\r\n      w: right - x,\r\n      h: bottom - y\r\n    }\r\n  }\r\n}","import { ITree } from \"./ITree\"\r\nimport { IRect, Rect } from \"./Rect\"\r\nexport type QuadTreeOptions<T = any> = {\r\n  rect: IRect\r\n  getItemRect: (item: T) => IRect,\r\n  maxItems?: number,\r\n  getTree?: (item: T) => QuadTree<T> | undefined,\r\n  onTreeChanged?: (item: T, from: QuadTree<T>, to: QuadTree<T>) => void,\r\n}\r\nexport class QuadTree<T = any> implements ITree<T> {\r\n  private _items: T[] = []\r\n  private _child0: QuadTree<T> | undefined\r\n  private _child1: QuadTree<T> | undefined\r\n  private _child2: QuadTree<T> | undefined\r\n  private _child3: QuadTree<T> | undefined\r\n  private _childRect0: Rect | undefined\r\n  private _childRect1: Rect | undefined\r\n  private _childRect2: Rect | undefined\r\n  private _childRect3: Rect | undefined\r\n  private _itemCount: number = 0\r\n  private _rect = new Rect(0, 0, 0, 0)\r\n  private _opts: QuadTreeOptions<T>\r\n  private _level: number = 0\r\n  private _parent: QuadTree<T> | undefined\r\n  constructor(opts: QuadTreeOptions<T>) {\r\n    this._opts = { ...opts }\r\n    this._rect.set(opts.rect)\r\n  }\r\n  get children(): (QuadTree<T> | undefined)[] { return [this._child0, this._child1, this._child2, this._child3] }\r\n  get maxItems() { return this._opts.maxItems || 20 }\r\n  get parent() { return this._parent }\r\n  get level() { return this._level }\r\n  get itemCount() { return this._itemCount }\r\n  get rect(): Rect { return this._rect }\r\n  get items() { return this._items }\r\n  get child0() { return this._child0 }\r\n  get child1() { return this._child1 }\r\n  get child2() { return this._child2 }\r\n  get child3() { return this._child3 }\r\n  private get genChild0() {\r\n    if (!this._child0) {\r\n      this._child0 = new QuadTree<T>({\r\n        ...this._opts,\r\n        rect: this.childRect0,\r\n      })\r\n      this._child0._parent = this\r\n      this._child0._level = this._level + 1\r\n    }\r\n    return this._child0\r\n  }\r\n  private get genChild1() {\r\n    if (!this._child1) {\r\n      this._child1 = new QuadTree<T>({\r\n        ...this._opts,\r\n        rect: this.childRect1\r\n      })\r\n      this._child1._parent = this\r\n      this._child1._level = this._level + 1\r\n    }\r\n    return this._child1\r\n  }\r\n  private get genChild2() {\r\n    if (!this._child2) {\r\n      this._child2 = new QuadTree<T>({\r\n        ...this._opts,\r\n        rect: this.childRect2\r\n      })\r\n      this._child2._parent = this\r\n      this._child2._level = this._level + 1\r\n    }\r\n    return this._child2\r\n  }\r\n  private get genChild3() {\r\n    if (!this._child3) {\r\n      this._child3 = new QuadTree<T>({\r\n        ...this._opts,\r\n        rect: this.childRect3\r\n      })\r\n      this._child3._parent = this\r\n      this._child3._level = this._level + 1\r\n    }\r\n    return this._child3\r\n  }\r\n  private get childRect0(): Rect {\r\n    if (!this._childRect0) {\r\n      const { x, y } = this.rect\r\n      const w = this.rect.w / 2\r\n      const h = this.rect.h / 2\r\n      this._childRect0 = new Rect(x, y, w, h)\r\n    }\r\n    return this._childRect0\r\n  }\r\n  private get childRect1(): Rect {\r\n    if (!this._childRect1) {\r\n      const { y } = this.rect\r\n      const w = this.rect.w / 2\r\n      const h = this.rect.h / 2\r\n      const { x: midX } = this.rect.mid()\r\n      this._childRect1 = new Rect(midX, y, w, h)\r\n    }\r\n    return this._childRect1\r\n  }\r\n  private get childRect2(): Rect {\r\n    if (!this._childRect2) {\r\n      const { x } = this.rect\r\n      const w = this.rect.w / 2\r\n      const h = this.rect.h / 2\r\n      const { y: midY } = this.rect.mid()\r\n      this._childRect2 = new Rect(x, midY, w, h)\r\n    }\r\n    return this._childRect2\r\n  }\r\n  private get childRect3(): Rect {\r\n    if (!this._childRect3) {\r\n      const w = this.rect.w / 2\r\n      const h = this.rect.h / 2\r\n      const { x: midX, y: midY } = this.rect.mid()\r\n      this._childRect3 = new Rect(midX, midY, w, h)\r\n    }\r\n    return this._childRect3\r\n  }\r\n\r\n  split() {\r\n    if (this._child0 && this._child1 && this._child2 && this._child3) return\r\n    let item: T,\r\n      itemRect: IRect,\r\n      inChild0: number,\r\n      inChild1: number,\r\n      inChild2: number,\r\n      inChild3: number,\r\n      hitCount: number\r\n    for (let i = 0; i < this._items.length; ++i) {\r\n      item = this._items[i]\r\n      itemRect = this._opts.getItemRect(item)\r\n      inChild0 = this.childRect0.hit(itemRect) ? 1 : 0\r\n      inChild1 = this.childRect1.hit(itemRect) ? 1 : 0\r\n      inChild2 = this.childRect2.hit(itemRect) ? 1 : 0\r\n      inChild3 = this.childRect3.hit(itemRect) ? 1 : 0\r\n      hitCount = inChild0 + inChild1 + inChild2 + inChild3\r\n      if (hitCount !== 1)\r\n        continue\r\n      this._items.splice(i, 1)\r\n      --i\r\n      if (inChild0) {\r\n        this.genChild0.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild0)\r\n      } else if (inChild1) {\r\n        this.genChild1.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild1)\r\n      } else if (inChild2) {\r\n        this.genChild2.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild2)\r\n      } else if (inChild3) {\r\n        this.genChild3.insert(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, this, this.genChild3)\r\n      }\r\n    }\r\n  }\r\n  insert(item: T): QuadTree<T> {\r\n    ++this._itemCount\r\n    const itemRect = this._opts.getItemRect(item)\r\n    const needSplit = this._itemCount >= this.maxItems\r\n    needSplit && this.split();\r\n\r\n    if (needSplit) {\r\n      const inChild0 = this.childRect0.hit(itemRect) ? 1 : 0\r\n      const inChild1 = this.childRect1.hit(itemRect) ? 1 : 0\r\n      const inChild2 = this.childRect2.hit(itemRect) ? 1 : 0\r\n      const inChild3 = this.childRect3.hit(itemRect) ? 1 : 0\r\n      if (inChild0) return this.genChild0.insert(item)\r\n      else if (inChild1) return this.genChild1.insert(item)\r\n      else if (inChild2) return this.genChild2.insert(item)\r\n      else if (inChild3) return this.genChild3.insert(item)\r\n    }\r\n    this._items.push(item)\r\n    return this\r\n  }\r\n  removeOnlyUnderMe(item: T) {\r\n    const idx = this._items.indexOf(item);\r\n    if (idx >= 0) {\r\n      --this._itemCount;\r\n      this._items.splice(idx, 1);\r\n      return true;\r\n    }\r\n    return false\r\n  }\r\n  remove(item: T) {\r\n    if (this._opts.getTree) {\r\n      // 从子节点到父节点的移除逻辑\r\n      let tree = this._opts.getTree(item)\r\n      if (!tree) return false\r\n      const result = tree.removeOnlyUnderMe(item)\r\n      tree._itemCount++\r\n      let treeNeedMerge: QuadTree<T> | undefined\r\n      do {\r\n        --tree._itemCount\r\n        if (tree._itemCount <= 0) {\r\n          if (tree.parent?._child0 === tree) delete tree.parent._child0\r\n          if (tree.parent?._child1 === tree) delete tree.parent._child1\r\n          if (tree.parent?._child2 === tree) delete tree.parent._child2\r\n          if (tree.parent?._child3 === tree) delete tree.parent._child3\r\n        } else if (tree._itemCount < this.maxItems) {\r\n          treeNeedMerge = tree\r\n        }\r\n        tree = tree.parent\r\n      } while (tree)\r\n\r\n      treeNeedMerge?.merge()\r\n      return result\r\n    }\r\n\r\n    // 从父节点的到子节点移除逻辑\r\n    if (this.removeOnlyUnderMe(item))\r\n      return true\r\n    if (this._child0?.remove(item)) {\r\n      !this._child0.itemCount && delete this._child0;\r\n    } else if (this._child1?.remove(item)) {\r\n      !this._child1.itemCount && delete this._child1;\r\n    } else if (this._child2?.remove(item)) {\r\n      !this._child2.itemCount && delete this._child2;\r\n    } else if (this._child3?.remove(item)) {\r\n      !this._child3.itemCount && delete this._child3;\r\n    } else {\r\n      return false;\r\n    }\r\n    --this._itemCount;\r\n    if (this._itemCount < this.maxItems)\r\n      this.merge()\r\n    return true\r\n\r\n  }\r\n  merge() {\r\n    this.children.forEach(child => {\r\n      if (!child) return\r\n      child.merge()\r\n      child._items.forEach(item => {\r\n        this.items.push(item)\r\n        this._opts.onTreeChanged && this._opts.onTreeChanged(item, child, this)\r\n      })\r\n    })\r\n    delete this._child0\r\n    delete this._child1\r\n    delete this._child2\r\n    delete this._child3\r\n  }\r\n}\r\n\r\n","\r\nexport interface IVector { x: number, y: number }\r\nexport class Vector implements IVector {\r\n  x = 0\r\n  y = 0\r\n  constructor(x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  plus(o: IVector): this { return this.add(o.x, o.y); }\r\n\r\n  add(x: number, y: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    return this;\r\n  }\r\n\r\n  static mid(v0: IVector, v1: IVector, factor: number = 0.5): IVector {\r\n    return {\r\n      x: v0.x + (v1.x - v0.x) * factor,\r\n      y: v0.y + (v1.y - v0.y) * factor,\r\n    }\r\n  }\r\n  static pure(x: number, y: number): IVector {\r\n    return { x, y }\r\n  }\r\n  static distance(a: IVector, b: IVector): number {\r\n    return Math.sqrt(\r\n      Math.pow(a.x - b.x, 2) +\r\n      Math.pow(a.y - b.y, 2)\r\n    )\r\n  }\r\n  static manhattan(a: IVector, b: IVector): number {\r\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n  }\r\n  static dot(a: IVector, b: IVector) {\r\n    return Math.abs(a.x * b.x + a.y * b.y);\r\n  }\r\n  static multiply(a: IVector, n: number): IVector {\r\n    return { x: a.x * n, y: a.y * n }\r\n  }\r\n}","import { Rect, type IRect } from \"./Rect\";\r\nimport { Vector, type IVector } from \"./Vector\";\r\n\r\nexport interface IRotatedRect extends IRect { r?: number }\r\nexport class RotatedRect implements IRotatedRect {\r\n  x: number\r\n  y: number\r\n  w: number\r\n  h: number\r\n  private _r: number = 0;\r\n  private _cr: number = 0;\r\n  private _sr: number = 0;\r\n  private _axisX: IVector = { x: 0, y: 0 };\r\n  private _axisY: IVector = { x: 0, y: 0 };\r\n  get axisX() { return this._axisX }\r\n  get axisY() { return this._axisY }\r\n  set top(v: number) {\r\n    this.h = this.bottom - v;\r\n    this.y = v;\r\n  }\r\n  set left(v: number) {\r\n    this.w = this.right - v;\r\n    this.x = v;\r\n  }\r\n  set right(v: number) {\r\n    this.w = v - this.x\r\n  }\r\n  set bottom(v: number) {\r\n    this.h = v - this.y\r\n  }\r\n  get r() { return this._r }\r\n  set r(r: number) {\r\n    this._r = r\r\n    this._cr = Math.cos(r)\r\n    this._sr = Math.sin(r)\r\n    this._axisX = { x: this._cr, y: this._sr }\r\n    this._axisY = { x: -this._sr, y: this._cr }\r\n  }\r\n  get middleX() { return this.x + this.w / 2 }\r\n  get middleY() { return this.y + this.h / 2 }\r\n  set middleX(v: number) { this.x = v - this.w / 2 }\r\n  set middleY(v: number) { this.y = v - this.h / 2 }\r\n\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0, r: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n    this.w = w\r\n    this.h = h\r\n    this._cr = Math.cos(r)\r\n    this._sr = Math.sin(r)\r\n    this._axisX = { x: this._cr, y: this._sr }\r\n    this._axisY = { x: -this._sr, y: this._cr }\r\n    this._r = r\r\n  }\r\n  set(o: IRotatedRect): this {\r\n    this.x = o.x\r\n    this.y = o.y\r\n    this.w = o.w\r\n    this.h = o.h\r\n    this.r = o.r || 0\r\n    return this\r\n  }\r\n\r\n  hit(b: IRotatedRect): boolean {\r\n    return RotatedRect.hit(this, b)\r\n  }\r\n\r\n  toString() {\r\n    return `RotatedRect(x=${this.x}, y=${this.x}, w=${this.w}, h=${this.h}, r=${this.r})`\r\n  }\r\n\r\n  moveTo(x: number, y: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  mid(): IVector {\r\n    return { x: this.x + this.w / 2, y: this.y + this.h / 2 }\r\n  }\r\n\r\n  static create(rect: IRotatedRect) {\r\n    return new RotatedRect(rect.x, rect.y, rect.w, rect.h, rect.r)\r\n  }\r\n\r\n  static pure(x: number, y: number, w: number, h: number, r: number): IRotatedRect {\r\n    return { x, y, w, h, r };\r\n  }\r\n\r\n  static hit(a: IRotatedRect, b: IRotatedRect): boolean {\r\n    if (!a.r && !b.r) return Rect.hit(a, b)\r\n    const realA = a instanceof RotatedRect ? a : new RotatedRect(a.x, a.y, a.w, a.h, a.r)\r\n    const realB = b instanceof RotatedRect ? b : new RotatedRect(b.x, b.y, b.w, b.h, b.r)\r\n    const centerDistanceVertor = { x: realA.middleX - realB.middleX, y: realA.middleY - realB.middleY };\r\n    const axes = [realA._axisX, realA._axisY, realB._axisX, realB._axisY];\r\n    for (let i = 0, len = axes.length; i < len; i++) {\r\n      const a = axes[i]\r\n      const p0 = realA.projection(a)\r\n      const p1 = realB.projection(a)\r\n      const p2 = Vector.dot(centerDistanceVertor, a) * 2\r\n      if (p0 + p1 <= p2) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  projection(axis: IVector): number {\r\n    const px = Vector.dot(this._axisX, axis)\r\n    const py = Vector.dot(this._axisY, axis)\r\n    return px * this.w + py * this.h\r\n  }\r\n}\r\n\r\n","export namespace Arrays {\r\n  type Unsafe<T> = T | null | undefined | void\r\n\r\n  export function firstOf<T, R>(arr: T[], transform: (it: T) => Unsafe<R>): R | null {\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n      const result = transform(arr[i])\r\n      if (result !== null && result !== void 0) {\r\n        return result\r\n      }\r\n    }\r\n    return null\r\n  }\r\n}","export const isNum = (x: any): x is number => typeof x === 'number'\r\nexport const isStr = (x: any): x is string => typeof x === 'string'\r\n\r\nexport const findKey = (obj: any, value: any) => Object.keys(obj).find(k => obj[k] === value);\r\nexport const enumNameGetter = <T>(name: string, e: any) => (value: T) => {\r\n  const k = findKey(e, value)\r\n  return isStr(k) ? `${name}.${k}` : '' + value;\r\n}","import { enumNameGetter } from \"../utils/helper\"\r\n\r\nexport enum ShapeEnum {\r\n  Invalid = 0,\r\n  Pen = 1,\r\n  Rect = 2,\r\n  Oval = 3,\r\n  Text = 4,\r\n  Polygon = 5,\r\n  Tick = 6,\r\n  Cross = 7,\r\n  HalfTick = 8,\r\n  Lines = 9,\r\n  Img = 10,\r\n}\r\nexport type ShapeType = ShapeEnum | string\r\nexport const getShapeName = enumNameGetter<ShapeType>(\"ShapeType\", ShapeEnum)","import { isNum } from \"../../utils/helper\";\r\nimport { IShapeStatus } from \"./IShapeStatus\";\r\n\r\n\r\nexport class ShapeStatus implements IShapeStatus {\r\n  /**\r\n   * visible 值为0时表示不可见\r\n   */\r\n  v?: 0;\r\n\r\n  /**\r\n   * selected 值为1时表示被选择\r\n   */\r\n  s?: 1;\r\n\r\n  /**\r\n   * editing 值为1时表示编辑中\r\n   */\r\n  e?: 1;\r\n\r\n  /**\r\n   * locked 值为1时表示被锁定\r\n   */\r\n  f?: 1;\r\n\r\n  /**\r\n   * ghost 值为1时表示不允许selector操作\r\n   */\r\n  g?: 1;\r\n\r\n  /** 是否可见 */\r\n  get visible(): boolean { return this.v != 0; }\r\n\r\n  /** 设置是否可见 */\r\n  set visible(v: boolean) { if (v) delete this.v; else this.v = 0; }\r\n\r\n  /** 是否被选中 */\r\n  get selected(): boolean { return !!this.s; }\r\n\r\n  /** 设置是否被选中 */\r\n  set selected(v: boolean) { if (v) this.s = 1; else delete this.s; }\r\n\r\n  /** 设置是否被选中 */\r\n  get editing(): boolean { return !!this.e; }\r\n\r\n  /** 设置是否被选中 */\r\n  set editing(v: boolean) { if (v) this.e = 1; else delete this.e; }\r\n\r\n  /** 是否被锁定 */\r\n  get locked(): boolean { return !!this.f; }\r\n\r\n  /** 设置是否被锁定 */\r\n  set locked(v: boolean) { if (v) this.f = 1; else delete this.f; }\r\n\r\n  /** 是否不允许selector操作 */\r\n  get ghost(): boolean { return !!this.g; }\r\n\r\n  /** 设置是否不允许selector操作 */\r\n  set ghost(v: boolean) { if (v) this.g = 1; else delete this.g; }\r\n\r\n  merge(o: Partial<IShapeStatus>): this {\r\n    this.read(o);\r\n    return this;\r\n  }\r\n\r\n  read(o: Partial<IShapeStatus>): this {\r\n    if (isNum(o.v)) this.v = o.v;\r\n    if (isNum(o.s)) this.s = o.s;\r\n    if (isNum(o.e)) this.e = o.e;\r\n    if (isNum(o.f)) this.f = o.f;\r\n    if (isNum(o.g)) this.g = o.g;\r\n    return this;\r\n  }\r\n\r\n  copy(): typeof this {\r\n    const ret: (typeof this) = new (Object.getPrototypeOf(this).constructor);\r\n    return ret.read(this);\r\n  }\r\n}\r\n","import { isNum } from \"../../utils/helper\";\r\n\r\nexport interface IShapeStyle {\r\n  /**\r\n   * strokeStyle\r\n   */\r\n  a?: CanvasFillStrokeStyles['strokeStyle'];\r\n  /**\r\n   * fillStyle\r\n   */\r\n  b?: CanvasFillStrokeStyles['fillStyle'];\r\n  /**\r\n   * lineCap\r\n   */\r\n  c?: CanvasLineCap;\r\n  /**\r\n   * lineDash\r\n   */\r\n  d?: number[];\r\n  /**\r\n   * lineDashOffset\r\n   */\r\n  e?: number;\r\n  /**\r\n   * lineJoin\r\n   */\r\n  f?: CanvasLineJoin;\r\n  /**\r\n   * lineWidth\r\n   */\r\n  g?: number;\r\n  /**\r\n   * miterLimit\r\n   */\r\n  h?: number;\r\n}\r\nexport class ShapeStyle implements IShapeStyle {\r\n  /**\r\n   * strokeStyle\r\n   */\r\n  a?: CanvasFillStrokeStyles['strokeStyle'];\r\n  /**\r\n   * fillStyle\r\n   */\r\n  b?: CanvasFillStrokeStyles['fillStyle'];\r\n  /**\r\n   * lineCap\r\n   */\r\n  c?: CanvasLineCap;\r\n  /**\r\n   * lineDash\r\n   */\r\n  d?: number[];\r\n  /**\r\n   * lineDashOffset\r\n   */\r\n  e?: number;\r\n  /**\r\n   * lineJoin\r\n   */\r\n  f?: CanvasLineJoin;\r\n  /**\r\n   * lineWidth\r\n   */\r\n  g?: number;\r\n  /**\r\n   * miterLimit\r\n   */\r\n  h?: number;\r\n\r\n  get fillStyle() { return this.b || '' }\r\n  set fillStyle(v) { if (v) this.b = v; else delete this.b; }\r\n  get strokeStyle() { return this.a || '' }\r\n  set strokeStyle(v) { if (v) this.a = v; else delete this.a; }\r\n  get lineCap() { return this.c || 'round' }\r\n  set lineCap(v) { if (v) this.c = v; else delete this.c; }\r\n  get lineDash() { return this.d || [] }\r\n  set lineDash(v) {\r\n    if (Array.isArray(v) && v.length > 0) this.d = [...v]; else delete this.d;\r\n  }\r\n  get lineDashOffset() { return this.e || 0 }\r\n  set lineDashOffset(v) { if (v) this.e = v; else delete this.e; }\r\n  get lineJoin() { return this.f || 'round' }\r\n  set lineJoin(v) { if (v) this.f = v; else delete this.f; }\r\n  get lineWidth() { return this.g || 0 }\r\n  set lineWidth(v) { if (v) this.g = v; else delete this.g; }\r\n  get miterLimit() { return this.h || 0 }\r\n  set miterLimit(v) { if (v) this.h = v; else delete this.h; }\r\n\r\n  merge(o: Partial<IShapeStyle>): this {\r\n    return this.read(o)\r\n  }\r\n\r\n  read(o: Partial<IShapeStyle>): this {\r\n    if (o.a) this.a = o.a\r\n    if (o.b) this.b = o.b\r\n    if (o.c) this.c = o.c\r\n    if (o.d) this.d = [...o.d]\r\n    if (isNum(o.e)) this.e = o.e\r\n    if (o.f) this.f = o.f\r\n    if (isNum(o.g)) this.g = o.g\r\n    if (isNum(o.h)) this.h = o.h\r\n    return this\r\n  }\r\n\r\n  copy(): typeof this {\r\n    const ret: (typeof this) = new (Object.getPrototypeOf(this).constructor)\r\n    return ret.read(this)\r\n  }\r\n}","import { Degrees, Numbers } from \"../../utils\"\r\nimport { isNum, isStr } from \"../../utils/helper\"\r\nimport { ShapeEnum, ShapeType } from \"../ShapeEnum\"\r\nimport { IShapeStatus } from \"./IShapeStatus\"\r\nimport { ShapeStatus } from \"./ShapeStatus\"\r\nimport { IShapeStyle, ShapeStyle } from \"./IShapeStyle\"\r\n\r\nexport interface IShapeData {\r\n  /** style */\r\n  a?: IShapeStyle;\r\n\r\n  /** status */\r\n  b?: IShapeStatus;\r\n\r\n  /** scale x */\r\n  c?: number;\r\n\r\n  /** scale y */\r\n  d?: number;\r\n\r\n  /** group id */\r\n  g?: string;\r\n\r\n  /* height */\r\n  h: number;\r\n\r\n  /** id */\r\n  i: string;\r\n\r\n  /** layerId */\r\n  l?: string;\r\n\r\n  /** rotation */\r\n  r?: number;\r\n\r\n  /** ShapeType */\r\n  t: ShapeType;\r\n\r\n  /** width */\r\n  w: number;\r\n\r\n  /** position x */\r\n  x: number;\r\n\r\n  /** position y */\r\n  y: number;\r\n\r\n  /** z-index */\r\n  z: number;\r\n}\r\nexport class ShapeData implements IShapeData {\r\n  t: ShapeType = ShapeEnum.Invalid\r\n  i = ''\r\n  x = 0\r\n  y = 0\r\n  w = 0\r\n  h = 0\r\n  z = 0\r\n  c?: number;\r\n  d?: number;\r\n\r\n  /** layerId */\r\n  l?: string\r\n\r\n  /** rotation */\r\n  r?: number\r\n\r\n  /** group id */\r\n  g?: string\r\n\r\n  /** style */\r\n  a?: IShapeStyle\r\n\r\n  /** status */\r\n  b?: IShapeStatus\r\n\r\n  constructor(other?: Partial<ShapeData>) {\r\n    if (other) this.read(other);\r\n  }\r\n\r\n  get style(): ShapeStyle {\r\n    if (this.a instanceof ShapeStyle)\r\n      return this.a\r\n    else if (this.a)\r\n      return this.a = new ShapeStyle().merge(this.a)\r\n    else\r\n      return this.a = new ShapeStyle()\r\n  };\r\n\r\n  get status(): ShapeStatus {\r\n    if (this.b instanceof ShapeStatus)\r\n      return this.b\r\n    else if (this.b)\r\n      return this.b = new ShapeStatus().merge(this.b)\r\n    else\r\n      return this.b = new ShapeStatus()\r\n  };\r\n\r\n  get type() { return this.t }\r\n  set type(v) { this.t = v }\r\n  get id() { return this.i }\r\n  set id(v) { this.i = v }\r\n\r\n\r\n  get scaleX(): number { return this.c ?? 1 }\r\n  set scaleX(v: number) { if (v == 1) { delete this.c } else this.c = v }\r\n  get scaleY(): number { return this.d ?? 1 }\r\n  set scaleY(v: number) { if (v == 1) { delete this.d } else this.d = v }\r\n\r\n  get fillStyle() { return this.style.fillStyle }\r\n  set fillStyle(v) { this.style.fillStyle = v; }\r\n  get strokeStyle() { return this.style.strokeStyle }\r\n  set strokeStyle(v) { this.style.strokeStyle = v; }\r\n  get lineCap() { return this.style.lineCap }\r\n  set lineCap(v) { this.style.lineCap = v; }\r\n  get lineDash() { return this.style.lineDash }\r\n  set lineDash(v) { this.style.lineDash = v; }\r\n  get lineDashOffset() { return this.style.lineDashOffset }\r\n  set lineDashOffset(v) { this.style.lineDashOffset = v; }\r\n  get lineJoin() { return this.style.lineJoin }\r\n  set lineJoin(v) { this.style.lineJoin = v; }\r\n  get lineWidth() { return this.style.lineWidth }\r\n  set lineWidth(v) { this.style.lineWidth = v; }\r\n  get miterLimit() { return this.style.miterLimit }\r\n  set miterLimit(v) { this.style.miterLimit = v; }\r\n\r\n  get visible(): boolean { return this.status.visible }\r\n  set visible(v: boolean) { this.status.visible = v }\r\n  get selected(): boolean { return this.status.selected }\r\n  set selected(v: boolean) { this.status.selected = v }\r\n  get editing(): boolean { return this.status.editing }\r\n  set editing(v: boolean) { this.status.editing = v }\r\n  get locked(): boolean { return this.status.locked }\r\n  set locked(v: boolean) { this.status.locked = v }\r\n  get ghost(): boolean { return this.status.ghost }\r\n  set ghost(v: boolean) { this.status.ghost = v }\r\n\r\n  get layer() { return this.l }\r\n  set layer(v) { this.l = v }\r\n\r\n  get needFill() { return true; }\r\n  get needStroke() { return true; }\r\n\r\n  get rotation() { return this.r ?? 0; }\r\n  set rotation(v: number) { this.r = Degrees.normalized(v) }\r\n\r\n  merge(o: Partial<IShapeData>) {\r\n    this.read(o)\r\n    return this\r\n  }\r\n\r\n  read(o: Partial<IShapeData>): this {\r\n    if (isStr(o.t) || isNum(o.t)) this.t = o.t\r\n    if (isStr(o.i)) this.i = o.i\r\n    if (isNum(o.x)) this.x = o.x\r\n    if (isNum(o.y)) this.y = o.y\r\n    if (isNum(o.z)) this.z = o.z\r\n    if (isNum(o.w)) this.w = o.w\r\n    if (isNum(o.h)) this.h = o.h\r\n    if (isStr(o.l)) this.l = o.l\r\n    if (isNum(o.c)) this.c = o.c\r\n    if (isStr(o.d)) this.d = o.d\r\n    this.r = isNum(o.r) ? o.r : void 0\r\n\r\n    const { style, status } = o as any;\r\n    const { a = style, b = status } = o;\r\n    if (a) this.style.read(a)\r\n    if (b) this.status.read(b)\r\n    if (a) this.style.read(a)\r\n    if (b) this.status.read(b)\r\n    return this\r\n  }\r\n\r\n  copy(): typeof this {\r\n    const ret: (typeof this) = new (Object.getPrototypeOf(this).constructor)\r\n    return ret.read(this)\r\n  }\r\n\r\n  /** 清洗掉可空的字段 */\r\n  wash(): typeof this {\r\n    if (this.a && !Object.keys(this.a).length) delete this.a\r\n    if (this.b && !Object.keys(this.b).length) delete this.b\r\n    return this;\r\n  }\r\n}\r\n","import { Shape } from \"./Shape\";\r\nimport { Board } from \"../../board\";\r\nimport { IShapeData } from \"./Data\";\r\n\r\nexport enum ShapeEventEnum {\r\n  StartDirty = 'start_dirty',\r\n  EndDirty = 'end_dirty',\r\n  BoardChanged = 'board_changed'\r\n}\r\n\r\nexport interface ShapeEventMap {\r\n  [ShapeEventEnum.StartDirty]: CustomEvent<{ shape: Shape; prev?: Partial<IShapeData>; }>;\r\n  [ShapeEventEnum.EndDirty]: CustomEvent<{ shape: Shape; prev?: Partial<IShapeData>; }>;\r\n  [ShapeEventEnum.BoardChanged]: CustomEvent<{ shape: Shape; prev?: Board; }>;\r\n}\r\n\r\nexport type ShapeEventListener<K extends keyof ShapeEventMap> = (this: HTMLObjectElement, ev: ShapeEventMap[K]) => any;\r\n\r\n","import { Board } from \"../../board/Board\";\r\nimport { IRect, Rect } from \"../../utils/Rect\";\r\nimport { IVector, Vector } from \"../../utils/Vector\";\r\nimport { isNum } from \"../../utils/helper\";\r\nimport { ShapeType } from \"../ShapeEnum\";\r\nimport { IShapeData, ShapeData } from \"./Data\";\r\nimport { ShapeEventMap, ShapeEventEnum, ShapeEventListener } from \"./ShapeEvent\";\r\n\r\nexport enum ResizeDirection {\r\n  None = 0,\r\n  Top = 1,\r\n  TopRight = 2,\r\n  Right = 3,\r\n  BottomRight = 4,\r\n  Bottom = 5,\r\n  BottomLeft = 6,\r\n  Left = 7,\r\n  TopLeft = 8,\r\n}\r\n\r\n/**\r\n * 表示图形能以何种方式被拉伸\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum Resizable {\r\n  /** 禁止 */ None = 0b000,\r\n  /** 水平 */ Horizontal = 0b001,\r\n  /** 垂直 */ Vertical = 0b010,\r\n  /** 四角 */ Corner = 0b100,\r\n  /** 八向 */ All = 0b111,\r\n}\r\n\r\n/**\r\n * 一切图形的基类\r\n *\r\n * @export\r\n * @class Shape 图形基类\r\n * @template D 图形数据类\r\n */\r\nexport class Shape<D extends ShapeData = ShapeData> {\r\n  protected _d: D;\r\n  protected _b?: Board;\r\n  protected _r: Resizable = Resizable.None;\r\n\r\n  constructor(data: Partial<D>, cls: new (other?: Partial<D>) => D) {\r\n    this._d = new cls(data);\r\n  }\r\n\r\n  /**\r\n   * 图形的数据\r\n   *\r\n   * @readonly\r\n   * @type {D}\r\n   * @memberof Shape\r\n   */\r\n  get data(): D { return this._d as D }\r\n\r\n  /**\r\n   * 图形类型\r\n   * \r\n   * 当图形为内置图形时，值为ShapeEnum，否则为字符串\r\n   *\r\n   * @readonly\r\n   * @see {ShapeEnum}\r\n   * @type {ShapeType}\r\n   * @memberof Shape\r\n   */\r\n  get type(): ShapeType { return this._d.t }\r\n\r\n  /**\r\n   * 图形属于哪个黑板\r\n   *\r\n   * @type {(Board | undefined)}\r\n   * @memberof Shape\r\n   */\r\n  get board(): Board | undefined { return this._b }\r\n  set board(v: Board | undefined) {\r\n    if (v === this._b) return;\r\n    const prev = this._b\r\n    this._b = v\r\n    this.dispatchEvent(ShapeEventEnum.BoardChanged, { shape: this, prev })\r\n  }\r\n\r\n  /**\r\n   * 图形是否可见，\r\n   * \r\n   * 当不可见时，图形将在渲染时被忽略\r\n   *\r\n   * @type {boolean}\r\n   * @memberof Shape\r\n   */\r\n  get visible(): boolean { return this._d.visible }\r\n  set visible(v: boolean) {\r\n    if (this._d.visible === v) return\r\n    const prev: Partial<IShapeData> = { b: { v: v ? 0 : (void 0) } }\r\n    this.beginDirty(prev)\r\n    this._d.visible = v\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 是否正在编辑中\r\n   * \r\n   * TODO\r\n   *\r\n   * @type {boolean}\r\n   * @memberof Shape\r\n   */\r\n  get editing(): boolean { return this._d.editing }\r\n  set editing(v: boolean) {\r\n    if (this._d.editing === v) return\r\n    const prev: Partial<IShapeData> = { b: { e: v ? (void 0) : 1 } }\r\n    this.beginDirty(prev)\r\n    this._d.editing = v\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 图形是否被选中\r\n   * \r\n   * 选中图形后，图形将呈现为被选中状态，其他一些对图形的操作均需要选中图形\r\n   *\r\n   * @type {boolean}\r\n   * @memberof Shape\r\n   */\r\n  get selected(): boolean { return this._d.selected }\r\n  set selected(v: boolean) {\r\n    if (this._d.selected === v) return\r\n    const prev: Partial<IShapeData> = { b: { s: v ? (void 0) : 1 } }\r\n    this.beginDirty(prev)\r\n    this._d.selected = v\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 图形是否可以被用户修改尺寸\r\n   * \r\n   * 当不为Resizable.None时，选中的图形将出现控制点，\r\n   * 此时可以点击拖拽控制点来修改图形的尺寸\r\n   *\r\n   * @readonly\r\n   * @type {Resizable}\r\n   * @memberof Shape\r\n   */\r\n  get resizable(): Resizable { return this._r; }\r\n\r\n  /**\r\n   * 图形是否被锁定\r\n   * \r\n   * 被锁定的图形将不能被编辑，选中图形时，选中图形将显示为被锁定\r\n   *\r\n   * @type {boolean}\r\n   * @memberof Shape\r\n   */\r\n  get locked(): boolean { return this._d.locked }\r\n  set locked(v: boolean) {\r\n    if (this._d.locked === v) return\r\n    const prev: Partial<IShapeData> = { b: { f: v ? (void 0) : 1 } }\r\n    this.beginDirty(prev)\r\n    this._d.locked = v\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 图形能否交互\r\n   * \r\n   * 当ghost为true时，只能看见这个图形，而不能选中并与其产生交互。\r\n   * 利用这个属性，可以实现比较特殊的功能，比如：背景图\r\n   *\r\n   * @type {boolean}\r\n   * @memberof Shape\r\n   */\r\n  get ghost(): boolean { return this._d.ghost }\r\n  set ghost(v: boolean) {\r\n    if (this._d.ghost === v) return\r\n    const prev: Partial<IShapeData> = { b: { g: v ? (void 0) : 1 } }\r\n    this.beginDirty(prev)\r\n    this._d.ghost = v\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 图形描边宽度\r\n   * 若图形不存在描边，则为0\r\n   *\r\n   * @type {number}\r\n   * @memberof Shape\r\n   */\r\n  get lineWidth(): number { return this._d.lineWidth }\r\n  set lineWidth(v: number) {\r\n    if (!this._d.needStroke) { return; }\r\n    const prev: Partial<IShapeData> = { a: { g: this._d.lineWidth } }\r\n    this.beginDirty(prev)\r\n    this._d.lineWidth = Math.max(0, v);\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  merge(data: Partial<IShapeData>): void {\r\n    const prev = this.data.copy()\r\n    this.beginDirty(prev)\r\n    this.data.merge(data)\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  beginDirty(prev?: Partial<IShapeData>): void {\r\n    this.dispatchEvent(ShapeEventEnum.StartDirty, { shape: this, prev })\r\n    this.markDirty()\r\n  }\r\n\r\n  endDirty(prev?: Partial<IShapeData>): void {\r\n    this.markDirty()\r\n    this.dispatchEvent(ShapeEventEnum.EndDirty, { shape: this, prev })\r\n  }\r\n\r\n  private markDirty(rect: IRect = this.boundingRect()): void {\r\n    this.board?.markDirty(rect)\r\n  }\r\n\r\n  /**\r\n   * 移动图形\r\n   * \r\n   * @param x x坐标\r\n   * @param y y坐标\r\n   * @returns void\r\n   */\r\n  move(x: number, y: number): void {\r\n    this.geo(x, y, this._d.w, this._d.h)\r\n  }\r\n\r\n  resize(w: number, h: number): void {\r\n    this.geo(this._d.x, this._d.y, w, h)\r\n  }\r\n\r\n  get x() { return this._d.x }\r\n  get y() { return this._d.y }\r\n  get halfW() { return this._d.w / 2 }\r\n  get halfH() { return this._d.h / 2 }\r\n  get midX() { return this._d.x + this.halfW }\r\n  get midY() { return this._d.y + this.halfH }\r\n  get w() { return this._d.w }\r\n  get h() { return this._d.h }\r\n  get left() { return this._d.x }\r\n  get right() { return this._d.y }\r\n  get top() { return this._d.w + this._d.x }\r\n  get bottom() { return this._d.h + this._d.y }\r\n\r\n  get topLeft(): IVector { return { x: this.left, y: this.top } }\r\n  get bottomLeft(): IVector { return { x: this.left, y: this.bottom } }\r\n  get topRight(): IVector { return { x: this.right, y: this.top } }\r\n  get bottomRight(): IVector { return { x: this.right, y: this.bottom } }\r\n  get leftTop(): IVector { return this.topLeft }\r\n  get leftBottom(): IVector { return this.bottomLeft }\r\n  get rightTop(): IVector { return this.topRight }\r\n  get rightBottom(): IVector { return this.bottomRight }\r\n\r\n  get rotatedTopLeft(): IVector { return this.map2world(0, 0) }\r\n  get rotatedBottomLeft(): IVector { return this.map2world(0, this.h) }\r\n  get rotatedTopRight(): IVector { return this.map2world(this.w, 0) }\r\n  get rotatedBottomRight(): IVector { return this.map2world(this.w, this.h) }\r\n  get rotatedLeftTop(): IVector { return this.map2world(0, 0) }\r\n  get rotatedLeftBottom(): IVector { return this.map2world(0, this.h) }\r\n  get rotatedRightTop(): IVector { return this.map2world(this.w, 0) }\r\n  get rotatedRightBottom(): IVector { return this.map2world(this.w, this.h) }\r\n\r\n  get midTop(): IVector { return { x: this.midX, y: this.top } }\r\n  get midBottom(): IVector { return { x: this.midX, y: this.bottom } }\r\n  get midLeft(): IVector { return { x: this.left, y: this.midY } }\r\n  get midRight(): IVector { return { x: this.right, y: this.midY } }\r\n\r\n  get rotatedMidTop(): IVector { return this.map2world(this.halfW, 0) }\r\n  get rotatedMidBottom(): IVector { return this.map2world(this.halfW, this.h) }\r\n  get rotatedMidLeft(): IVector { return this.map2world(0, this.halfH) }\r\n  get rotatedMidRight(): IVector { return this.map2world(this.w, this.halfH) }\r\n  get rotatedMid(): IVector { return this.map2world(this.halfW, this.halfH) }\r\n\r\n  get rotation() { return this.data.rotation }\r\n\r\n  rotateBy(d: number): void {\r\n    const r = this._d.rotation + d\r\n    this.rotateTo(r);\r\n  }\r\n\r\n  rotateTo(r: number): void {\r\n    if (r == this._d.rotation) return\r\n    const prev: Partial<IShapeData> = { x: this._d.x, y: this._d.y, r: this._d.r }\r\n    this.beginDirty(prev)\r\n    this._d.rotation = r % (Math.PI * 2);\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  getGeo(): Rect {\r\n    return new Rect(\r\n      this._d.x,\r\n      this._d.y,\r\n      this._d.w,\r\n      this._d.h\r\n    )\r\n  }\r\n  setGeo(rect: Rect): void {\r\n    this.geo(rect.x, rect.y, rect.w, rect.h)\r\n  }\r\n\r\n  geo(x: number, y: number, w: number, h: number): void {\r\n    if (\r\n      x === this._d.x &&\r\n      y === this._d.y &&\r\n      w === this._d.w &&\r\n      h === this._d.h\r\n    ) return\r\n    const prev: Partial<IShapeData> = {\r\n      x: this._d.x, y: this._d.y,\r\n      w: this._d.w, h: this._d.h\r\n    }\r\n    this.beginDirty(prev)\r\n    this._d.x = x\r\n    this._d.y = y\r\n    this._d.w = w\r\n    this._d.h = h\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  moveBy(x: number, y: number): void {\r\n    this.geo(\r\n      this._d.x + x,\r\n      this._d.y + y,\r\n      this._d.w,\r\n      this._d.h\r\n    )\r\n  }\r\n\r\n  resizeBy(w: number, h: number): void {\r\n    this.geo(\r\n      this._d.x,\r\n      this._d.y,\r\n      this._d.w + w,\r\n      this._d.h + h\r\n    )\r\n  }\r\n\r\n  geoBy(x: number, y: number, w: number, h: number): void {\r\n    this.geo(\r\n      this._d.x + x,\r\n      this._d.y + y,\r\n      this._d.w + w,\r\n      this._d.h + h\r\n    )\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible) return\r\n    const decoration = this.board?.factory.shapeDecoration(this)\r\n    const { ghost, locked, resizable, selected } = this;\r\n    this.beginDraw(ctx)\r\n    ghost && decoration?.ghost?.(this, ctx)\r\n    selected && locked && decoration?.locked?.(this, ctx)\r\n    selected && !locked && decoration?.selected?.(this, ctx)\r\n    selected && !locked && resizable && decoration?.resizable?.(this, ctx)\r\n    this.endDraw(ctx)\r\n    decoration?.debug?.(this, ctx)\r\n  }\r\n\r\n\r\n  /**\r\n   * 绘制矩形\r\n   * \r\n   * @returns \r\n   */\r\n  drawingRect(): IRect {\r\n    const d = this._d\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      w: Math.floor(d.w),\r\n      h: Math.floor(d.h)\r\n    }\r\n  }\r\n\r\n  selectorRect(): IRect {\r\n    const { w, h, locked, lineWidth } = this.data\r\n    const hlw = Math.floor(lineWidth / 2)\r\n    const offset = locked ? 0 : 0.5\r\n    return {\r\n      x: offset - hlw,\r\n      y: offset - hlw,\r\n      w: Math.floor(w + hlw * 2) - 1,\r\n      h: Math.floor(h + hlw * 2) - 1\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取包围盒矩形\r\n   *\r\n   * @return {IRect} 包围盒矩形\r\n   * @memberof Shape\r\n   */\r\n  boundingRect(): IRect {\r\n    const d = this.data\r\n    const offset = (d.lineWidth % 2) ? 1 : 0\r\n    const overbound1 = this.board?.factory.overbound(this) || 1\r\n    const overbound2 = overbound1 * 2\r\n    if (!d.r)\r\n      return {\r\n        x: Math.floor(d.x - d.lineWidth / 2 - overbound1),\r\n        y: Math.floor(d.y - d.lineWidth / 2 - overbound1),\r\n        w: Math.ceil(d.w + d.lineWidth + offset + overbound2),\r\n        h: Math.ceil(d.h + d.lineWidth + offset + overbound2)\r\n      }\r\n\r\n    const w = Math.abs(d.w * Math.cos(d.r)) + Math.abs(d.h * Math.sin(d.r))\r\n    const h = Math.abs(d.w * Math.sin(d.r)) + Math.abs(d.h * Math.cos(d.r))\r\n    const x = d.x - (w - d.w) / 2\r\n    const y = d.y - (h - d.h) / 2\r\n    return {\r\n      x: Math.floor(x - d.lineWidth / 2 - overbound1),\r\n      y: Math.floor(y - d.lineWidth / 2 - overbound1),\r\n      w: Math.ceil(w + d.lineWidth + offset + overbound2),\r\n      h: Math.ceil(h + d.lineWidth + offset + overbound2)\r\n    }\r\n  }\r\n\r\n  getResizerNumbers(x: number, y: number, w: number, h: number) {\r\n    const lw = 1\r\n    const hlw = lw / 2\r\n    const s = this._b?.factory.resizer.size || 10;\r\n    return {\r\n      s,\r\n      lx: x,\r\n      rx: x + w - s,\r\n      ty: y,\r\n      by: y + h - s,\r\n      mx: Math.floor(x + (w - s) / 2) - hlw,\r\n      my: Math.floor(y + (h - s) / 2) - hlw,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 世界坐标系坐标　转换　本图坐标系坐标\r\n   * @param x 世界坐标系X坐标\r\n   * @param y 世界坐标系Y坐标\r\n   * @returns 本图坐标系 坐标\r\n   */\r\n  map2me(x: number, y: number): Vector;\r\n\r\n  /**\r\n   * 世界坐标系坐标　转换　本图坐标系坐标\r\n   * @param v 世界坐标系坐标\r\n   * @returns 本图坐标系 坐标\r\n   */\r\n  map2me(v: IVector): Vector;\r\n\r\n  map2me(arg0: number | IVector, arg1?: number): Vector {\r\n    const ix = isNum(arg0) ? arg0 : arg0.x\r\n    const iy = isNum(arg0) ? arg1! : arg0.y\r\n    const { r, x, y } = this.data\r\n    if (!r) return new Vector(ix - x, iy - y)\r\n    const mx = this.midX\r\n    const my = this.midY\r\n    const cr = Math.cos(-r)\r\n    const sr = Math.sin(-r)\r\n    const dx = ix - mx\r\n    const dy = iy - my\r\n    return new Vector(\r\n      dx * cr - dy * sr + mx - x,\r\n      dx * sr + dy * cr + my - y\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 本图坐标系坐标 转换 世界坐标系坐标\r\n   * @param x 本图坐标系X坐标\r\n   * @param y 本图坐标系Y坐标\r\n   * @returns 世界坐标系坐标\r\n   */\r\n  map2world(x: number, y: number): Vector;\r\n\r\n  /**\r\n   * 本图坐标系坐标 转换 世界坐标系坐标 \r\n   * @param v 本图坐标系坐标\r\n   * @returns 世界坐标系坐标\r\n   */\r\n  map2world(v: IVector): Vector;\r\n  map2world(arg0: number | IVector, arg1?: number): IVector {\r\n    const ix = isNum(arg0) ? arg0 : arg0.x\r\n    const iy = isNum(arg0) ? arg1! : arg0.y\r\n    const { r, x, y, w, h } = this.data\r\n    if (!r) return { x: ix + x, y: iy + y }\r\n    const mx = w / 2\r\n    const my = h / 2\r\n    const cr = Math.cos(r)\r\n    const sr = Math.sin(r)\r\n    const dx = ix - mx\r\n    const dy = iy - my\r\n    return {\r\n      x: dx * cr - dy * sr + mx + x,\r\n      y: dx * sr + dy * cr + my + y\r\n    }\r\n  }\r\n  resizeDirection(pointerX: number, pointerY: number): [ResizeDirection, Rect | undefined] {\r\n    if (!this.selected || !this._r || this.ghost || this.locked) {\r\n      return [ResizeDirection.None, undefined];\r\n    }\r\n    const { x: l, y: t } = this.data\r\n    const { x, y, w, h } = this.selectorRect();\r\n    const { s, lx, rx, ty, by, mx, my } = this.getResizerNumbers(l + x, t + y, w, h)\r\n\r\n    const pos = { x: pointerX, y: pointerY }\r\n    const rect = new Rect(0, 0, s, s);\r\n\r\n    rect.moveTo(mx, ty)\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.Top, rect];\r\n    }\r\n    rect.moveTo(mx, by);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.Bottom, rect];\r\n    }\r\n    rect.moveTo(lx, my);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.Left, rect];\r\n    }\r\n    rect.moveTo(rx, my);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.Right, rect];\r\n    }\r\n\r\n    rect.moveTo(lx, ty)\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.TopLeft, rect];\r\n    }\r\n    rect.moveTo(rx, ty);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.TopRight, rect];\r\n    }\r\n    rect.moveTo(lx, by);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.BottomLeft, rect];\r\n    }\r\n    rect.moveTo(rx, by);\r\n    if (rect.hit(pos)) {\r\n      return [ResizeDirection.BottomRight, rect];\r\n    }\r\n    return [ResizeDirection.None, undefined]\r\n  }\r\n\r\n  protected beginDraw(ctx: CanvasRenderingContext2D): void {\r\n    let { x, y, w, h, r, c, d } = this.data\r\n    ctx.save()\r\n    x = Math.floor(x)\r\n    y = Math.floor(y)\r\n    const hw = Math.floor(w / 2)\r\n    const hh = Math.floor(h / 2)\r\n    if (r || c || d) {\r\n      ctx.translate(x + hw, y + hh)\r\n      r && ctx.rotate(r);\r\n      (c || d) && ctx.scale(c ?? 1, d ?? 1)\r\n      ctx.translate(- hw, - hh)\r\n    } else {\r\n      ctx.translate(x, y)\r\n    }\r\n  }\r\n  protected endDraw(ctx: CanvasRenderingContext2D): void {\r\n    ctx.restore()\r\n  }\r\n\r\n  private _ele: HTMLElement | undefined;\r\n  private _relCount: number = 0;\r\n\r\n  addEventListener<K extends keyof ShapeEventMap>(type: K, listener: ShapeEventListener<K>, options?: boolean | AddEventListenerOptions): this\r\n  addEventListener(arg0: any, arg1: any, arg2?: any): this {\r\n    this._ele = this._ele || document.createElement('a')\r\n    this._ele.addEventListener(arg0, arg1, arg2)\r\n    if (!arg2?.once) this._relCount++\r\n    return this\r\n  }\r\n\r\n  removeEventListener<K extends keyof ShapeEventMap>(type: K, listener: ShapeEventListener<K>, options?: boolean | AddEventListenerOptions): this\r\n  removeEventListener(arg0: any, arg1: any, arg2?: any): this {\r\n    this._ele?.removeEventListener(arg0, arg1, arg2)\r\n    return this\r\n  }\r\n\r\n  dispatchEvent<K extends keyof ShapeEventMap>(type: K, detail: ShapeEventMap[K]['detail']): this {\r\n    this._ele?.dispatchEvent(new CustomEvent(type, { detail }))\r\n    return this\r\n  }\r\n}","import { enumNameGetter } from \"../utils/helper\"\r\n\r\nexport enum ToolEnum {\r\n  Invalid = '',\r\n  Selector = 'TOOL_SELECTOR',\r\n  Pen = 'TOOL_PEN',\r\n  Rect = 'TOOL_RECT',\r\n  Oval = 'TOOL_OVAL',\r\n  Text = 'TOOL_TEXT',\r\n  Polygon = 'TOOL_POLYGON',\r\n  Tick = 'TOOL_TICK',\r\n  Cross = 'TOOL_CROSS',\r\n  HalfTick = 'TOOL_HALFTICK',\r\n  Lines = \"TOOL_Lines\",\r\n  Img = \"TOOL_Img\",\r\n}\r\nexport type ToolType = ToolEnum | string\r\nexport const getToolName = enumNameGetter<ToolType>(\"ToolEnum\", ToolEnum)","import { Resizable, Shape } from \"./Shape\";\r\nimport { ShapeData } from \"./Data\";\r\n\r\nexport class ShapeNeedPath<D extends ShapeData = ShapeData> extends Shape<D> {\r\n  constructor(data: Partial<D>, cls: new (other?: Partial<D>) => D) {\r\n    super(data, cls);\r\n    this._r = Resizable.All;\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    throw new Error(\"Method 'path' not implemented.\");\r\n  }\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible)\r\n      return;\r\n    this.beginDraw(ctx)\r\n    const d = this.data;\r\n    if (d.fillStyle || (d.lineWidth && d.strokeStyle))\r\n      this.path(ctx);\r\n    if (d.fillStyle) {\r\n      ctx.fillStyle = d.fillStyle;\r\n      ctx.fill();\r\n    }\r\n    if (d.lineWidth && d.strokeStyle) {\r\n      ctx.lineCap = d.lineCap;\r\n      ctx.lineDashOffset = d.lineDashOffset;\r\n      ctx.lineJoin = d.lineJoin;\r\n      ctx.lineWidth = d.lineWidth;\r\n      ctx.miterLimit = d.miterLimit;\r\n      ctx.strokeStyle = d.strokeStyle;\r\n      ctx.setLineDash(d.lineDash);\r\n      ctx.stroke();\r\n    }\r\n    this.endDraw(ctx)\r\n    super.render(ctx);\r\n  }\r\n}\r\n","import { ShapeEnum } from \"../ShapeEnum\";\r\nimport { ShapeData } from \"../base\";\r\n\r\nexport class CrossData extends ShapeData {\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n  constructor(other?: Partial<CrossData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Cross;\r\n    this.strokeStyle = '#FF0000';\r\n    this.lineWidth = 2;\r\n    other && this.read(other);\r\n  }\r\n}\r\n\r\n","\r\nimport type { IShapeData, ShapeData, Shape } from \"../shape/base\"\r\nimport type { IFactory } from \"./Factory\"\r\nimport type { ITool } from \"../tools/base/Tool\"\r\nimport type { FactoryEnum, FactoryType } from \"./FactoryEnum\"\r\nimport { ToolEnum, ToolType, getToolName } from \"../tools/ToolEnum\"\r\nimport { ShapeType, getShapeName } from \"../shape/ShapeEnum\"\r\nimport type { CrossData, CrossTool, HalfTickData, HalfTickTool, LinesData, LinesTool, OvalData, OvalTool, PenData, PenTool, PolygonData, PolygonTool, RectData, RectTool, ShapeCross, ShapeEnum, ShapeHalfTick, ShapeLines, ShapeOval, ShapePen, ShapePolygon, ShapeRect, ShapeText, ShapeTick, TextData, TextTool, TickData, TickTool } from \"../shape\"\r\nimport { SelectorTool } from \"../tools\"\r\nimport { Board } from \"../board\"\r\nimport { EventEnum, Events } from \"../event\"\r\n\r\nexport interface IFactoryInfomation {\r\n  readonly name: string\r\n  readonly desc: string\r\n}\r\nexport interface IFactoryCreater<F extends IFactory = IFactory> { (): F }\r\nexport interface IToolInfomation<S extends ShapeType | undefined = ShapeType | undefined> {\r\n  readonly name: string\r\n  readonly desc: string\r\n  readonly shape: S\r\n}\r\nexport interface IShapeInfomation<S extends ShapeType = ShapeType> {\r\n  readonly name: string\r\n  readonly desc: string\r\n  readonly type: S\r\n}\r\nexport interface IToolCreater<T extends ITool = ITool> { (): T }\r\nexport interface IShapeDataCreater<D extends IShapeData = IShapeData> { (): D }\r\nexport interface IShapeCreater<D extends IShapeData, S extends Shape = Shape> { (data: D): S }\r\n\r\nconst Tag = '[Gaia]'\r\nexport class Gaia {\r\n  private static _tools = new Map<ToolType, IToolCreater>();\r\n  private static _toolInfos = new Map<ToolType, IToolInfomation>()\r\n  private static _shapeDatas = new Map<ShapeType, IShapeDataCreater<any>>()\r\n  private static _shapes = new Map<ShapeType, IShapeCreater<any>>()\r\n  private static _shapeInfos = new Map<ShapeType, IShapeInfomation>()\r\n  private static _factorys = new Map<FactoryType, IFactoryCreater>()\r\n  private static _factoryInfos = new Map<FactoryType, IFactoryInfomation>()\r\n\r\n  static registerFactory(type: FactoryType, creator: IFactoryCreater, info: IFactoryInfomation): void {\r\n    if (this._factorys.has(type)) {\r\n      console.warn(Tag, `registerFactory(), factory '${type}' already exists!`);\r\n    } else if (this._factoryInfos.has(type)) {\r\n      console.warn(Tag, `registerFactory(), factory info '${type}' already exists!`);\r\n    }\r\n    this._factorys.set(type, creator);\r\n    this._factoryInfos.set(type, info);\r\n  }\r\n  static listFactories(): FactoryType[] {\r\n    return Array.from(this._factoryInfos.keys())\r\n  }\r\n\r\n  static factory<K extends keyof FactoryEnumFactoryMap>(type: K): FactoryEnumFactoryMap[K];\r\n  static factory(type: FactoryType): IFactoryCreater | undefined;\r\n  static factory(type: FactoryType): IFactoryCreater | undefined {\r\n    return this._factorys.get(type);\r\n  }\r\n\r\n  static registerTool(type: ToolType, creator: IToolCreater, info?: Partial<IToolInfomation>): void {\r\n    if (this._tools.has(type)) {\r\n      console.warn(Tag, `registerTool(), tool '${type}' already exists!`);\r\n    } else if (this._toolInfos.has(type)) {\r\n      console.warn(Tag, `registerTool(), tool info '${type}' already exists!`);\r\n    }\r\n    this._tools.set(type, creator);\r\n    this._toolInfos.set(type, {\r\n      shape: info?.shape,\r\n      name: info?.name || getToolName(type),\r\n      desc: info?.desc || getToolName(type),\r\n    })\r\n  }\r\n  static listTools(): ToolType[] {\r\n    return Array.from(this._tools.keys());\r\n  }\r\n\r\n  static tool<K extends keyof ToolEnumToolMap>(type: K): ToolEnumToolMap[K];\r\n  static tool(type: ToolType): IToolCreater | undefined;\r\n  static tool(type: ToolType): IToolCreater | undefined {\r\n    return this._tools.get(type);\r\n  }\r\n\r\n  static toolInfo<K extends keyof ToolEnumToolInfoMap>(type: K): ToolEnumToolInfoMap[K];\r\n  static toolInfo(type: ToolType): IToolInfomation | undefined;\r\n  static toolInfo(type: ToolType): IToolInfomation | undefined {\r\n    return this._toolInfos.get(type);\r\n  }\r\n  static editToolInfo<K extends keyof ToolEnumToolInfoMap>(type: K, func: (i: ToolEnumToolInfoMap[K]) => ToolEnumToolInfoMap[K]): void;\r\n  static editToolInfo(type: ToolType, func: (i: IToolInfomation) => IToolInfomation): void;\r\n  static editToolInfo(type: ToolType, func: (i: IToolInfomation) => IToolInfomation): void {\r\n    let info = this._toolInfos.get(type);\r\n    if (!info) { return; }\r\n    info = func(info);\r\n    this._toolInfos.set(type, info);\r\n  }\r\n  static registerShape<D extends ShapeData>(\r\n    type: ShapeType,\r\n    dataCreator: IShapeDataCreater<D>,\r\n    shapeCreator: IShapeCreater<D>,\r\n    info?: Partial<IShapeInfomation>\r\n  ): void {\r\n    if (this._shapeInfos.has(type)) {\r\n      console.warn(Tag, `registerShape(), shape info '${type}' already exists!`);\r\n    } else if (this._shapeDatas.has(type)) {\r\n      console.warn(Tag, `registerShape(), shape data'${type}' already exists!`);\r\n    } else if (this._shapes.has(type)) {\r\n      console.warn(Tag, `registerShape(), shape '${type}' already exists!`);\r\n    }\r\n    this._shapeInfos.set(type, {\r\n      name: info?.name || getShapeName(type),\r\n      desc: info?.desc || getShapeName(type),\r\n      type\r\n    })\r\n    this._shapeDatas.set(type, dataCreator);\r\n    this._shapes.set(type, shapeCreator);\r\n  }\r\n\r\n  static listShapes(): ShapeType[] {\r\n    return Array.from(this._shapes.keys());\r\n  }\r\n\r\n  static shapeInfo<K extends keyof ShapEnumShapeInfoMap>(type: K): ShapEnumShapeInfoMap[K];\r\n  static shapeInfo(type: ShapeType): IShapeInfomation | undefined;\r\n  static shapeInfo(type: ShapeType): IShapeInfomation | undefined {\r\n    return this._shapeInfos.get(type)\r\n  }\r\n\r\n  static shapeData<K extends keyof ShapeEnumShapeDataMap>(type: K): ShapeEnumShapeDataMap[K];\r\n  static shapeData(type: ShapeType): IShapeDataCreater<any> | undefined;\r\n  static shapeData(type: ShapeType): IShapeDataCreater<any> | undefined {\r\n    return this._shapeDatas.get(type);\r\n  }\r\n\r\n  static shape<K extends keyof ShapeEnumShapeDataMap>(type: K): ShapeEnumShapeMap[K];\r\n  static shape(type: ShapeType): IShapeCreater<any> | undefined;\r\n  static shape(type: ShapeType): IShapeCreater<any> | undefined {\r\n    return this._shapes.get(type);\r\n  }\r\n\r\n  static registAction<K extends keyof Events.EventMap>(eventType: K, handler: ActionHandler<Events.EventMap[K]>): void;\r\n  static registAction(eventType: string, handler: ActionHandler): void {\r\n    this._actionHandler.set(eventType, handler);\r\n  }\r\n  static listActions(): string[] { return Array.from(this._actionHandler.keys()) }\r\n  static action(eventType: string): ActionHandler | undefined {\r\n    return this._actionHandler.get(eventType);\r\n  }\r\n  private static _actionHandler = new Map<string, ActionHandler>()\r\n}\r\n\r\nexport interface ActionHandler<D = any> {\r\n  isAction(board: Board, e: D): boolean,\r\n  undo(board: Board, e: D): void;\r\n  redo(board: Board, e: D): void;\r\n}\r\n\r\nexport interface FactoryEnumFactoryMap {\r\n  /* Built-in factory */\r\n  [FactoryEnum.Default]: IFactoryCreater\r\n}\r\n\r\nexport interface ToolEnumToolMap {\r\n  /* Built-in tool */\r\n  [ToolEnum.Selector]: IToolCreater<SelectorTool>;\r\n  [ToolEnum.Pen]: IToolCreater<PenTool>;\r\n  [ToolEnum.Rect]: IToolCreater<RectTool>;\r\n  [ToolEnum.Oval]: IToolCreater<OvalTool>;\r\n  [ToolEnum.Text]: IToolCreater<TextTool>;\r\n  [ToolEnum.Polygon]: IToolCreater<PolygonTool>;\r\n  [ToolEnum.Tick]: IToolCreater<TickTool>;\r\n  [ToolEnum.Cross]: IToolCreater<CrossTool>;\r\n  [ToolEnum.HalfTick]: IToolCreater<HalfTickTool>;\r\n  [ToolEnum.Lines]: IToolCreater<LinesTool>;\r\n}\r\n\r\nexport interface ToolEnumToolInfoMap {\r\n  /* Built-in tool info */\r\n  [ToolEnum.Selector]: IToolInfomation<undefined>;\r\n  [ToolEnum.Pen]: IToolInfomation<ShapeEnum.Pen>;\r\n  [ToolEnum.Rect]: IToolInfomation<ShapeEnum.Rect>;\r\n  [ToolEnum.Oval]: IToolInfomation<ShapeEnum.Oval>;\r\n  [ToolEnum.Text]: IToolInfomation<ShapeEnum.Text>;\r\n  [ToolEnum.Polygon]: IToolInfomation<ShapeEnum.Polygon>;\r\n  [ToolEnum.Tick]: IToolInfomation<ShapeEnum.Tick>;\r\n  [ToolEnum.Cross]: IToolInfomation<ShapeEnum.Cross>;\r\n  [ToolEnum.HalfTick]: IToolInfomation<ShapeEnum.HalfTick>;\r\n  [ToolEnum.Lines]: IToolInfomation<ShapeEnum.Lines>;\r\n}\r\n\r\n\r\nexport interface ShapEnumShapeInfoMap {\r\n  /* Built-in shape info */\r\n  [ShapeEnum.Pen]: IShapeInfomation<ShapeEnum.Pen>;\r\n  [ShapeEnum.Rect]: IShapeInfomation<ShapeEnum.Rect>;\r\n  [ShapeEnum.Oval]: IShapeInfomation<ShapeEnum.Oval>;\r\n  [ShapeEnum.Text]: IShapeInfomation<ShapeEnum.Text>;\r\n  [ShapeEnum.Polygon]: IShapeInfomation<ShapeEnum.Polygon>;\r\n  [ShapeEnum.Tick]: IShapeInfomation<ShapeEnum.Tick>;\r\n  [ShapeEnum.Cross]: IShapeInfomation<ShapeEnum.Cross>;\r\n  [ShapeEnum.HalfTick]: IShapeInfomation<ShapeEnum.HalfTick>;\r\n  [ShapeEnum.Lines]: IShapeInfomation<ShapeEnum.Lines>;\r\n}\r\n\r\nexport interface ShapeEnumShapeDataMap {\r\n  /* Built-in shape data */\r\n  [ShapeEnum.Pen]: IShapeDataCreater<PenData>;\r\n  [ShapeEnum.Rect]: IShapeDataCreater<RectData>;\r\n  [ShapeEnum.Oval]: IShapeDataCreater<OvalData>;\r\n  [ShapeEnum.Text]: IShapeDataCreater<TextData>;\r\n  [ShapeEnum.Polygon]: IShapeDataCreater<PolygonData>;\r\n  [ShapeEnum.Tick]: IShapeDataCreater<TickData>;\r\n  [ShapeEnum.Cross]: IShapeDataCreater<CrossData>;\r\n  [ShapeEnum.HalfTick]: IShapeDataCreater<HalfTickData>;\r\n  [ShapeEnum.Lines]: IShapeDataCreater<LinesData>;\r\n}\r\n\r\nexport interface ShapeEnumShapeMap {\r\n  /* Built-in shape data */\r\n  [ShapeEnum.Pen]: IShapeCreater<PenData, ShapePen>;\r\n  [ShapeEnum.Rect]: IShapeCreater<RectData, ShapeRect>;\r\n  [ShapeEnum.Oval]: IShapeCreater<OvalData, ShapeOval>;\r\n  [ShapeEnum.Text]: IShapeCreater<TextData, ShapeText>;\r\n  [ShapeEnum.Polygon]: IShapeCreater<PolygonData, ShapePolygon>;\r\n  [ShapeEnum.Tick]: IShapeCreater<TickData, ShapeTick>;\r\n  [ShapeEnum.Cross]: IShapeCreater<CrossData, ShapeCross>;\r\n  [ShapeEnum.HalfTick]: IShapeCreater<HalfTickData, ShapeHalfTick>;\r\n  [ShapeEnum.Lines]: IShapeCreater<LinesData, ShapeLines>;\r\n}","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { CrossData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapeCross extends ShapeNeedPath<CrossData> {\r\n  constructor(data: Partial<CrossData>) {\r\n    super(data, CrossData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    const a = { x: x, y: y + 0.05 * h }\r\n    const b = { x: x + w, y: y + h - 0.05 * h }\r\n    const c = { x: x + 0.05 * w, y: y + h }\r\n    const d = { x: x + w - 0.05 * w, y: y }\r\n    ctx.beginPath();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.quadraticCurveTo(\r\n      x + w / 2 + 0.2 * w,\r\n      y + h / 2 + 0.1 * h,\r\n      b.x, b.y\r\n    );\r\n    ctx.moveTo(c.x, c.y);\r\n    ctx.quadraticCurveTo(\r\n      x + w / 2 - 0.05 * w,\r\n      y + h / 2 - 0.1 * h,\r\n      d.x, d.y);\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Cross, () => new CrossData, d => new ShapeCross(d))","import { IRect } from \"./Rect\"\r\nimport { Vector } from \"./Vector\"\r\nexport enum GenMode {\r\n  FromCorner = 0,\r\n  FromCenter = 1\r\n}\r\nexport enum LockMode {\r\n  Default = 0,\r\n  Square = 1,\r\n  Circle = 2\r\n}\r\nexport type GenOptions = {\r\n  genMode: GenMode\r\n  lockMode: LockMode\r\n}\r\nexport class RectHelper {\r\n  private _from = Vector.pure(NaN, NaN);\r\n  private _to = Vector.pure(NaN, NaN);\r\n  get ok() { return isNaN(this._from.x) || isNaN(this._to.x) }\r\n  get from() { return this._from; }\r\n  get to() { return this._to; }\r\n  start(x: number, y: number) {\r\n    this._from.x = x\r\n    this._from.y = y\r\n    this._to.x = x\r\n    this._to.y = y\r\n  }\r\n  end(x: number, y: number) {\r\n    this._to.x = x\r\n    this._to.y = y\r\n  }\r\n  clear() {\r\n    this._from = Vector.pure(NaN, NaN)\r\n    this._to = Vector.pure(NaN, NaN)\r\n  }\r\n  gen(): IRect {\r\n    const { x: x0, y: y0 } = this._from\r\n    const { x: x1, y: y1 } = this._to\r\n    const x = Math.min(x0, x1)\r\n    const y = Math.min(y0, y1)\r\n    return {\r\n      x, y,\r\n      w: Math.max(x0, x1) - x,\r\n      h: Math.max(y0, y1) - y\r\n    }\r\n  }\r\n}\r\n","import { isNum, isStr } from \"../../utils/helper\";\r\nimport { ShapeEnum } from \"../ShapeEnum\";\r\nimport { IShapeData, ShapeData } from \"../base\";\r\n\r\nexport enum ObjectFit {\r\n  Fill = 0,\r\n  Contain = 1,\r\n  Cover = 2,\r\n}\r\nexport interface IImgData extends IShapeData {\r\n  /** src */\r\n  s?: string;\r\n\r\n  /** objectFit */\r\n  f?: ObjectFit;\r\n}\r\n\r\nexport class ImgData extends ShapeData {\r\n  s?: string;\r\n  f?: ObjectFit;\r\n\r\n  get src() { return this.s ?? ''; }\r\n\r\n  set src(v) { if (!v) { delete this.s } else this.s = v; }\r\n\r\n  get objectFit() { return this.f ?? ObjectFit.Fill; }\r\n\r\n  set objectFit(v) { this.f = v; }\r\n\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n\r\n  override get needStroke(): boolean {\r\n    return false;\r\n  }\r\n\r\n  constructor(other?: Partial<ImgData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Img;\r\n    other && this.read(other)\r\n  }\r\n\r\n  override read(other: Partial<ImgData>): this {\r\n    super.read(other);\r\n    if (isStr(other.s)) this.s = other.s;\r\n    if (isNum(other.f)) this.f = other.f;\r\n    return this;\r\n  }\r\n}\r\n\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { IShapeData, ShapeData } from \"../base\"\r\nexport enum ChangeType {\r\n  Invalid = 0,\r\n  All = 1,\r\n  Append = 2,\r\n  Subtract = 3,\r\n}\r\nexport interface IPenData extends IShapeData {\r\n  /** ChangeType */\r\n  v: ChangeType;\r\n\r\n  /** coords */\r\n  u: number[];\r\n}\r\nexport class PenData extends ShapeData implements IPenData {\r\n  v: ChangeType = ChangeType.All\r\n  u: number[] = []\r\n\r\n  get dotsType(): ChangeType { return this.v }\r\n  set dotsType(v: ChangeType) { this.v = v }\r\n\r\n  get coords(): number[] { return this.u }\r\n  set coords(v: number[]) { this.u = v }\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n  constructor(other?: Partial<PenData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Pen\r\n    this.strokeStyle = '#ff0000'\r\n    this.lineCap = 'round'\r\n    this.lineJoin = 'round'\r\n    this.lineWidth = 3\r\n    other && this.read(other)\r\n  }\r\n  override read(other: Partial<PenData>) {\r\n    super.read(other)\r\n\r\n    const { u = other.coords, v = other.dotsType } = other\r\n    if (v) this.dotsType = v\r\n    if (Array.isArray(u)) this.coords = [...u]\r\n    return this\r\n  }\r\n\r\n  override merge(other: Partial<PenData>) {\r\n    super.read(other)\r\n\r\n    const { u = other.coords } = other\r\n    if (!Array.isArray(u)) {\r\n      return this\r\n    }\r\n    switch (other.dotsType) {\r\n      case ChangeType.Subtract:\r\n        this.coords = this.coords.slice(0, -u.length);\r\n        break;\r\n      case ChangeType.Append:\r\n        this.coords.push(...u);\r\n        break;\r\n      default:\r\n        this.coords = [...u];\r\n        break;\r\n    }\r\n    return this\r\n  }\r\n}\r\n","import type { Board } from \"../../board/Board\"\nimport { Events } from \"../../event/Events\"\nimport { EventEnum } from \"../../event/EventType\"\nimport { Shape } from \"../../shape/base/Shape\"\nimport type { ShapeType } from \"../../shape/ShapeEnum\"\nimport type { IDot } from \"../../utils/Dot\"\nimport { RectHelper } from \"../../utils/RectHelper\"\nimport type { ToolType } from \"../ToolEnum\"\nimport type { ITool } from \"./Tool\"\n\ntype FnKeys = 'Control' | 'Alt' | 'Shift';\nexport class SimpleTool implements ITool {\n  get type(): string { return this._type }\n  private _type: ToolType\n  private _shapeType: ShapeType\n  constructor(type: ToolType, shapeType: ShapeType) {\n    this._type = type\n    this._shapeType = shapeType\n  }\n  protected _keys = new Map<FnKeys, boolean>()\n\n  protected keydown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'Control':\n      case 'Alt':\n      case 'Shift':\n        this._keys.set(e.key, true);\n        this.applyRect();\n        return;\n    }\n  }\n  protected keyup = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'Control':\n      case 'Alt':\n      case 'Shift':\n        this._keys.set(e.key, false);\n        this.applyRect();\n        return;\n    }\n  }\n  holdingKey(...keys: FnKeys[]): boolean {\n    for (let i = 0; i < keys.length; ++i) {\n      if (!this._keys.get(keys[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  start(): void {\n    window.addEventListener('keydown', this.keydown);\n    window.addEventListener('keyup', this.keyup)\n  }\n  end(): void {\n    window.removeEventListener('keydown', this.keydown);\n    window.removeEventListener('keyup', this.keyup)\n    delete this._curShape\n  }\n  render(): void { }\n  get board(): Board | undefined {\n    return this._board\n  }\n  set board(v: Board | undefined) {\n    this._board = v\n  }\n  pointerMove(dot: IDot): void { }\n  pointerDown(dot: IDot): void {\n    const { x, y } = dot\n    const board = this.board\n    if (!board) return\n    this._curShape = board.factory.newShape(this._shapeType)\n    this._curShape.data.layer = board.layer().id;\n    const shape = this._curShape\n    if (!shape) return\n    board.add(shape, true)\n    this._rect.start(x, y)\n    this.updateGeo(0)\n  }\n  pointerDraw(dot: IDot): void {\n    const { x, y } = dot\n    this._rect.end(x, y)\n    this.updateGeo(1)\n  }\n  pointerUp(dot: IDot): void {\n    const { x, y } = dot\n    this._rect.end(x, y)\n    this.updateGeo(2)\n    delete this._curShape\n  }\n  protected applyRect() {\n    const { x, y, w, h } = this._rect.gen()\n    this._curShape?.geo(x, y, w, h)\n  }\n  private updateGeo(state: 0 | 1 | 2) {\n    const shape = this._curShape\n    const board = this.board\n    if (!shape || !board) return\n\n    switch (state) {\n      case 0: {\n        this._prevData = Events.pickShapeGeoData(shape.data)\n        this._startData = this._prevData;\n        this.applyRect();\n        break;\n      }\n      case 1: {\n        this.applyRect();\n        const curr = Events.pickShapeGeoData(shape.data);\n        board.emitEvent(EventEnum.ShapesGeoChanging, {\n          operator: board.whoami,\n          tool: this.type,\n          shapeDatas: [[curr, this._prevData!]]\n        })\n        this._prevData = curr;\n        break;\n      }\n      case 2: {\n        this.applyRect();\n        const curr = Events.pickShapeGeoData(shape.data);\n        board.emitEvent(EventEnum.ShapesGeoChanging, {\n          operator: board.whoami,\n          tool: this.type,\n          shapeDatas: [[curr, this._prevData!]]\n        })\n        board.emitEvent(EventEnum.ShapesGeoChanged, {\n          operator: board.whoami,\n          tool: this.type,\n          shapeDatas: [[curr, this._startData!]]\n        })\n        board.emitEvent(EventEnum.ShapesDone, {\n          operator: board.whoami,\n          shapeDatas: [shape.data.copy()]\n        })\n        this._prevData = curr;\n        break;\n      }\n    }\n  }\n  protected _startData: Events.IShapeGeoData | undefined\n  protected _prevData: Events.IShapeGeoData | undefined\n  protected _curShape: Shape | undefined\n  protected _board: Board | undefined\n  protected _rect = new RectHelper()\n}","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as CrossTool } from \"../../tools/base/SimpleTool\"\r\nexport { CrossTool }\r\n\r\nGaia.registerTool(ToolEnum.Cross,\r\n  () => new CrossTool(ToolEnum.Cross, ShapeEnum.Cross),\r\n  { name: 'Cross', desc: 'cross drawer', shape: ShapeEnum.Cross })","import { ShapeEnum } from \"../ShapeEnum\";\r\nimport { ShapeData } from \"../base\";\r\n\r\nexport class HalfTickData extends ShapeData {\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n  constructor(other?: Partial<HalfTickData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.HalfTick;\r\n    this.strokeStyle = '#FF0000';\r\n    this.lineWidth = 2;\r\n    other && this.read(other)\r\n  }\r\n}\r\n\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { HalfTickData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapeHalfTick extends ShapeNeedPath<HalfTickData> {\r\n  constructor(data: Partial<HalfTickData>) {\r\n    super(data, HalfTickData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    const a = { x: x, y: y + h * 0.7 }\r\n    const b = { x: x + w / 3, y: y + h }\r\n    const c = { x: x + w, y: y }\r\n    ctx.beginPath();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.bezierCurveTo(\r\n      a.x + (b.x - a.x) / 3, a.y,\r\n      b.x, b.y - (b.y - a.y) / 3,\r\n      b.x, b.y\r\n    );\r\n    ctx.bezierCurveTo(\r\n      b.x, b.y - (b.y - c.y) / 3,\r\n      c.x - (c.x - b.x) / 4, c.y,\r\n      c.x, c.y\r\n    );\r\n    const e = { x: x + w * 0.35, y: y + h * 0.25 }\r\n    const f = { x: x + w * 0.70, y: y + h * 0.70 }\r\n    ctx.moveTo(e.x, e.y)\r\n    ctx.lineTo(f.x, f.y)\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.HalfTick, () => new HalfTickData, d => new ShapeHalfTick(d))","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as HalfTickTool } from \"../../tools/base/SimpleTool\"\r\nexport { HalfTickTool }\r\n\r\nGaia.registerTool(ToolEnum.HalfTick,\r\n  () => new HalfTickTool(ToolEnum.HalfTick, ShapeEnum.HalfTick),\r\n  { name: 'Half tick', desc: 'half tick drawer', shape: ShapeEnum.HalfTick })","import { Gaia } from \"../../mgr/Gaia\";\r\nimport { ShapeEnum } from \"../ShapeEnum\";\r\nimport { Resizable, Shape } from \"../base\";\r\nimport { ImgData, ObjectFit } from \"./Data\";\r\n\r\nexport class ShapeImg extends Shape<ImgData> {\r\n  private _src?: string;\r\n  private _img?: HTMLImageElement;\r\n  private _loaded: boolean = false;\r\n  private _error: string = '';\r\n\r\n  constructor(data: Partial<ImgData>) {\r\n    super(data, ImgData);\r\n    this._r = Resizable.All;\r\n  }\r\n\r\n  get img() {\r\n    const d = this.data;\r\n    if (this._src === d.src) {\r\n      return this._img!\r\n    };\r\n    if (this._img) {\r\n      this._img.removeEventListener('load', this.onLoad)\r\n      this._img.removeEventListener('error', this.onError)\r\n    }\r\n    this._src = d.src;\r\n    this._loaded = false;\r\n    this._error = '';\r\n    this._img = new Image();\r\n    this._img.src = this.data.src;\r\n    this._img.addEventListener('load', this.onLoad)\r\n    this._img.addEventListener('error', this.onError)\r\n    return this._img;\r\n  }\r\n\r\n  onLoad = () => {\r\n    this.beginDirty();\r\n    this._loaded = true;\r\n    this.endDirty()\r\n  }\r\n\r\n  onError = (e: ErrorEvent) => {\r\n    this.beginDirty();\r\n    this._error = 'fail to load: ' + (e.target as any).src;\r\n    this.endDirty();\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible)\r\n      return;\r\n\r\n    const { img } = this;\r\n    if (this._loaded) {\r\n      let { x, y, w, h } = this.drawingRect();\r\n\r\n      switch (this.data.objectFit) {\r\n        case ObjectFit.Fill: {\r\n          this.beginDraw(ctx)\r\n          ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, w, h);\r\n          this.endDraw(ctx)\r\n          break;\r\n        }\r\n        case ObjectFit.Contain: {\r\n          const a = img.width / img.height;\r\n          const b = w / h;\r\n          let dx = x;\r\n          let dy = y;\r\n          let dw = w;\r\n          let dh = h;\r\n          if (a > b) {\r\n            dh = w / a;\r\n            dy += (h - dh) * 0.5;\r\n          } else {\r\n            dw = h * a;\r\n            dx += (w - dw) * 0.5;\r\n          }\r\n          this.beginDraw(ctx)\r\n          ctx.drawImage(img, 0, 0, img.width, img.height, dx - x, dy - y, dw, dh);\r\n          this.endDraw(ctx)\r\n          break;\r\n        }\r\n        case ObjectFit.Cover: {\r\n          const a = img.width / img.height;\r\n          const b = w / h;\r\n          let sx = 0;\r\n          let sy = 0;\r\n          let sw = img.width;\r\n          let sh = img.height;\r\n          if (a < b) {\r\n            sh = sw / b;\r\n            sy = (img.height - sh) / 2\r\n          } else {\r\n            sw = sh * b;\r\n            sx = (img.width - sw) / 2\r\n          }\r\n          this.beginDraw(ctx)\r\n          ctx.drawImage(img, sx, sy, sw, sh, 0, 0, w, h);\r\n          this.endDraw(ctx)\r\n          break;\r\n        }\r\n      }\r\n    } else if (this._error) {\r\n      this.drawText(ctx, 'error: ' + this._error)\r\n    } else {\r\n      this.drawText(ctx, 'loading: ' + this.data.src)\r\n    }\r\n    super.render(ctx);\r\n  }\r\n\r\n  drawText(ctx: CanvasRenderingContext2D, text: string): void {\r\n\r\n    this.beginDraw(ctx)\r\n    const { x, y, w, h } = this.drawingRect();\r\n    ctx.fillStyle = '#FF000088';\r\n    ctx.fillRect(x, y, w, h);\r\n    ctx.fillStyle = '#00000088';\r\n    ctx.fillRect(0, 0, w, h);\r\n    ctx.font = 'normal 16px serif'\r\n    ctx.fillStyle = 'white';\r\n    const {\r\n      fontBoundingBoxDescent: fd,\r\n      fontBoundingBoxAscent: fa,\r\n      actualBoundingBoxLeft: al\r\n    } = ctx.measureText(text);\r\n    const height = fd + fa;\r\n    ctx.fillText(text, x + 1 + al, y + height);\r\n    this.endDraw(ctx)\r\n\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Img, () => new ImgData, d => new ShapeImg(d))","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as RectTool } from \"../../tools/base/SimpleTool\"\r\nexport { RectTool }\r\n\r\nGaia.registerTool(ToolEnum.Img,\r\n  () => new RectTool(ToolEnum.Img, ShapeEnum.Img),\r\n  { name: 'Image', desc: 'Image drawer', shape: ShapeEnum.Img })","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { IShapeData, ShapeData } from \"../base\"\r\n\r\nexport interface ILinesData extends IShapeData {\r\n  /** coords */\r\n  u: number[]\r\n}\r\nexport class LinesData extends ShapeData implements ILinesData {\r\n  u: number[] = []\r\n\r\n  get coords(): number[] { return this.u }\r\n  set coords(v: number[]) { this.u = v }\r\n\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n  constructor(other?: Partial<LinesData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Lines;\r\n    this.strokeStyle = '#ff0000';\r\n    this.lineCap = 'round';\r\n    this.lineJoin = 'round';\r\n    this.lineWidth = 2;\r\n    if (other) this.read(other)\r\n  }\r\n  override read(other: Partial<LinesData>) {\r\n    super.read(other)\r\n    const { coords } = other\r\n    const { u = coords } = other\r\n    if (Array.isArray(u)) this.coords = [...u]\r\n    return this\r\n  }\r\n  override merge(other: Partial<LinesData>) {\r\n    super.read(other)\r\n    const { coords } = other\r\n    const { u = coords } = other\r\n    if (Array.isArray(u)) this.coords = [...u]\r\n    return this\r\n  }\r\n}\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { Shape } from \"../base\"\r\nimport { LinesData } from \"./Data\"\r\nimport { IRect } from \"../../utils/Rect\"\r\nimport { IDot } from \"../../utils/Dot\"\r\n\r\nexport class ShapeLines extends Shape<LinesData> {\r\n  private _srcGeo: IRect | null = null\r\n  private _path2D = new Path2D();\r\n\r\n  constructor(data: Partial<LinesData>) {\r\n    super(data, LinesData);\r\n    let x, y: number\r\n    for (let i = 0; i < this.data.coords.length; i += 2) {\r\n      x = this.data.coords[i]\r\n      y = this.data.coords[i + 1]\r\n      this.updatePath(x, y, i === 0 ? 'first' : undefined);\r\n    }\r\n    this.updateSrcGeo()\r\n  }\r\n\r\n  override merge(data: Partial<LinesData>) {\r\n    const prev = this.data.copy()\r\n    this.beginDirty(prev)\r\n    const startIdx = this.data.coords.length\r\n    this.data.merge(data)\r\n    const endIdx = this.data.coords.length - 1\r\n    if (startIdx !== endIdx) {\r\n      let x, y: number\r\n      for (let i = startIdx; i <= endIdx; i += 2) {\r\n        x = this.data.coords[i]\r\n        y = this.data.coords[i + 1]\r\n        this.updatePath(x, y, i === 0 ? 'first' : undefined);\r\n      }\r\n    }\r\n    this.updateSrcGeo()\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 计算原始矩形\r\n   * @param dot \r\n   */\r\n  private updateSrcGeo(): IRect {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = Number.MIN_VALUE;\r\n    let maxY = Number.MIN_VALUE;\r\n    for (let i = 0; i < this.data.coords.length; i += 2) {\r\n      const x = this.data.coords[i];\r\n      const y = this.data.coords[i + 1];\r\n      minX = Math.min(minX, x)\r\n      minY = Math.min(minY, y)\r\n      maxX = Math.max(maxX, x)\r\n      maxY = Math.max(maxY, y)\r\n    }\r\n    this._srcGeo = {\r\n      x: minX,\r\n      y: minY,\r\n      w: maxX - minX,\r\n      h: maxY - minY\r\n    }\r\n    return this._srcGeo\r\n  }\r\n\r\n  private updatePath(x: number, y: number, type?: 'first') {\r\n    if (type === 'first') {\r\n      this._path2D.moveTo(x, y);\r\n    } else {\r\n      this._path2D.lineTo(x, y);\r\n    }\r\n  }\r\n\r\n  pushDot(dot: IDot, type?: 'first'): void {\r\n    this.data.coords.push(dot.x, dot.y)\r\n    const geo = this.updateSrcGeo()\r\n    this.updatePath(dot.x, dot.y, type)\r\n    this.geo(geo.x, geo.y, geo.w, geo.h)\r\n    this.endDirty()\r\n  }\r\n\r\n  editDot(dot: IDot): void {\r\n    this.data.coords[this.data.coords.length - 2] = dot.x;\r\n    this.data.coords[this.data.coords.length - 1] = dot.y;\r\n    this._path2D = new Path2D();\r\n    for (let i = 0; i < this.data.coords.length; i += 2) {\r\n      const x = this.data.coords[i];\r\n      const y = this.data.coords[i + 1];\r\n      this.updatePath(x, y, i === 0 ? 'first' : undefined)\r\n    }\r\n    const geo = this.updateSrcGeo();\r\n    this.geo(geo.x, geo.y, geo.w, geo.h);\r\n    this.endDirty();\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible) { return; }\r\n    const d = this.data;\r\n\r\n    if (d.lineWidth && d.strokeStyle && this._srcGeo) {\r\n      ctx.save()\r\n      ctx.translate(\r\n        this.data.x - this._srcGeo.x,\r\n        this.data.y - this._srcGeo.y\r\n      )\r\n      ctx.lineCap = d.lineCap\r\n      ctx.lineDashOffset = d.lineDashOffset || 0\r\n      ctx.lineJoin = d.lineJoin\r\n      ctx.lineWidth = d.lineWidth || 0\r\n      ctx.miterLimit = d.miterLimit || 0\r\n      ctx.strokeStyle = d.strokeStyle\r\n      ctx.setLineDash(d.lineDash)\r\n      ctx.stroke(this._path2D)\r\n      ctx.restore()\r\n    }\r\n    super.render(ctx);\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Lines, () => new LinesData, d => new ShapeLines(d))","import { Board } from \"../../board/Board\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeLines } from \"./Shape\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { LinesData } from \"./Data\"\r\nimport { IDot } from \"../../utils/Dot\"\r\nimport { ITool } from \"../../tools/base/Tool\"\r\nimport { EventEnum, Events } from \"../../event\"\r\nconst Tag = '[LinesTool]'\r\nexport class LinesTool implements ITool {\r\n  private _pressingShift = false;\r\n  private _pressingControl = false;\r\n  private _keydown = (e: KeyboardEvent) => {\r\n    if (e.key === 'Shift') {\r\n      this._pressingShift = true;\r\n    } else if (e.key === 'Control') {\r\n      this._pressingControl = true;\r\n    }\r\n  }\r\n  private _keyup = (e: KeyboardEvent) => {\r\n    if (e.key === 'Shift') {\r\n      this._pressingShift = false;\r\n    } else if (e.key === 'Control') {\r\n      this._pressingControl = false;\r\n    }\r\n  }\r\n  private _blur = (e: Event) => {\r\n    this._pressingShift = false;\r\n    this._pressingControl = false;\r\n  }\r\n  start(): void {\r\n    window.addEventListener('keydown', this._keydown, true);\r\n    window.addEventListener('keyup', this._keyup, true);\r\n    window.addEventListener('blur', this._blur, true);\r\n  }\r\n  end(): void {\r\n    window.removeEventListener('keydown', this._keydown, true);\r\n    window.removeEventListener('keyup', this._keyup, true);\r\n    window.removeEventListener('blur', this._blur, true);\r\n  }\r\n\r\n  get type(): string { return ToolEnum.Lines }\r\n\r\n  render(): void { }\r\n  get board(): Board | undefined {\r\n    return this._board\r\n  }\r\n  set board(v: Board | undefined) {\r\n    this._board = v\r\n  }\r\n  addDot(dot: IDot, type?: 'first') {\r\n    const shape = this._curShape\r\n    const board = this.board\r\n    if (!shape || !board) return\r\n    if (this._prevData)\r\n      return shape.pushDot(dot, type);\r\n\r\n    const emitEvent = () => {\r\n      const prev = this._prevData\r\n      if (!prev) return\r\n      const curr = shape.data.copy()\r\n      curr.coords.splice(0, prev.coords.length)\r\n      board.emitEvent(EventEnum.ShapesChanging, {\r\n        operator: board.whoami,\r\n        shapeType: this.type,\r\n        shapeDatas: [[curr, prev]]\r\n      });\r\n      delete this._prevData\r\n    }\r\n    this._prevData = shape.data.copy()\r\n    const prev = this._prevData\r\n    if (prev.coords.length <= 0) {\r\n      shape.pushDot(dot, type)\r\n      emitEvent()\r\n    } else {\r\n      shape.pushDot(dot, type)\r\n      setTimeout(emitEvent, 1000 / 30)\r\n    }\r\n  }\r\n  moveDot(dot: IDot) {\r\n\r\n\r\n    const shape = this._curShape\r\n    const board = this.board\r\n    if (!shape || !board) return\r\n\r\n    if (this._pressingControl && shape.data.coords.length >= 4) {\r\n      const prevX = shape.data.coords[shape.data.coords.length - 4];\r\n      const prevY = shape.data.coords[shape.data.coords.length - 3];\r\n      const angle = Math.atan2(dot.y - prevY, dot.x - prevX) * 180 / Math.PI;\r\n      const o = Math.sqrt((Math.pow(dot.x - prevX, 2) + Math.pow(dot.y - prevY, 2)) / 2)\r\n      if (angle > 22.5 && angle <= 67.5) {\r\n        dot.x = prevX + o;\r\n        dot.y = prevY + o;\r\n      } else if (angle > 67.5 && angle <= 112.5) {\r\n        dot.x = prevX;\r\n      } else if (angle > 112.5 && angle <= 157.5) {\r\n        dot.x = prevX - o;\r\n        dot.y = prevY + o;\r\n      } else if (angle > 157.5 || angle <= -157.5) {\r\n        dot.y = prevY;\r\n      } else if (angle <= -112.5 && angle > -157.5) {\r\n        dot.x = prevX - o;\r\n        dot.y = prevY - o;\r\n      } else if (angle <= -67.5 && angle > -112.5) {\r\n        dot.x = prevX;\r\n      } else if (angle <= -22.5 && angle > -67.5) {\r\n        dot.x = prevX + o;\r\n        dot.y = prevY - o;\r\n      } else {\r\n        dot.y = prevY;\r\n      }\r\n    }\r\n\r\n    if (this._prevData)\r\n      return shape.editDot(dot);\r\n\r\n    const emitEvent = () => {\r\n      const prev = this._prevData\r\n      if (!prev) return\r\n      const curr = shape.data.copy()\r\n      curr.coords.splice(0, prev.coords.length)\r\n      board.emitEvent(EventEnum.ShapesChanging, {\r\n        operator: board.whoami,\r\n        shapeType: this.type,\r\n        shapeDatas: [[curr, prev]]\r\n      })\r\n      delete this._prevData\r\n    }\r\n    this._prevData = shape.data.copy()\r\n    const prev = this._prevData\r\n    if (prev.coords.length <= 0) {\r\n      shape.editDot(dot)\r\n      emitEvent()\r\n    } else {\r\n      shape.editDot(dot)\r\n      setTimeout(emitEvent, 1000 / 30)\r\n    }\r\n  }\r\n\r\n  pointerMove(dot: IDot): void {\r\n    if (this._curShape) {\r\n      this.moveDot(dot);\r\n    }\r\n  }\r\n  pointerDown(dot: IDot): void {\r\n    const board = this.board\r\n    if (!board) { return; }\r\n    if (!this._curShape) {\r\n      this._curShape = board.factory.newShape(ShapeEnum.Lines) as ShapeLines\r\n      this._curShape.data.layer = board.layer().id;\r\n      this._curShape.data.editing = true\r\n      board.add(this._curShape, true);\r\n      this.addDot(dot, 'first');\r\n      this.addDot(dot)\r\n    }\r\n  }\r\n  pointerDraw(dot: IDot): void {\r\n    this.moveDot(dot);\r\n  }\r\n  pointerUp(dot: IDot): void {\r\n    const shape = this._curShape;\r\n    if (!shape) { return; }\r\n    if (!this._pressingShift) {\r\n      shape.data.editing = false;\r\n      this._board?.emitEvent(EventEnum.ShapesDone, {\r\n        operator: this._board.whoami,\r\n        shapeDatas: [shape.data.copy()]\r\n      })\r\n      delete this._curShape;\r\n    } else {\r\n      this.addDot(dot)\r\n    }\r\n  }\r\n  private _prevData: LinesData | undefined\r\n  private _curShape: ShapeLines | undefined\r\n  private _board: Board | undefined\r\n}\r\n\r\nGaia.registerTool(ToolEnum.Lines,\r\n  () => new LinesTool(),\r\n  { name: 'Lines', desc: 'lines', shape: ShapeEnum.Lines })","\r\nimport { ShapeEnum } from \"../ShapeEnum\";\r\nimport { ShapeData } from \"../base\";\r\nexport class OvalData extends ShapeData {\r\n  constructor(other?: Partial<OvalData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Oval;\r\n    this.strokeStyle = '#ff0000';\r\n    this.lineWidth = 2;\r\n    other && this.read(other)\r\n  }\r\n}\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { OvalData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapeOval extends ShapeNeedPath<OvalData> {\r\n  constructor(data: Partial<OvalData>) {\r\n    super(data, OvalData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    const r = (w > h) ? w : h;\r\n    const scale = { x: w / r, y: h / r };\r\n    ctx.save();\r\n    ctx.scale(scale.x, scale.y);\r\n    ctx.beginPath();\r\n    ctx.arc((x + 0.5 * w) / scale.x, (y + 0.5 * h) / scale.y, r / 2, 0, 2 * Math.PI);\r\n    ctx.closePath();\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Oval, () => new OvalData, d => new ShapeOval(d))","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool } from \"../../tools/base/SimpleTool\"\r\nexport class OvalTool extends SimpleTool {\r\n  constructor() {\r\n    super(ToolEnum.Oval, ShapeEnum.Oval);\r\n  }\r\n\r\n  protected applyRect() {\r\n    if (this.holdingKey('Shift', 'Alt')) {\r\n      // 从圆心开始绘制正圆\r\n      const f = this._rect.from;\r\n      const t = this._rect.to;\r\n      const r = Math.sqrt(Math.pow(f.y - t.y, 2) + Math.pow(f.x - t.x, 2));\r\n      const x = f.x - r;\r\n      const y = f.y - r;\r\n      this._curShape?.geo(x, y, r * 2, r * 2);\r\n    } else if (this.holdingKey('Shift')) {\r\n      // 四角开始绘制正圆\r\n      // TODO;\r\n      return super.applyRect();\r\n    } else if (this.holdingKey('Alt')) {\r\n      // 圆心开始绘制椭圆\r\n      // TODO;\r\n      return super.applyRect();\r\n    } else {\r\n      // 四角开始绘制椭圆\r\n      return super.applyRect();\r\n    }\r\n  }\r\n}\r\n\r\nGaia.registerTool(ToolEnum.Oval,\r\n  () => new OvalTool(),\r\n  { name: 'Oval', desc: 'oval drawer', shape: ShapeEnum.Oval })","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { Shape } from \"../base\"\r\nimport { ChangeType, PenData } from \"./Data\"\r\nimport { IRect } from \"../../utils/Rect\"\r\nimport { IVector } from \"../../utils/Vector\"\r\nimport { IDot } from \"../../utils/Dot\"\r\n\r\nexport class ShapePen extends Shape<PenData> {\r\n  private _lineFactor = 0.5\r\n  private _smoothFactor = 0.5\r\n  private _srcGeo: IRect | null = null\r\n  private _path2D = new Path2D()\r\n  private prev_t: IVector | undefined\r\n  private prev_dot: IVector | undefined\r\n  constructor(data: Partial<PenData>) {\r\n    super(data, PenData)\r\n    let x, y: number\r\n    for (let i = 0; i < this.data.coords.length; i += 2) {\r\n      x = this.data.coords[i]\r\n      y = this.data.coords[i + 1]\r\n      this.updateSrcGeo(x, y)\r\n      if (i === 0)\r\n        this.updatePath(x, y, 'first')\r\n      else if (i >= this.data.coords.length - 2)\r\n        this.updatePath(x, y, 'last')\r\n      else\r\n        this.updatePath(x, y)\r\n    }\r\n  }\r\n  override merge(data: Partial<PenData>) {\r\n    const prev = this.data.copy()\r\n    this.beginDirty(prev)\r\n    const startIdx = this.data.coords.length\r\n    this.data.merge(data)\r\n    const endIdx = this.data.coords.length - 1\r\n    if (startIdx !== endIdx) {\r\n      let x, y: number\r\n      for (let i = startIdx; i <= endIdx; i += 2) {\r\n        x = this.data.coords[i]\r\n        y = this.data.coords[i + 1]\r\n        this.updateSrcGeo(x, y)\r\n        if (i === 0)\r\n          this.updatePath(x, y, 'first')\r\n        else if (!this.data.editing && i === endIdx)\r\n          this.updatePath(x, y, 'last')\r\n        else\r\n          this.updatePath(x, y)\r\n      }\r\n    }\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  /**\r\n   * 根据新加入的点，计算原始矩形\r\n   * @param dot \r\n   */\r\n  private updateSrcGeo(x: number, y: number): IRect {\r\n    if (this._srcGeo) {\r\n      const left = Math.min(this._srcGeo.x, x)\r\n      const top = Math.min(this._srcGeo.y, y)\r\n      let w = Math.max(this._srcGeo.x + this._srcGeo.w, x) - left\r\n      let h = Math.max(this._srcGeo.y + this._srcGeo.h, y) - top\r\n      if (w !== w) w = 0 // NaN check\r\n      if (h !== h) h = 0 // NaN check\r\n      this._srcGeo = { x: left, y: top, w, h }\r\n    } else {\r\n      this._srcGeo = {\r\n        x: x,\r\n        y: y,\r\n        w: 0,\r\n        h: 0\r\n      }\r\n    }\r\n    return this._srcGeo\r\n  }\r\n\r\n  private updatePath(x: number, y: number, type?: 'first' | 'last') {\r\n    if (this.prev_dot === undefined) {\r\n      this.prev_dot = { x, y }\r\n      this._path2D.moveTo(x, y)\r\n    }\r\n    if (type === 'first')\r\n      return\r\n    const { x: prev_x, y: prev_y } = this.prev_dot\r\n    if (this.prev_t === undefined) {\r\n      this.prev_t = {\r\n        x: x - (x - prev_x) * this._lineFactor,\r\n        y: y - (y - prev_y) * this._lineFactor\r\n      }\r\n      this._path2D.lineTo(this.prev_t.x, this.prev_t.y)\r\n    }\r\n    const { x: prev_t_x, y: prev_t_y } = this.prev_t\r\n    const t_x_0 = prev_x + (x - prev_x) * this._lineFactor\r\n    const t_y_0 = prev_y + (y - prev_y) * this._lineFactor\r\n    const t_x_1 = x - (x - prev_x) * this._lineFactor\r\n    const t_y_1 = y - (y - prev_y) * this._lineFactor\r\n    const c_x_0 = prev_t_x + (prev_x - prev_t_x) * this._smoothFactor // 第一控制点x坐标\r\n    const c_y_0 = prev_t_y + (prev_y - prev_t_y) * this._smoothFactor // 第一控制点y坐标\r\n    const c_x_1 = prev_x + (t_x_0 - prev_x) * (1 - this._smoothFactor) // 第二控制点x坐标\r\n    const c_y_1 = prev_y + (t_y_0 - prev_y) * (1 - this._smoothFactor) // 第二控制点y坐标\r\n    this._path2D.bezierCurveTo(c_x_0, c_y_0, c_x_1, c_y_1, t_x_0, t_y_0)\r\n\r\n    if (type === 'last') {\r\n      delete this.prev_t\r\n      delete this.prev_dot\r\n      this._path2D.lineTo(x, y)\r\n    } else {\r\n      this.prev_t = { x: t_x_1, y: t_y_1 }\r\n      this.prev_dot = { x, y }\r\n    }\r\n  }\r\n\r\n  appendDot(dot: IDot, type?: 'first' | 'last') {\r\n    const coords = this.data.coords\r\n    const prevY: number | undefined = coords[coords.length - 1]\r\n    const prevX: number | undefined = coords[coords.length - 2]\r\n    if (prevY === dot.y && prevX === dot.x && type !== 'last')\r\n      return\r\n    this.data.coords.push(dot.x, dot.y)\r\n    const geo = this.updateSrcGeo(dot.x, dot.y)\r\n    this.updatePath(dot.x, dot.y, type)\r\n    this.geo(geo.x, geo.y, geo.w, geo.h)\r\n    this.endDirty()\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible)\r\n      return;\r\n    const d = this.data;\r\n    if (d.lineWidth && d.strokeStyle && this._srcGeo) {\r\n      this.beginDraw(ctx)\r\n      ctx.translate(\r\n        - this._srcGeo.x,\r\n        - this._srcGeo.y\r\n      )\r\n      ctx.lineCap = d.lineCap\r\n      ctx.lineDashOffset = d.lineDashOffset || 0\r\n      ctx.lineJoin = d.lineJoin\r\n      ctx.lineWidth = d.lineWidth || 0\r\n      ctx.miterLimit = d.miterLimit || 0\r\n      ctx.strokeStyle = d.strokeStyle\r\n      ctx.setLineDash(d.lineDash)\r\n      ctx.stroke(this._path2D)\r\n      this.endDraw(ctx)\r\n    }\r\n    super.render(ctx);\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Pen, () => new PenData, d => new ShapePen(d))","import { Board } from \"../../board/Board\"\r\nimport { EventEnum } from \"../../event\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { ITool } from \"../../tools/base/Tool\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { IDot } from \"../../utils/Dot\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ChangeType, PenData } from \"./Data\"\r\nimport { ShapePen } from \"./Shape\"\r\nconst Tag = '[PenTool]'\r\nexport class PenTool implements ITool {\r\n  readonly type: string = ToolEnum.Pen\r\n  board: Board | undefined = void 0;\r\n\r\n  end(): void {\r\n    const shape = this._curShape\r\n    if (shape && shape.data.coords.length >= 2) {\r\n      const { coords } = shape.data\r\n      shape.data.editing = false;\r\n      this.addDot({\r\n        x: coords[coords.length - 2],\r\n        y: coords[coords.length - 1],\r\n        p: 0\r\n      }, 'last')\r\n      this.board?.emitEvent(EventEnum.ShapesDone, {\r\n        operator: this.board.whoami,\r\n        shapeDatas: [shape!.data.copy()]\r\n      })\r\n    }\r\n    delete this._curShape;\r\n  }\r\n\r\n  pointerDown(dot: IDot): void {\r\n    const board = this.board\r\n    if (!board) return;\r\n    this._curShape = board.factory.newShape(ShapeEnum.Pen) as ShapePen\r\n    this._curShape.data.layer = board.layer().id;\r\n    this._curShape.data.editing = true\r\n    board.add(this._curShape, true)\r\n    this.addDot(dot, 'first')\r\n  }\r\n  pointerDraw(dot: IDot): void {\r\n    this.addDot(dot)\r\n  }\r\n  pointerUp(dot: IDot): void {\r\n    const shape = this._curShape\r\n    if (shape) {\r\n      shape.data.editing = false;\r\n      this.addDot(dot, 'last')\r\n      this.board?.emitEvent(EventEnum.ShapesDone, {\r\n        operator: this.board.whoami,\r\n        shapeDatas: [shape!.data.copy()]\r\n      })\r\n      delete this._curShape;\r\n    }\r\n  }\r\n  protected _prevData: PenData | undefined\r\n  protected _curShape: ShapePen | undefined\r\n  protected addDot(dot: IDot, type?: 'first' | 'last') {\r\n    const shape = this._curShape\r\n    const board = this.board\r\n    if (!shape || !board) return\r\n    if (this._prevData)\r\n      return shape.appendDot(dot, type)\r\n\r\n    const emitEvent = () => {\r\n      const prev = this._prevData\r\n      if (!prev) return\r\n      const curr = shape.data.copy()\r\n      curr.dotsType = ChangeType.Append\r\n      curr.coords.splice(0, prev.coords.length)\r\n      board.emitEvent(EventEnum.ShapesChanging, {\r\n        operator: board.whoami,\r\n        shapeType: this.type,\r\n        shapeDatas: [[curr, prev]]\r\n      })\r\n      delete this._prevData\r\n    }\r\n    this._prevData = shape.data.copy()\r\n    const prev = this._prevData\r\n    if (prev.coords.length <= 0) {\r\n      shape.appendDot(dot, type)\r\n      emitEvent()\r\n    } else {\r\n      shape.appendDot(dot, type)\r\n      setTimeout(emitEvent, 1000 / 30)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nGaia.registerTool(ToolEnum.Pen,\r\n  () => new PenTool(),\r\n  { name: 'Pen', desc: 'simple pen', shape: ShapeEnum.Pen })","import { IDot } from \"../../utils/Dot\";\r\nimport { ShapeEnum } from \"../ShapeEnum\";\r\nimport { IShapeData, ShapeData } from \"../base\";\r\n\r\nexport interface IPolygonData extends IShapeData {\r\n  /** dots */\r\n  u: IDot[];\r\n}\r\n\r\nexport class PolygonData extends ShapeData implements IPolygonData {\r\n  constructor(other?: Partial<PolygonData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Polygon\r\n    this.fillStyle = '#ff0000'\r\n    this.strokeStyle = '#000000'\r\n    this.lineWidth = 2\r\n    other && this.read(other)\r\n  }\r\n\r\n  u: IDot[] = []\r\n  get dots(): IDot[] { return this.u }\r\n  set dots(v: IDot[]) { this.u = v }\r\n\r\n  override read(other: Partial<PolygonData>) {\r\n    super.read(other)\r\n    const { u = other.dots } = other\r\n    if (u) this.u = u.map(v => ({ ...v }))\r\n    return this\r\n  }\r\n}\r\n\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { PolygonData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapePolygon extends ShapeNeedPath<PolygonData> {\r\n  constructor(data: Partial<PolygonData>) {\r\n    super(data, PolygonData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, w, h)\r\n    ctx.closePath();\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Polygon, () => new PolygonData, d => new ShapePolygon(d))","import { Gaia, IToolInfomation } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as PolygonTool } from \"../../tools/base/SimpleTool\"\r\nexport { PolygonTool }\r\n\r\nconst desc: IToolInfomation = {\r\n  name: 'Polygon', desc: 'Polygon Drawer', shape: ShapeEnum.Polygon\r\n}\r\nGaia.registerTool(ToolEnum.Polygon,\r\n  () => new PolygonTool(ToolEnum.Polygon, ShapeEnum.Polygon), desc)","import { ShapeEnum } from \"../ShapeEnum\";\r\nimport { ShapeData } from \"../base\";\r\n\r\nexport class RectData extends ShapeData {\r\n  constructor(other?: Partial<RectData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Rect\r\n    this.strokeStyle = '#ff0000'\r\n    this.lineWidth = 2\r\n    other && this.read(other);\r\n  }\r\n}\r\n\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { RectData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapeRect extends ShapeNeedPath<RectData> {\r\n  constructor(data: Partial<RectData>) {\r\n    super(data, RectData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, w, h)\r\n    ctx.closePath();\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Rect, () => new RectData, d => new ShapeRect(d))","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as RectTool } from \"../../tools/base/SimpleTool\"\r\nexport { RectTool }\r\n\r\nGaia.registerTool(ToolEnum.Rect,\r\n  () => new RectTool(ToolEnum.Rect, ShapeEnum.Rect),\r\n  { name: 'Rectangle', desc: 'rect drawer', shape: ShapeEnum.Rect })","import { isNum, isStr } from \"../../utils/helper\";\r\nimport { ShapeEnum } from \"../ShapeEnum\";\r\nimport { IShapeData, ShapeData } from \"../base\";\r\n\r\nexport type TFontStyle = [\r\n  'normal' | 'italic' | 'oblique',\r\n  'normal' | 'small-caps',\r\n  'normal' | 'bold' | 'bolder' | 'lighter' | number,\r\n  number,\r\n  string\r\n]\r\nexport interface ITextData extends IShapeData {\r\n  /** text */\r\n  s: string;\r\n\r\n  /** TFontStyle */\r\n  u: TFontStyle;\r\n\r\n  /** padding left */\r\n  m: number;\r\n\r\n  /** padding right */\r\n  n: number;\r\n\r\n  /** padding top */\r\n  p: number;\r\n\r\n  /** padding bottom */\r\n  q: number;\r\n}\r\n\r\nexport class TextData extends ShapeData implements ITextData {\r\n  constructor(other?: Partial<TextData>) {\r\n    super(other);\r\n    this.type = ShapeEnum.Text;\r\n    this.fillStyle = '#ff0000';\r\n    this.strokeStyle = '';\r\n    this.lineWidth = 0;\r\n    other && this.read(other)\r\n  }\r\n  /** text */\r\n  s: string = '';\r\n  get text() { return this.s }\r\n  set text(v) { this.s = v }\r\n\r\n  /** TFontStyle */\r\n  u: TFontStyle = ['normal', 'normal', 'normal', 24, 'Simsum']\r\n  get f_d() { return this.u }\r\n  set f_d(v) { this.u = v }\r\n\r\n  /** padding left */\r\n  m: number = 3;\r\n  get t_l() { return this.m }\r\n  set t_l(v) { this.m = v }\r\n\r\n  /** padding right */\r\n  n: number = 3;\r\n  get t_r() { return this.n }\r\n  set t_r(v) { this.n = v }\r\n\r\n  /** padding top */\r\n  p: number = 3;\r\n  get t_t() { return this.p }\r\n  set t_t(v) { this.p = v }\r\n\r\n  /** padding bottom */\r\n  q: number = 3;\r\n  get t_b() { return this.q }\r\n  set t_b(v) { this.q = v }\r\n\r\n\r\n  get font() {\r\n    const arr = [...this.f_d];\r\n    arr[3] = `${arr[3]}px`;\r\n    return arr.join(' ')\r\n  };\r\n  get font_style() { return this.f_d[0] }\r\n  get font_variant() { return this.f_d[1] }\r\n  get font_weight() { return this.f_d[2] }\r\n  get font_size() { return this.f_d[3] }\r\n  get font_family() { return this.f_d[4] }\r\n  set font_style(v) { this.f_d[0] = v }\r\n  set font_variant(v) { this.f_d[1] = v }\r\n  set font_weight(v) { this.f_d[2] = v }\r\n  set font_size(v) { this.f_d[3] = v }\r\n  set font_family(v) { this.f_d[4] = v }\r\n  override read(o: Partial<TextData>) {\r\n    super.read(o)\r\n    const {\r\n      s = o.text,\r\n      u = o.f_d,\r\n      m = o.t_l,\r\n      n = o.t_r,\r\n      p = o.t_t,\r\n      q = o.t_b,\r\n    } = o\r\n\r\n    if (isStr(s)) this.s = s;\r\n    if (Array.isArray(u)) this.u = [...u];\r\n    if (isNum(m)) this.m = m;\r\n    if (isNum(n)) this.n = n;\r\n    if (isNum(p)) this.p = p;\r\n    if (isNum(q)) this.q = q;\r\n    return this\r\n  }\r\n}\r\n\r\n","export interface ITextSelection {\r\n  start: number\r\n  end: number\r\n}\r\nexport class TextSelection implements ITextSelection {\r\n  start: number = -1;\r\n  end: number = -1;\r\n  constructor(start: number = -1, end: number = -1) {\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n  equal(other: ITextSelection) {\r\n    return this.start === other.start && this.end === other.end;\r\n  }\r\n}\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { TextData } from \"./Data\"\r\nimport { Shape } from \"../base\"\r\nimport { IRect, Rect } from \"../../utils/Rect\"\r\nimport { TextSelection, ITextSelection } from \"./TextSelection\"\r\n\r\nconst measurer = document.createElement('canvas').getContext('2d')!\r\nexport interface ILineInfo extends TextMetrics {\r\n  x: number\r\n  y: number\r\n  bl: number\r\n  str: string\r\n}\r\nexport class ShapeText extends Shape<TextData> {\r\n  private _selection = new TextSelection;\r\n  private _lines: ILineInfo[] = [];\r\n  private _selectionRects: IRect[] = [];\r\n  private _offscreen?: HTMLCanvasElement;\r\n\r\n  get text() { return this.data.s }\r\n  set text(v) { this.setText(v) }\r\n  get selection() { return this._selection }\r\n  set selection(v) { this.setSelection(v) }\r\n  get selectionRects() { return this._selectionRects }\r\n\r\n  private get offscreen(): HTMLCanvasElement {\r\n    this._offscreen = this._offscreen || document.createElement('canvas');\r\n    return this._offscreen;\r\n  }\r\n\r\n  constructor(data: Partial<TextData>) {\r\n    super(data, TextData)\r\n    this._calculateLines()\r\n    this._calculateSectionRects()\r\n  }\r\n\r\n  get fontSize(): number { return this.data.font_size }\r\n\r\n  set fontSize(v) {\r\n    const prev = {}\r\n    this.beginDirty(prev)\r\n    this.data.font_size = v;\r\n    this._calculateLines()\r\n    this._calculateSectionRects()\r\n    this.endDirty(prev)\r\n  }\r\n\r\n  override merge(data: Partial<TextData>) {\r\n    const prev = this.data.copy()\r\n    this.beginDirty(prev)\r\n    this.data.merge(data)\r\n    this._calculateLines()\r\n    this._calculateSectionRects()\r\n    this.endDirty(prev)\r\n  }\r\n  private _cursorFlashingTimer: number | undefined\r\n  private _cursorVisible = false\r\n  private _setCursorVisible(v: boolean = !this._cursorVisible) {\r\n    this._cursorVisible = v\r\n    this.endDirty()\r\n  }\r\n  private _setCursorFlashing(v: boolean) {\r\n    if (v) this._cursorVisible = true\r\n    if (v === !!this._cursorFlashingTimer)\r\n      return\r\n    clearInterval(this._cursorFlashingTimer)\r\n    delete this._cursorFlashingTimer\r\n    if (v) {\r\n      this._cursorFlashingTimer = setInterval(() => this._setCursorVisible(), 500);\r\n    } else {\r\n      this._setCursorVisible(true)\r\n    }\r\n  }\r\n  private _applyStyle(ctx: CanvasRenderingContext2D | null) {\r\n    if (!ctx) return\r\n    ctx.font = this.data.font\r\n    ctx.fillStyle = this.data.fillStyle\r\n    ctx.strokeStyle = this.data.strokeStyle\r\n    ctx.lineWidth = this.data.lineWidth\r\n    ctx.setLineDash([])\r\n  }\r\n\r\n  setText(v: string, dirty: boolean = true) {\r\n    if (this.data.s === v)\r\n      return\r\n    this.data.s = v\r\n    this._calculateLines()\r\n    dirty && this.endDirty()\r\n  }\r\n\r\n  setSelection(v: ITextSelection = { start: -1, end: -1 }, dirty: boolean = true) {\r\n    if (this._selection.equal(v))\r\n      return\r\n    this._selection.start = v.start\r\n    this._selection.end = v.end\r\n    this._setCursorFlashing(v.start === v.end && v.start >= 0)\r\n    this._calculateSectionRects()\r\n    dirty && this.endDirty()\r\n  }\r\n\r\n  private _calculateLines() {\r\n    this._applyStyle(measurer)\r\n    let totalH = this.data.p\r\n    let totalW = 0\r\n    const text = this.text\r\n    this._lines = text.split('\\n').map(v => {\r\n      const str = v + '\\n'\r\n      const tm = measurer.measureText(str)\r\n      const y = totalH\r\n      const bl = y + tm.fontBoundingBoxAscent\r\n      totalW = Math.max(tm.width, totalW)\r\n      totalH += tm.fontBoundingBoxAscent + tm.fontBoundingBoxDescent\r\n      return { str, x: this.data.m, y, bl, ...tm }\r\n    })\r\n    totalH += this.data.q\r\n    totalW += this.data.n + this.data.m\r\n    this.resize(totalW, totalH)\r\n  }\r\n\r\n  private _calculateSectionRects() {\r\n    this._applyStyle(measurer)\r\n    const selection = this._selection\r\n    let lineStart = 0\r\n    let lineEnd = 0\r\n    this._selectionRects = []\r\n    for (let i = 0; i < this._lines.length; ++i) {\r\n      const { str, y, x } = this._lines[i]\r\n      lineEnd += str.length\r\n      if (lineEnd <= selection.start) {\r\n        lineStart = lineEnd\r\n        continue\r\n      }\r\n      if (lineStart > selection.end)\r\n        break\r\n      const pre = str.substring(0, selection.start - lineStart)\r\n      const mid = str.substring(selection.start - lineStart, selection.end - lineStart)\r\n      const tm0 = measurer.measureText(pre)\r\n      const tm1 = measurer.measureText(mid)\r\n      const left = x + tm0.width\r\n      const top = y\r\n      const height = tm1.fontBoundingBoxAscent + tm1.fontBoundingBoxDescent\r\n      this._selectionRects.push(new Rect(left, top, Math.max(2, tm1.width), height))\r\n      lineStart = lineEnd\r\n    }\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D) {\r\n    if (!this.visible) return\r\n    const needStroke = this.data.strokeStyle && this.data.lineWidth\r\n    const needFill = this.data.fillStyle\r\n\r\n    if (!this.editing && !needStroke && !needFill) {\r\n      return super.render(ctx)\r\n    }\r\n    this.beginDraw(ctx)\r\n    if (this.editing) {\r\n      const { x, y, w, h } = this.drawingRect()\r\n      let lineWidth = 1\r\n      let halfLineW = lineWidth / 2\r\n      ctx.lineWidth = lineWidth\r\n      ctx.strokeStyle = this.data.fillStyle || 'white'\r\n      ctx.setLineDash([])\r\n      ctx.strokeRect(x + halfLineW, y + halfLineW, w - lineWidth, h - lineWidth)\r\n    }\r\n    if (needStroke || needFill) {\r\n      const { x, y, w, h } = this.drawingRect();\r\n      const { offscreen } = this;\r\n      offscreen.width = w;\r\n      offscreen.height = h;\r\n      const octx = offscreen.getContext('2d')!;\r\n      this._applyStyle(octx)\r\n      octx.globalCompositeOperation = 'source-over'\r\n      for (let i = 0; i < this._lines.length; ++i) {\r\n        const line = this._lines[i]\r\n        needFill && octx.fillText(line.str, line.x, line.bl)\r\n        needStroke && octx.strokeText(line.str, line.x, line.bl)\r\n      }\r\n\r\n      if (this._cursorVisible && this.editing) {\r\n        octx.globalCompositeOperation = 'xor'\r\n        octx.fillStyle = this._cursorFlashingTimer ? this.data.fillStyle : '#2f71ff'\r\n        for (let i = 0; i < this._selectionRects.length; ++i) {\r\n          const rect = this._selectionRects[i]\r\n          ctx.fillStyle = 'white'\r\n          ctx.fillRect(x + rect.x, y + rect.y, rect.w, rect.h)\r\n          octx.fillRect(rect.x, rect.y, rect.w, rect.h)\r\n        }\r\n      }\r\n      ctx.drawImage(offscreen, x, y);\r\n    }\r\n    this.endDraw(ctx)\r\n    return super.render(ctx)\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Text,\r\n  () => new TextData,\r\n  d => new ShapeText(d))","import { Board } from \"../../board\"\r\nimport { EventEnum } from \"../../event\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport styles from \"../../styles.module.scss\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { ITool } from \"../../tools/base/Tool\"\r\nimport { IDot } from \"../../utils/Dot\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { TextData } from \"./Data\"\r\nimport { ShapeText } from \"./Shape\"\r\n\r\nexport class TextTool implements ITool {\r\n  readonly type: string = ToolEnum.Text;\r\n  readonly editor = document.createElement('textarea');\r\n\r\n  private _board: Board | undefined;\r\n  private _curShape: ShapeText | undefined;\r\n  private _prevData: TextData | undefined;\r\n  selectorCallback?: (this: HTMLTextAreaElement, ev: FocusEvent) => void\r\n  private _newTxt: boolean = false\r\n  private set curShape(shape: ShapeText | undefined) {\r\n    const preShape = this._curShape;\r\n    if (preShape === shape) return;\r\n\r\n    this._curShape = shape;\r\n    if (shape) {\r\n      shape.editing = true\r\n      this._updateEditorStyle(shape)\r\n      this.editor.style.display = 'block'\r\n      this.editor.value = shape.text\r\n    } else {\r\n      this.editor.style.display = 'none'\r\n    }\r\n\r\n    if (preShape) {\r\n      preShape.editing = false;\r\n      if (!preShape.text && !this._newTxt) {\r\n        const board = this.board;\r\n        if (!board) return;\r\n        preShape.merge(this._prevData!);\r\n        board.remove(preShape, true);\r\n      } else if (this._newTxt) {\r\n        this._newTxt = false;\r\n        this._board?.emitEvent(EventEnum.ShapesDone, {\r\n          operator: this._board.whoami,\r\n          shapeDatas: [preShape.data.copy()]\r\n        })\r\n      }\r\n    }\r\n\r\n    this._prevData = shape?.data.copy();\r\n  }\r\n  private _updateEditorStyle = (shape: ShapeText) => {\r\n    const { board } = this;\r\n    if (!board) return;\r\n    this.editor.style.font = shape.data.font\r\n    this.editor.style.left = board.world.x + shape.data.x + 'px'\r\n    this.editor.style.top = board.world.y + shape.data.y + 'px'\r\n    this.editor.style.minWidth = shape.data.w + 'px'\r\n    this.editor.style.minHeight = shape.data.h + 'px'\r\n    this.editor.style.maxWidth = shape.data.w + 'px'\r\n    this.editor.style.maxHeight = shape.data.h + 'px'\r\n    this.editor.style.paddingLeft = shape.data.t_l + 'px'\r\n    this.editor.style.paddingTop = shape.data.t_t + 'px'\r\n    this.editor.style.transform = `rotate(${(180 * shape.data.rotation / Math.PI).toFixed(4)}deg) scale(${shape.data.scaleX},${shape.data.scaleY})`\r\n  }\r\n  private _updateShapeText = () => {\r\n    const shape = this._curShape\r\n    if (!shape) return\r\n    const prev = shape.data.copy()\r\n\r\n    shape.setText(this.editor.value, false)\r\n    shape.setSelection({\r\n      start: this.editor.selectionStart,\r\n      end: this.editor.selectionEnd\r\n    })\r\n    this._updateEditorStyle(shape)\r\n\r\n    const board = this.board\r\n    if (!board) return\r\n\r\n    const curr = shape.data.copy()\r\n    board.emitEvent(EventEnum.ShapesChanging, {\r\n      operator: board.whoami,\r\n      shapeType: this.type,\r\n      shapeDatas: [[curr, prev]]\r\n    })\r\n  }\r\n\r\n  constructor() {\r\n    this.editor.wrap = 'off';\r\n    this.editor.classList.add(styles.text_editor);\r\n  }\r\n\r\n  start(): void {\r\n    this.editor.addEventListener('keydown', this._keydown)\r\n    this.editor.addEventListener('input', this._updateShapeText)\r\n    document.addEventListener('selectionchange', this._updateShapeText)\r\n    document.addEventListener('pointerdown', this._docPointerdown)\r\n  }\r\n  end(): void {\r\n    this.editor.removeEventListener('keydown', this._keydown)\r\n    this.editor.removeEventListener('input', this._updateShapeText)\r\n    document.removeEventListener('selectionchange', this._updateShapeText)\r\n    document.removeEventListener('pointerdown', this._docPointerdown)\r\n    this.curShape = undefined;\r\n  }\r\n  private _docPointerdown = (e: PointerEvent) => {\r\n    this.curShape = undefined;\r\n  }\r\n  private _keydown = (e: KeyboardEvent) => {\r\n    if (e.ctrlKey && e.key === 'Enter') {\r\n      this.curShape = undefined;\r\n    } else if (e.key === 'Escape') {\r\n      this.curShape = undefined;\r\n    }\r\n    e.stopPropagation()\r\n  }\r\n  get board(): Board | undefined {\r\n    return this._board\r\n  }\r\n  set board(v: Board | undefined) {\r\n    this._board = v;\r\n    this._board?.onscreen()?.parentElement?.appendChild(this.editor)\r\n  }\r\n  pointerDown(dot: IDot): void {\r\n    const { board } = this\r\n    if (!board) { return; }\r\n    let shapeText: ShapeText | undefined\r\n    const shapes = board.hits({ ...dot, w: 0, h: 0 })\r\n    for (let i = 0; i < shapes.length; ++i) {\r\n      const shape = shapes[i]\r\n      if (shape.data.type !== ShapeEnum.Text)\r\n        continue\r\n      shapeText = shapes[i] as ShapeText\r\n      break\r\n    }\r\n\r\n    if (!shapeText && this._curShape) {\r\n      this.curShape = undefined;\r\n      return\r\n    } else if (!shapeText) {\r\n      this._newTxt = true;\r\n      const newShapeText = board.factory.newShape(ShapeEnum.Text) as ShapeText;\r\n      newShapeText.data.layer = board.layer().id;\r\n      newShapeText.move(dot.x, dot.y);\r\n      board.add(newShapeText, true)\r\n      shapeText = newShapeText\r\n    }\r\n    this.connect(shapeText);\r\n  }\r\n\r\n  connect(shapeText: ShapeText): void {\r\n    const { board } = this;\r\n    if (!board) { return; }\r\n    this.curShape = shapeText\r\n    setTimeout(() => this.editor.focus(), 10)\r\n  }\r\n}\r\nGaia.registerTool(ToolEnum.Text,\r\n  () => new TextTool,\r\n  { name: 'Text', desc: 'enter some text', shape: ShapeEnum.Text })","import { ShapeEnum } from \"../ShapeEnum\";\r\nimport { ShapeData } from \"../base\";\r\n\r\nexport class TickData extends ShapeData {\r\n  override get needFill(): boolean {\r\n    return false;\r\n  }\r\n  constructor(other?: Partial<TickData>) {\r\n    super(other)\r\n    this.type = ShapeEnum.Tick;\r\n    this.strokeStyle = '#FF0000';\r\n    this.lineWidth = 2;\r\n    other && this.read(other)\r\n  }\r\n}\r\n\r\n","import { ShapeEnum } from \"../ShapeEnum\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { TickData } from \"./Data\"\r\nimport { ShapeNeedPath } from \"../base/ShapeNeedPath\"\r\n\r\nexport class ShapeTick extends ShapeNeedPath<TickData> {\r\n  constructor(data: Partial<TickData>) {\r\n    super(data, TickData)\r\n  }\r\n  path(ctx: CanvasRenderingContext2D) {\r\n    const { x, y, w, h } = this.drawingRect()\r\n    const a = { x: x, y: y + h * 0.7 }\r\n    const b = { x: x + w / 3, y: y + h }\r\n    const c = { x: x + w, y: y }\r\n    ctx.beginPath();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.bezierCurveTo(\r\n      a.x + (b.x - a.x) / 3, a.y,\r\n      b.x, b.y - (b.y - a.y) / 3,\r\n      b.x, b.y\r\n    );\r\n    ctx.bezierCurveTo(\r\n      b.x, b.y - (b.y - c.y) / 3,\r\n      c.x - (c.x - b.x) / 4, c.y,\r\n      c.x, c.y\r\n    );\r\n  }\r\n}\r\n\r\nGaia.registerShape(ShapeEnum.Tick, () => new TickData, d => new ShapeTick(d))","import { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeEnum } from \"../ShapeEnum\"\r\nimport { ToolEnum } from \"../../tools/ToolEnum\"\r\nimport { SimpleTool as TickTool } from \"../../tools/base/SimpleTool\"\r\nexport { TickTool }\r\n\r\nGaia.registerTool(ToolEnum.Tick,\r\n  () => new TickTool(ToolEnum.Tick, ShapeEnum.Tick),\r\n  { name: 'Tick', desc: 'tick drawer', shape: ShapeEnum.Tick })","import styles from \"../styles.module.scss\"\r\nexport interface ILayerInfoInit {\r\n  readonly id: string;\r\n  readonly name: string;\r\n}\r\n\r\nexport interface ILayerInits {\r\n  readonly info: ILayerInfoInit;\r\n  readonly onscreen?: HTMLCanvasElement;\r\n}\r\n\r\nexport interface ILayerInfo {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface ILayer {\r\n  readonly name: string;\r\n  readonly info: ILayerInfo;\r\n  readonly onscreen: HTMLCanvasElement;\r\n  readonly offscreen: HTMLCanvasElement;\r\n  readonly ctx: CanvasRenderingContext2D;\r\n  readonly octx: CanvasRenderingContext2D;\r\n  opacity: number;\r\n}\r\n\r\nexport class LayerInfo implements ILayerInfo {\r\n  id: string;\r\n  name: string;\r\n  constructor(inits: ILayerInfoInit) {\r\n    this.id = inits.id;\r\n    this.name = inits.name;\r\n  }\r\n}\r\n\r\nexport class Layer implements ILayer {\r\n  protected _info: ILayerInfo;\r\n  protected _onscreen: HTMLCanvasElement;\r\n  protected _offscreen: HTMLCanvasElement;\r\n  protected _ctx: CanvasRenderingContext2D;\r\n  protected _octx: CanvasRenderingContext2D;\r\n\r\n  get name() { return this._info.name };\r\n  get info() { return this._info };\r\n  get onscreen() { return this._onscreen };\r\n  get offscreen() { return this._offscreen };\r\n  get ctx() { return this._ctx };\r\n  get octx() { return this._octx };\r\n  get opacity() { return Number(this._offscreen.style.opacity) };\r\n  set opacity(v) { this._onscreen.style.opacity = '' + v };\r\n  get id() { return this._info.id; }\r\n\r\n  private _own_onscreen = false;\r\n  private _own_offscreen = false;\r\n\r\n  constructor(inits: ILayerInits) {\r\n    this._info = new LayerInfo(inits.info);\r\n    this._onscreen = inits.onscreen ?? document.createElement('canvas');\r\n    this._own_onscreen = !inits.onscreen;\r\n\r\n    this._onscreen.setAttribute('layer_id', this.id);\r\n    this._onscreen.setAttribute('layer_name', this.name);\r\n\r\n    this._onscreen.draggable = false;\r\n    this._onscreen.classList.add(styles.layer_onscreen_canvas);\r\n    this._ctx = this._onscreen.getContext('2d')!\r\n\r\n    this._offscreen = document.createElement('canvas')\r\n    // this._offscreen.style.position = 'fixed'\r\n    // this._offscreen.style.border = '1px solid black'\r\n    // document.body.appendChild(this._offscreen)\r\n    this._own_offscreen = true\r\n    this._offscreen.width = this._onscreen.width;\r\n    this._offscreen.height = this._onscreen.height;\r\n    this._octx = this._offscreen.getContext('2d')!\r\n\r\n  }\r\n  get width() {\r\n    return this._onscreen.width;\r\n  }\r\n  set width(v: number) {\r\n    this._onscreen.width = v;\r\n    this._offscreen.width = v;\r\n  }\r\n  get height() {\r\n    return this._onscreen.height;\r\n  }\r\n  set height(v: number) {\r\n    this._onscreen.height = v;\r\n    this._offscreen.height = v;\r\n  }\r\n  destory() {\r\n    if (this._own_onscreen) this._onscreen.remove();\r\n    if (this._own_offscreen) this._offscreen.remove();\r\n  }\r\n}","import { EventEnum, Events } from \"../event\"\r\nimport { IFactory, IShapesMgr } from \"../mgr\"\r\nimport { TextTool } from \"../shape\"\r\nimport { IShapeData, Shape, ShapeData } from \"../shape/base\"\r\nimport { ITool, ToolEnum, ToolType } from \"../tools\"\r\nimport { IDot, IRect, IVector, Rect } from \"../utils\"\r\nimport type { ISnapshot } from \"./ISnapshot\"\r\nimport { ILayerInits, Layer } from \"./Layer\"\r\n\r\nexport interface BoardOptions {\r\n  element?: HTMLElement;\r\n  layers?: ILayerInits[];\r\n  width?: number;\r\n  height?: number;\r\n  scrollWidth?: number;\r\n  scrollHeight?: number;\r\n  toolType?: ToolType;\r\n}\r\nconst Tag = '[Board]'\r\n\r\nexport class Board {\r\n  protected _factory: IFactory\r\n  protected _toolType: ToolType | undefined = void 0\r\n  protected _layers = new Map<string, Layer>();\r\n  protected _shapesMgr: IShapesMgr\r\n  protected _mousebuttons: { [x in number]?: number } = {}\r\n  protected _tools = new Map<ToolEnum | string, ITool>()\r\n  protected _tool: ITool | undefined\r\n  protected _selects: Shape[] = []\r\n  protected _element: HTMLElement;\r\n  protected _own_element = false;\r\n  protected _whoami = 'local'\r\n  protected _editingLayerId: string = '';\r\n  protected _viewport = new Rect(0, 0, 600, 600)\r\n  protected _world = new Rect(0, 0, 1600, 1600)\r\n  protected _world_drag_start_pos: IVector = { x: 0, y: 0 };\r\n\r\n  get lb_down(): boolean {\r\n    return !!this._mousebuttons[0]\r\n  }\r\n  get mb_down(): boolean {\r\n    return !!this._mousebuttons[1]\r\n  }\r\n  get viewport(): Readonly<Rect> {\r\n    return this._viewport;\r\n  }\r\n  get world(): Readonly<Rect> {\r\n    return this._world;\r\n  }\r\n  get whoami() {\r\n    return this._whoami\r\n  }\r\n\r\n  get width() {\r\n    return this._viewport.w;\r\n  }\r\n\r\n  set width(v: number) {\r\n    this._viewport.w = v;\r\n    this._layers.forEach(l => l.width = v);\r\n    this.markViewDirty();\r\n  }\r\n\r\n  get height() {\r\n    return this._viewport.h;\r\n  }\r\n\r\n  set height(v: number) {\r\n    this._viewport.h = v;\r\n    this._layers.forEach(l => l.height = v);\r\n    this.markViewDirty();\r\n  }\r\n\r\n  scroll_to(x: number, y: number): this {\r\n    const { min, max } = Math\r\n    this._world.x = -max(min(x, this._world.w - this._viewport.w), 0);\r\n    this._world.y = -max(min(y, this._world.h - this._viewport.h), 0);\r\n    this.markViewDirty();\r\n    return this;\r\n  }\r\n\r\n  scroll_by(x: number, y: number): this {\r\n    return this.scroll_to(\r\n      -this.world.x + x,\r\n      -this.world.y + y,\r\n    );\r\n  }\r\n\r\n  addLayer(layer?: ILayerInits | Layer): boolean {\r\n    if (!layer) {\r\n      layer = this.factory.newLayer();\r\n      this.addLayer(layer);\r\n      return true;\r\n    }\r\n    if (this._layers.has(layer.info.id)) {\r\n      console.error(`[WhiteBoard] addLayer(): layerId already existed! id = ${layer.info.id}`)\r\n      return false;\r\n    }\r\n    if (layer instanceof Layer) {\r\n      layer.width = this.width;\r\n      layer.height = this.height;\r\n      layer.onscreen.style.pointerEvents = 'none';\r\n      this._element.appendChild(layer.onscreen);\r\n      this._layers.set(layer.info.id, layer);\r\n      this.dispatchEvent(new CustomEvent(EventEnum.LayerAdded, { detail: layer }));\r\n      this.markViewDirty()\r\n    } else {\r\n      layer = this.factory.newLayer(layer);\r\n      this.addLayer(layer);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  markViewDirty(): this {\r\n    this.markDirty({\r\n      x: -this.world.x,\r\n      y: -this.world.y,\r\n      w: this.viewport.w,\r\n      h: this.viewport.h\r\n    })\r\n    return this;\r\n  }\r\n\r\n  removeLayer(layerId: string): boolean {\r\n    const layer = this._layers.get(layerId);\r\n    if (!layer) {\r\n      console.error(`[WhiteBoard] removeLayer(): layer not found! id = ${layerId}`)\r\n      return false;\r\n    }\r\n    this._layers.delete(layerId);\r\n    this._element.removeChild(layer.onscreen);\r\n    this.dispatchEvent(new CustomEvent(EventEnum.LayerRemoved, { detail: layer }));\r\n    return true;\r\n  }\r\n  editLayer(layerId: string): boolean {\r\n    if (!this._layers.has(layerId)) {\r\n      console.error(`[WhiteBoard] editLayer(): layer not found! id = ${layerId}`)\r\n      return false;\r\n    }\r\n    this._layers.forEach((layer, id) => {\r\n      layer.onscreen.style.pointerEvents = id === layerId ? '' : 'none'\r\n    })\r\n    this._editingLayerId = layerId;\r\n    return true;\r\n  }\r\n\r\n  layer(): Layer;\r\n  layer(id: string): Layer | undefined;\r\n  layer(id: string = this._editingLayerId): Layer | undefined {\r\n    return this._layers.get(id);\r\n  }\r\n\r\n  addLayers(layers: ILayerInits[]): void {\r\n    if (!layers.length) { return; }\r\n    layers.forEach(v => this.addLayer(v));\r\n    this.editLayer(layers[0].info.id);\r\n  }\r\n  get layers(): Layer[] { return Array.from(this._layers.values()) }\r\n  get element(): HTMLElement { return this._element }\r\n  constructor(factory: IFactory, options: BoardOptions) {\r\n    this._factory = factory;\r\n    this._shapesMgr = this._factory.newShapesMgr();\r\n    this._element = options.element ?? document.createElement('div');\r\n    this._own_element = !options.element;\r\n\r\n    const {\r\n      width = this._viewport.w,\r\n      scrollWidth = width,\r\n\r\n      height = this._viewport.h,\r\n      scrollHeight = height,\r\n\r\n      toolType = this._toolType,\r\n    } = options;\r\n\r\n    this._viewport.w = width\r\n    this._world.w = scrollWidth\r\n    this._viewport.h = height\r\n    this._world.h = scrollHeight\r\n    this._toolType = toolType\r\n\r\n    const layers: ILayerInits[] = options.layers ?? []\r\n    if (!layers.length) {\r\n      layers.push({\r\n        info: {\r\n          id: factory.newLayerId(),\r\n          name: factory.newLayerName(),\r\n        }\r\n      })\r\n    }\r\n    this.addLayers(layers);\r\n\r\n    this._element.addEventListener('pointerdown', this._pointerdown);\r\n    this._element.addEventListener('wheel', this._wheel);\r\n    this._element.tabIndex = 0;\r\n    this._element.style.outline = 'none';\r\n    window.addEventListener('pointermove', this._pointermove);\r\n    window.addEventListener('pointerup', this._pointerup);\r\n  }\r\n\r\n  find(id: string): Shape | null {\r\n    return this._shapesMgr.find(id)\r\n  }\r\n\r\n  toSnapshot(): ISnapshot {\r\n    return {\r\n      v: 0,\r\n      x: 0,\r\n      y: 0,\r\n      w: this.width,\r\n      h: this.height,\r\n      l: Array.from(this._layers.values()).map(v => v.info),\r\n      s: this.shapes().map(v => v.data.wash())\r\n    }\r\n  }\r\n\r\n  fromSnapshot(snapshot: ISnapshot) {\r\n    this.removeAll(false);\r\n    Array.from(this._layers.keys()).forEach((layerId) => this.removeLayer(layerId))\r\n    this.addLayers(snapshot.l.map(info => ({ info })));\r\n    const shapes = snapshot.s.map((v: IShapeData) => this.factory.newShape(v))\r\n    this.add(shapes, false);\r\n  }\r\n  toJson(replacer?: (this: any, key: string, value: any) => any, space?: string | number): string {\r\n    return JSON.stringify(this.toSnapshot(), replacer, space)\r\n  }\r\n  fromJson(json: string) {\r\n    this.fromSnapshot(JSON.parse(json))\r\n  }\r\n  shapes(): Shape<ShapeData>[] {\r\n    return this._shapesMgr.shapes()\r\n  }\r\n  exists(...items: Shape<ShapeData>[]): number {\r\n    return this._shapesMgr.exists(...items)\r\n  }\r\n  hit(rect: IRect): Shape<ShapeData> | null {\r\n    return this._shapesMgr.hit(rect)\r\n  }\r\n  hits(rect: IRect): Shape<ShapeData>[] {\r\n    return this._shapesMgr.hits(rect)\r\n  }\r\n\r\n  addEventListener<K extends keyof Events.EventMap>(type: K, listener: (this: HTMLDivElement, ev: Events.EventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\r\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\r\n  addEventListener(arg0: any, arg1: any, arg2: any): void {\r\n    return this._element.addEventListener(arg0, arg1, arg2);\r\n  }\r\n\r\n\r\n  removeEventListener<K extends keyof Events.EventMap>(type: K, listener: (this: HTMLDivElement, ev: Events.EventMap[K]) => any, options?: boolean | EventListenerOptions): void;\r\n  removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\r\n  removeEventListener(arg0: any, arg1: any, arg2: any): void {\r\n    return this._element.removeEventListener(arg0, arg1, arg2);\r\n  }\r\n\r\n  dispatchEvent(e: CustomEvent<any>): boolean {\r\n    return this._element.dispatchEvent(e)\r\n  }\r\n  emitEvent<K extends keyof Events.EventDetailMap>(k: K, detail: Events.EventDetailMap[K]) {\r\n    return this.dispatchEvent(new CustomEvent(k, { detail }));\r\n  }\r\n\r\n  get factory() { return this._factory }\r\n  set factory(v) { this._factory = v }\r\n\r\n  ctx(): CanvasRenderingContext2D\r\n  ctx(layerId: string): CanvasRenderingContext2D | null | undefined\r\n  ctx(layerId: string = this._editingLayerId): CanvasRenderingContext2D | null | undefined {\r\n    return this.onscreen(layerId)?.getContext('2d');\r\n  }\r\n\r\n  octx(): CanvasRenderingContext2D\r\n  octx(layerId: string): CanvasRenderingContext2D | null | undefined\r\n  octx(layerId: string = this._editingLayerId): CanvasRenderingContext2D | null | undefined {\r\n    return this.offscreen(layerId)?.getContext('2d')\r\n  }\r\n\r\n  onscreen(): HTMLCanvasElement;\r\n  onscreen(layerId: string): HTMLCanvasElement | undefined;\r\n  onscreen(layerId: string = this._editingLayerId): HTMLCanvasElement | undefined {\r\n    return this.layer(layerId)?.onscreen;\r\n  }\r\n\r\n  offscreen(): HTMLCanvasElement;\r\n  offscreen(layerId: string): HTMLCanvasElement | undefined;\r\n  offscreen(layerId: string = this._editingLayerId): HTMLCanvasElement | undefined {\r\n    return this.layer(layerId)?.offscreen;\r\n  }\r\n\r\n  get toolType() { return this._toolType }\r\n  set toolType(v) { this.setToolType(v) }\r\n  setToolType(to: ToolType | undefined) {\r\n    if (this._toolType === to) {\r\n      /* \r\n      Note：\r\n        使用选择器工具，双击文本编辑文本时，会切换至文本工具。\r\n        这种情况下，文本编辑框失去焦点时，切回选择器工具。\r\n        为了避免使用者在这种状态下，主动选择文本工具后，被切回选择器工具。\r\n        这里将相关回调移除。\r\n      */\r\n      if (this._tool instanceof TextTool && this._tool.selectorCallback) {\r\n        this._tool.editor.removeEventListener('blur', this._tool.selectorCallback);\r\n      }\r\n      return\r\n    }\r\n    const from = this._toolType\r\n    this._toolType = to\r\n    this.emitEvent(EventEnum.ToolChanged, {\r\n      operator: this._whoami,\r\n      from, to\r\n    })\r\n\r\n    this._tool?.end?.()\r\n    if (!to) return;\r\n    this._tool = this._factory.newTool(to)\r\n    if (!this._tool) {\r\n      console.error('toolType not supported. got ', to)\r\n      return;\r\n    }\r\n    this._tool.board = this\r\n    this._tools.set(to, this._tool)\r\n    this._tool.start?.()\r\n\r\n  }\r\n  get selects() {\r\n    return this._selects\r\n  }\r\n  add(shapes: Shape[] | Shape): number;\r\n  add(shapes: Shape[] | Shape, emit: boolean): number;\r\n  add(shapes: Shape[] | Shape, opts: { operator: string, emit?: boolean }): number\r\n  add(shapes: Shape[] | Shape, arg1: boolean | { operator: string, emit?: boolean } = false): number {\r\n    const emit = typeof arg1 === 'boolean' ? arg1 : arg1.emit !== false\r\n    const operator = typeof arg1 === 'boolean' ? this._whoami : arg1.operator\r\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\r\n    if (!shapes.length) return 0;\r\n    const ret = this._shapesMgr.add(...shapes)\r\n    shapes.forEach(item => {\r\n      item.board = this\r\n      if (item.selected) this._selects.push(item)\r\n      this.markDirty(item.boundingRect())\r\n    })\r\n    emit && this.emitEvent(EventEnum.ShapesAdded, {\r\n      operator,\r\n      shapeDatas: shapes.map(v => v.data.copy())\r\n    })\r\n    return ret\r\n  }\r\n\r\n  remove(shapes: Shape[] | Shape, opts?: boolean | { operator: string }): number {\r\n    const emit = !!opts;\r\n    const operator = (opts as any)?.operator ?? this._whoami;\r\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\r\n\r\n    if (!shapes.length) return 0\r\n\r\n    const remains = shapes.filter(a => !this.selects.find(b => a === b))\r\n    this.setSelects(remains, emit);\r\n\r\n    if (emit) {\r\n      const shapeDatas = shapes.map(v => v.data);\r\n      shapeDatas.length && this.emitEvent(EventEnum.ShapesRemoved, {\r\n        operator,\r\n        shapeDatas\r\n      })\r\n    }\r\n\r\n    const ret = this._shapesMgr.remove(...shapes);\r\n    shapes.forEach(item => {\r\n      this.markDirty(item.boundingRect())\r\n      item.board = undefined\r\n    })\r\n\r\n    return ret\r\n  }\r\n\r\n  removeAll(emit?: boolean | { operator: string }): number {\r\n    return this.remove(this._shapesMgr.shapes(), emit)\r\n  }\r\n\r\n  removeSelected(emit?: boolean | { operator: string }) {\r\n    this.remove(this._selects.filter(v => !v.locked), emit);\r\n    this._selects = []\r\n  }\r\n\r\n  /**\r\n   * 全选图形\r\n   *\r\n   * @param {true} [emit] 是否发射事件\r\n   * @return {Shape[]} 新选中的图形\r\n   * @memberof Board\r\n   */\r\n  selectAll(emit?: boolean | { operator: string }): Shape[] {\r\n    return this.setSelects([...this.shapes()], emit)[0];\r\n  }\r\n\r\n  /**\r\n   * 取消选择\r\n   * \r\n   * @param {true} [emit] 是否发射事件\r\n   * @return {Shape[]} ？？？\r\n   * @memberof Board\r\n   */\r\n  deselect(emit?: boolean | { operator: string }): Shape[] {\r\n    return this.setSelects([], emit)[1];\r\n  }\r\n\r\n  /**\r\n   * 选中指定区域内的图形，指定区域以外的会被取消选择\r\n   *\r\n   * @param {IRect} rect\r\n   * @return {[Shape[], Shape[]]} [新选中的图形的数组, 取消选择的图形的数组]\r\n   * @param {true} [emit] 是否发射事件\r\n   * @memberof Board\r\n   */\r\n  selectAt(rect: IRect, opts?: boolean | { operator: string }): [Shape[], Shape[]] {\r\n    const hits = this._shapesMgr.hits(rect);\r\n    return this.setSelects(hits, opts);\r\n  }\r\n\r\n  /**\r\n   * 设置被选中的图形，原来被选中的图形数组将被取消选中\r\n   *\r\n   * @param {Shape[]} shapes 被选中的图形\r\n   * @param {(boolean | { operator: string })} [opts]\r\n   * @return {[Shape[], Shape[]]} [被选中的图形数组， 取消选中的图形数组]\r\n   * @memberof Board\r\n   */\r\n  setSelects(shapes: Shape[], opts?: boolean | { operator: string }): [Shape[], Shape[]] {\r\n    const emit = !!opts;\r\n    const operator = (opts as any)?.operator ?? this._whoami;\r\n    const selecteds = shapes.filter(v => !v.selected);\r\n    const desecteds = this._selects.filter(a => !shapes.find(b => a === b))\r\n    desecteds.forEach(v => v.selected = false)\r\n    selecteds.forEach(v => v.selected = true)\r\n    this._selects = shapes\r\n    if (emit) {\r\n      selecteds.length && this.emitEvent(EventEnum.ShapesSelected, {\r\n        operator,\r\n        shapeDatas: selecteds.map(v => v.data)\r\n      });\r\n      desecteds.length && this.emitEvent(EventEnum.ShapesDeselected, {\r\n        operator,\r\n        shapeDatas: desecteds.map(v => v.data)\r\n      });\r\n    }\r\n    return [selecteds, desecteds]\r\n  }\r\n\r\n  getDot(ev: MouseEvent | PointerEvent): IDot {\r\n    const layer = this.layer();\r\n    const ele = layer.onscreen;\r\n    const { width: w, height: h, left, top } = ele.getBoundingClientRect()\r\n    const sw = ele.width / w\r\n    const sh = ele.height / h\r\n    const { pressure = 0.5 } = ev as any\r\n    return {\r\n      x: Math.floor(sw * (ev.clientX - left - this._world.x)),\r\n      y: Math.floor(sh * (ev.clientY - top - this._world.y)),\r\n      p: pressure\r\n    }\r\n  }\r\n  get tools() { return this._tools }\r\n  get tool() { return this._tool }\r\n\r\n  /**\r\n   * 鼠标滚动事件\r\n   *\r\n   * @protected\r\n   * @param {WheelEvent} e\r\n   * @memberof Board\r\n   */\r\n  protected _wheel = (e: WheelEvent) => {\r\n    const sx = e.shiftKey ? e.deltaY : 0;\r\n    const sy = e.shiftKey ? 0 : e.deltaY;\r\n    this.world_rect_changing(() => {\r\n      this.scroll_by(sx, sy)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 执行指定函数，并检查世界矩形变化，当变化触发emitEvent\r\n   *\r\n   * @protected\r\n   * @param {() => any} func 执行函数\r\n   * @return {this}\r\n   * @memberof Board\r\n   */\r\n  protected world_rect_changing(func: () => any): this {\r\n    const r1 = this._world.pure()\r\n    func();\r\n    const r2 = this._world.pure();\r\n    if (r1.x !== r2.x || r1.y !== r2.y || r1.w !== r2.w || r1.h !== r2.h) {\r\n      this.emitEvent(EventEnum.WorldRectChanged, { form: r1, to: r2 })\r\n    }\r\n    return this;\r\n  }\r\n\r\n  protected _pointerdown = (e: PointerEvent) => {\r\n    this._mousebuttons[e.button] = 1\r\n    if (e.button === 0) {\r\n      if (!this.tool) {\r\n        console.warn(\"toolType not set.\")\r\n        return;\r\n      }\r\n      this.tool?.pointerDown?.(this.getDot(e))\r\n      e.stopPropagation()\r\n    } else if (e.button === 1) {\r\n      this._world_drag_start_pos = {\r\n        x: -this._world.x + e.x,\r\n        y: -this._world.y + e.y,\r\n      }\r\n      e.stopPropagation()\r\n    } else {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n    }\r\n  }\r\n\r\n  protected _pointermove = (e: PointerEvent) => {\r\n    if (this.mb_down) {\r\n      this.world_rect_changing(() => {\r\n        const { x, y } = this._world_drag_start_pos\r\n        this.scroll_to(x - e.x, y - e.y)\r\n      })\r\n    }\r\n    if (this.lb_down) {\r\n      this.tool?.pointerDraw?.(this.getDot(e));\r\n    } else {\r\n      this.tool?.pointerMove?.(this.getDot(e))\r\n    }\r\n    e.stopPropagation();\r\n  }\r\n\r\n  protected _pointerup = (e: PointerEvent) => {\r\n    if (e.button == 0) {\r\n      this.tool?.pointerUp?.(this.getDot(e))\r\n      e.stopPropagation();\r\n    }\r\n    this._mousebuttons[e.button] = 0\r\n  }\r\n\r\n  private _dirty: IRect | undefined;\r\n\r\n  /**\r\n   * 标记脏矩形区域，将触发重绘\r\n   * \r\n   * 若在重绘前，连续调用，将会将多个矩形合并一个大的矩形，并仅会触发一次重绘\r\n   *\r\n   * @param {IRect} rect\r\n   * @memberof Board\r\n   */\r\n  markDirty(rect: IRect): void {\r\n    const requested = !this._dirty\r\n    this._dirty = this._dirty ? Rect.bounds(this._dirty, rect) : rect\r\n    requested && requestAnimationFrame(() => this.render())\r\n  }\r\n\r\n  /**\r\n   * 绘制\r\n   * \r\n   * @memberof Board\r\n   */\r\n  render(): void {\r\n    const dirty = this._dirty\r\n    if (!dirty)\r\n      return\r\n\r\n    this._layers.forEach(layer => {\r\n      const { octx } = layer\r\n      octx.save()\r\n      octx.translate(\r\n        this._viewport.x + this._world.x,\r\n        this._viewport.y + this._world.y\r\n      )\r\n      octx.clearRect(dirty.x, dirty.y, dirty.w, dirty.h)\r\n    })\r\n\r\n    this._shapesMgr.shapes().forEach(v => {\r\n      const br = v.boundingRect();\r\n      if (!Rect.hit(br, dirty)) return;\r\n      const layer = this._layers.get(v.data.layer || '');\r\n      if (!layer) return;\r\n      v.render(layer.octx)\r\n    })\r\n    this.tool?.render?.(this.layer().octx)\r\n    this._layers.forEach(layer => {\r\n      const { ctx, octx, offscreen } = layer\r\n      ctx.save()\r\n      const tx = this._viewport.x + this._world.x\r\n      const ty = this._viewport.y + this._world.y\r\n      ctx.translate(tx, ty)\r\n      ctx.clearRect(\r\n        dirty.x,\r\n        dirty.y,\r\n        dirty.w,\r\n        dirty.h\r\n      )\r\n      ctx.drawImage(\r\n        offscreen,\r\n        dirty.x + tx,\r\n        dirty.y + ty,\r\n        dirty.w,\r\n        dirty.h,\r\n        dirty.x,\r\n        dirty.y,\r\n        dirty.w,\r\n        dirty.h\r\n      )\r\n      ctx.restore()\r\n      octx.restore()\r\n    })\r\n    delete this._dirty\r\n  }\r\n\r\n  destory() {\r\n    this._element.removeEventListener('pointerdown', this._pointerdown);\r\n    this._element.removeEventListener('wheel', this._wheel);\r\n    window.removeEventListener('pointermove', this._pointermove);\r\n    window.removeEventListener('pointerup', this._pointerup);\r\n\r\n    this._layers.forEach(v => v.destory())\r\n    if (this._own_element) this._element.remove();\r\n  }\r\n}","import { Resizable, Shape, ShapeData } from \"../shape\";\r\n\r\nexport interface IShapeDecoration {\r\n  ghost?: (shape: Shape, ctx: CanvasRenderingContext2D) => void;\r\n  locked?: (shape: Shape, ctx: CanvasRenderingContext2D) => void;\r\n  selected?: (shape: Shape, ctx: CanvasRenderingContext2D) => void;\r\n  resizable?: (shape: Shape, ctx: CanvasRenderingContext2D) => void;\r\n  debug?: (shape: Shape, ctx: CanvasRenderingContext2D) => void;\r\n}\r\nexport class DefaultShapeDecoration implements IShapeDecoration {\r\n\r\n  private dashSroke(ctx: CanvasRenderingContext2D, segments: Iterable<number>) {\r\n    ctx.strokeStyle = 'white'\r\n    ctx.setLineDash([])\r\n    ctx.stroke()\r\n    ctx.strokeStyle = 'black'\r\n    ctx.setLineDash(segments)\r\n    ctx.stroke()\r\n  }\r\n\r\n  // debug(shape: Shape, ctx: CanvasRenderingContext2D){\r\n  //   const { x, y, w, h } = shape.boundingRect()\r\n  //   ctx.fillStyle = \"#00FF0033\"\r\n  //   ctx.fillRect(x + 1, y + 1, w - 2, h - 2)\r\n  // }\r\n\r\n  locked(shape: Shape, ctx: CanvasRenderingContext2D) {\r\n    const lineWidth = 2\r\n    ctx.lineWidth = lineWidth\r\n    let { x, y, w, h } = shape.selectorRect()\r\n    ctx.beginPath()\r\n    ctx.rect(x, y, w, h)\r\n    ctx.closePath()\r\n\r\n    this.dashSroke(ctx, [lineWidth * 8])\r\n  }\r\n\r\n  selected(shape: Shape, ctx: CanvasRenderingContext2D) {\r\n    const lineWidth = 1\r\n    ctx.lineWidth = lineWidth\r\n    let { x, y, w, h } = shape.selectorRect()\r\n    ctx.beginPath()\r\n    ctx.rect(x, y, w, h)\r\n    ctx.closePath()\r\n    this.dashSroke(ctx, [lineWidth * 4])\r\n  }\r\n\r\n  resizable(shape: Shape, ctx: CanvasRenderingContext2D) {\r\n    let { x, y, w, h } = shape.selectorRect()\r\n    ctx.fillStyle = 'white'\r\n    ctx.setLineDash([]);\r\n    const {\r\n      s, lx, rx, ty, by, mx, my,\r\n    } = shape.getResizerNumbers(x, y, w, h)\r\n    const { resizable } = shape\r\n\r\n    if (resizable & Resizable.Vertical) {\r\n      // top resizer\r\n      ctx.beginPath()\r\n      ctx.rect(mx, ty, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n\r\n      // bottom resizer\r\n      ctx.beginPath()\r\n      ctx.rect(mx, by, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n    }\r\n\r\n    if (resizable & Resizable.Horizontal) {\r\n      // left resizer\r\n      ctx.beginPath()\r\n      ctx.rect(lx, my, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n\r\n      // right resizer\r\n      ctx.beginPath()\r\n      ctx.rect(rx, my, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n    }\r\n    if (resizable & Resizable.Corner) {\r\n      // top-left resizer\r\n      ctx.beginPath()\r\n      ctx.rect(lx, ty, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n\r\n      // top-right resizer\r\n      ctx.beginPath()\r\n      ctx.rect(rx, ty, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n\r\n      // bottom-left resizer\r\n      ctx.beginPath()\r\n      ctx.rect(lx, by, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n\r\n      // bottom-right resizer\r\n      ctx.beginPath()\r\n      ctx.rect(rx, by, s, s)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n    }\r\n  }\r\n}","import { Shape } from \"../shape/base/Shape\"\r\nimport { IRect, Rect } from \"../utils/Rect\"\r\nimport { RotatedRect } from \"../utils/RotatedRect\"\r\nexport interface IShapesMgr {\r\n  /**\r\n   * 查找指定ID的图形\r\n   *\r\n   * @param {string} id 指定ID\r\n   * @return {(Shape | null)} 存在时，返回图形，否则返回undefined\r\n   * @memberof IShapesMgr\r\n   */\r\n  find(id: string): Shape | null\r\n\r\n  /**\r\n   * 获取全部图形\r\n   *\r\n   * @return {Shape[]} 全部图形\r\n   * @memberof IShapesMgr\r\n   */\r\n  shapes(): Shape[]\r\n\r\n\r\n  add(...items: Shape[]): number\r\n\r\n  remove(...items: Shape[]): number\r\n\r\n  exists(...items: Shape[]): number\r\n\r\n  hit(rect: IRect): Shape | null\r\n\r\n  hits(rect: IRect): Shape[]\r\n}\r\n\r\nconst Tag = '[DefaultShapesMgr]'\r\nexport class DefaultShapesMgr implements IShapesMgr {\r\n  private _items: Shape[] = [];\r\n  private _kvs: { [id in string]?: Shape } = {}\r\n\r\n  find(id: string) {\r\n    return this._kvs[id] || null\r\n  }\r\n\r\n  shapes(): Shape[] { return this._items }\r\n\r\n  exists(...items: Shape[]): number {\r\n    let ret = 0\r\n    items.forEach(v => {\r\n      if (this._kvs[v.data.id])\r\n        ++ret\r\n    })\r\n    return ret\r\n  }\r\n\r\n  add(...items: Shape[]): number {\r\n    let ret = 0\r\n    items.forEach(item => {\r\n      if (this.exists(item))\r\n        return console.warn(Tag, `can not add \"${item.data.id}\", already exists!`)\r\n      this._kvs[item.data.id] = item\r\n      this._items.push(item)\r\n      ++ret\r\n    })\r\n    this._items.sort((a, b) => a.data.z - b.data.z)\r\n    return ret\r\n  }\r\n\r\n  remove(...items: Shape[]): number {\r\n    let ret = 0\r\n    items.forEach(item => {\r\n      const idx = this._items.findIndex(v => v === item);\r\n      if (idx < 0)\r\n        return\r\n      this._items = this._items.filter((_, i) => i !== idx)\r\n      delete this._kvs[item.data.id]\r\n      ++ret\r\n    })\r\n    return ret\r\n  }\r\n\r\n  hits(rect: IRect): Shape[] {\r\n    const count = this._items.length\r\n    const ret: Shape[] = []\r\n    for (let idx = count - 1; idx >= 0; --idx) {\r\n      const v = this._items[idx]\r\n      if (!v.ghost && RotatedRect.hit(v.data, rect))\r\n        ret.push(v)\r\n    }\r\n    return ret\r\n  }\r\n\r\n  hit(rect: IRect): Shape | null {\r\n    const count = this._items.length\r\n    for (let idx = count - 1; idx >= 0; --idx) {\r\n      const v = this._items[idx]\r\n      if (!v.ghost && RotatedRect.hit(v.data, rect))\r\n        return v\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import type { Board } from \"../../board/Board\";\r\nimport type { ToolType } from \"../ToolEnum\";\r\nimport type { ITool } from \"./Tool\";\r\nconst warn = (func: string) => console.warn('[InvalidTool]', func)\r\n\r\nexport class InvalidTool implements ITool {\r\n  start(): void { warn('start'); }\r\n  end(): void { warn('end'); }\r\n  get type(): ToolType { return ''; }\r\n  get board(): Board | undefined { warn('get board'); return; }\r\n  set board(_: Board | undefined) { warn('set board'); }\r\n  pointerMove(): void { warn('pointerMove'); }\r\n  pointerDown(): void { warn('pointerDown'); }\r\n  pointerDraw(): void { warn('pointerDraw'); }\r\n  pointerUp(): void { warn('pointerUp'); }\r\n  render(): void { warn('render'); }\r\n}\r\n","import { enumNameGetter } from \"../utils/helper\"\r\n\r\nexport enum FactoryEnum {\r\n  Invalid = 0,\r\n  Default = 1,\r\n}\r\nexport type FactoryType = FactoryEnum | string\r\nexport const getFactoryName = enumNameGetter<FactoryEnum>(\"FactoryEnum\", FactoryEnum)","\r\nexport namespace FontFamilysChecker {\r\n  export function check(fontFamilys: string[]): string[] {\r\n    const w = 64;\r\n    const h = 64;\r\n    const txt = \"a啊\";\r\n    const fontSize = 64;\r\n    const arial = \"arial\";\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\", { willReadFrequently: true })!;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.textBaseline = \"middle\";\r\n    const _drawTxt = function (fontFamily: string) {\r\n      ctx.clearRect(0, 0, w, h);\r\n      ctx.font = fontSize + \"px \" + fontFamily + \", \" + arial;\r\n      ctx.fillText(txt, w / 2, h / 2);\r\n      return ctx.getImageData(0, 0, w, h).data.filter(v => v != 0).join(\"\");\r\n    };\r\n    return fontFamilys.filter(fontFamily => {\r\n      if (typeof fontFamily !== \"string\") { return false }\r\n      if (fontFamily.toLowerCase() === arial.toLowerCase()) { return true }\r\n      return _drawTxt(arial) !== _drawTxt(fontFamily)\r\n    })\r\n  };\r\n}\r\n\r\n\r\n","export const builtInFontFamilies: string[] = [\r\n  \"SimSun\",\r\n  \"SimHei\",\r\n  \"Microsoft Yahei\",\r\n  \"Microsoft JhengHei\",\r\n  \"KaiTi\",\r\n  \"NSimSun\",\r\n  \"FangSong\",\r\n  \"PingFang SC\",\r\n  \"STHeiti\",\r\n  \"STKaiti\",\r\n  \"STSong\",\r\n  \"STFangsong\",\r\n  \"STZhongsong\",\r\n  \"STHupo\",\r\n  \"STXinwei\",\r\n  \"STLiti\",\r\n  \"STXingkai\",\r\n  \"Hiragino Sans GB\",\r\n  \"Lantinghei SC\",\r\n  \"Hanzipen SC\",\r\n  \"Hannotate SC\",\r\n  \"Songti SC\",\r\n  \"Wawati SC\",\r\n  \"Weibei SC\",\r\n  \"Xingkai SC\",\r\n  \"Yapi SC\",\r\n  \"Yuanti SC\",\r\n  \"YouYuan\",\r\n  \"LiSu\",\r\n  \"STXihei\",\r\n  \"STKaiti\",\r\n  \"STSong\",\r\n  \"STFangsong\",\r\n  \"STZhongsong\",\r\n  \"STCaiyun\",\r\n  \"STHupo\",\r\n  \"STXinwei\",\r\n  \"STLiti\",\r\n  \"STXingkai\",\r\n  \"FZShuTi\",\r\n  \"FZYaoti\",\r\n]\r\nexport const builtInFontNames: { [key in string]?: string } = {\r\n  \"SimSun\": \"宋体\",\r\n  \"SimHei\": \"黑体\",\r\n  \"Microsoft Yahei\": \"微软雅黑\",\r\n  \"Microsoft JhengHei\": \"微软正黑体\",\r\n  \"KaiTi\": \"楷体\",\r\n  \"NSimSun\": \"新宋体\",\r\n  \"FangSong\": \"仿宋\",\r\n  \"PingFang SC\": \"苹方\",\r\n  \"STHeiti\": \"华文黑体\",\r\n  \"STKaiti\": \"华文楷体\",\r\n  \"STSong\": \"华文宋体\",\r\n  \"STFangsong\": \"华文仿宋\",\r\n  \"STZhongsong\": \"华文中宋\",\r\n  \"STHupo\": \"华文琥珀\",\r\n  \"STXinwei\": \"华文新魏\",\r\n  \"STLiti\": \"华文隶书\",\r\n  \"STXingkai\": \"华文行楷\",\r\n  \"Hiragino Sans GB\": \"冬青黑体简\",\r\n  \"Lantinghei SC\": \"兰亭黑-简\",\r\n  \"Hanzipen SC\": \"翩翩体-简\",\r\n  \"Hannotate SC\": \"手札体-简\",\r\n  \"Songti SC\": \"宋体-简\",\r\n  \"Wawati SC\": \"娃娃体-简\",\r\n  \"Weibei SC\": \"魏碑-简\",\r\n  \"Xingkai SC\": \"行楷-简\",\r\n  \"Yapi SC\": \"雅痞-简\",\r\n  \"Yuanti SC\": \"圆体-简\",\r\n  \"YouYuan\": \"幼圆\",\r\n  \"LiSu\": \"隶书\",\r\n  \"STXihei\": \"华文细黑\",\r\n  \"STCaiyun\": \"华文彩云\",\r\n  \"FZShuTi\": \"方正舒体\",\r\n  \"FZYaoti\": \"方正姚体\"\r\n}","import { IShapeData, ShapeData } from \"../shape/base/Data\";\r\nimport { IShapesMgr, DefaultShapesMgr } from \"./ShapesMgr\";\r\nimport { Shape } from \"../shape/base/Shape\";\r\nimport type { ITool } from \"../tools/base/Tool\";\r\nimport { InvalidTool } from \"../tools/base/InvalidTool\";\r\nimport { FactoryEnum, FactoryType } from \"./FactoryEnum\";\r\nimport { Gaia } from \"./Gaia\";\r\nimport { Board, ILayerInits, Layer } from \"../board\";\r\nimport { BoardOptions } from \"../board/Board\";\r\nimport type { ShapeType } from \"../shape/ShapeEnum\";\r\nimport type { ToolType } from \"../tools/ToolEnum\";\r\nimport { FontFamilysChecker } from \"../fonts/checker\";\r\nimport { builtInFontFamilies, builtInFontNames } from \"../fonts/builtInFontFamilies\";\r\nimport { isNum, isStr } from \"../utils/helper\";\r\nimport { DefaultShapeDecoration, IShapeDecoration } from \"../board/ShapeDecoration\";\r\n\r\nexport interface IResizerInfo {\r\n  size: number;\r\n}\r\nexport interface IRotatorInfo {\r\n  size: number;\r\n  distance: number;\r\n}\r\nexport interface IFactory {\r\n  get type(): FactoryType;\r\n  get resizer(): IResizerInfo;\r\n  get rotator(): IRotatorInfo;\r\n  shapeTemplate(shapeType: ShapeType): ShapeData;\r\n  setShapeTemplate(shapeType: ShapeType, template: ShapeData): void;\r\n  newWhiteBoard(options: BoardOptions): Board;\r\n  newShapesMgr(): IShapesMgr;\r\n  newTool(toolType: ToolType): ITool;\r\n  newShapeData(shapeType: ShapeType): ShapeData;\r\n  newId(data: IShapeData): string;\r\n  newZ(data: IShapeData): number;\r\n  newShape(shapeType: ShapeType): Shape;\r\n  newShape(shapeData: IShapeData): Shape;\r\n  newLayerId(): string;\r\n  newLayerName(): string;\r\n  newLayer(inits?: Partial<ILayerInits>): Layer;\r\n  fontFamilies(): string[];\r\n  fontName(fontFamily: string): string;\r\n  shapeDecoration(shape: Shape): IShapeDecoration;\r\n  overbound(shape: Shape): number;\r\n}\r\n\r\nconst Tag = '[DefaultFactory]';\r\nexport class DefaultFactory implements IFactory {\r\n  private _z = 0;\r\n  private _time = 0;\r\n  private _shapeTemplates: { [key in ShapeType]?: ShapeData } = {}\r\n  get type(): FactoryType {\r\n    return FactoryEnum.Default\r\n  }\r\n  resizer: IResizerInfo = { size: 10 };\r\n  rotator: IRotatorInfo = { size: 10, distance: 30 };\r\n  shapeTemplate(type: ShapeType): ShapeData {\r\n    const ret = this._shapeTemplates[type] || this.newShapeData(type)\r\n    this._shapeTemplates[type] = ret\r\n    return ret\r\n  }\r\n  setShapeTemplate(type: ShapeType, template: ShapeData): void {\r\n    this._shapeTemplates[type] = template\r\n  }\r\n  newWhiteBoard(options: BoardOptions): Board {\r\n    return new Board(this, options)\r\n  }\r\n  newShapesMgr(): IShapesMgr {\r\n    return new DefaultShapesMgr();\r\n  }\r\n  newTool(toolType: ToolType): ITool {\r\n    const create = Gaia.tool(toolType);\r\n    if (!create) {\r\n      console.warn(Tag, `newTool(\"${toolType}\"), ${toolType} is not registered`);\r\n      return new InvalidTool;\r\n    }\r\n    const ret = create();\r\n    if (ret.type !== toolType) {\r\n      console.warn(Tag, `newTool(\"${toolType}\"), ${toolType} is not corrent! check member 'type' of your Tool!`);\r\n    }\r\n    return ret;\r\n  }\r\n  newShapeData(shapeType: ShapeType): ShapeData {\r\n    const create = Gaia.shapeData(shapeType);\r\n    if (!create) {\r\n      console.warn(Tag, `newShapeData(\"${shapeType}\"), ${shapeType} is not registered`);\r\n      return new ShapeData;\r\n    }\r\n    const ret = create();\r\n    if (ret.type !== shapeType) {\r\n      console.warn(Tag, `newShapeData(\"${shapeType}\"), ${shapeType} is not corrent! check member 'type' of your ShapeData!`);\r\n    }\r\n    return ret;\r\n  }\r\n  newId(data: IShapeData): string {\r\n    return data.t + '_' + Date.now() + (++this._time);\r\n  }\r\n  newZ(data: IShapeData): number {\r\n    return Date.now() + (++this._z);\r\n  }\r\n  newShape(shapeType: ShapeType): Shape;\r\n  newShape(shapeData: IShapeData): Shape;\r\n  newShape(v: ShapeType | IShapeData): Shape {\r\n    const isNew = isNum(v) || isStr(v)\r\n    const type: ShapeType = isNew ? v : v.t\r\n    const data = this.newShapeData(type)\r\n    const template = isNew ? this.shapeTemplate(v) : v\r\n    data.read(template);\r\n    if (isNew) {\r\n      data.id = this.newId(data);\r\n      data.z = this.newZ(data);\r\n    }\r\n    return Gaia.shape(type)?.(data) ?? new Shape(data, ShapeData);\r\n  }\r\n  newLayerId(): string {\r\n    return `layer_${Date.now()}_${++this._time}`\r\n  }\r\n  newLayerName(): string {\r\n    return `layer_${Date.now()}_${++this._time}`\r\n  }\r\n  newLayer(inits?: Partial<ILayerInits>): Layer {\r\n    const { info, ...remainInits } = inits || {}\r\n    const {\r\n      id = this.newLayerId(),\r\n      name = this.newLayerName(),\r\n      ...remainInfo\r\n    } = info || {}\r\n    const _inits: ILayerInits = {\r\n      info: { id, name, ...remainInfo },\r\n      ...remainInits\r\n    }\r\n    return new Layer(_inits);\r\n  }\r\n  fontFamilies(): string[] {\r\n    return FontFamilysChecker.check(builtInFontFamilies)\r\n  }\r\n  fontName(fontFamily: string): string {\r\n    return builtInFontNames[fontFamily] ?? fontFamily;\r\n  }\r\n\r\n  private _shapeDecoration = new DefaultShapeDecoration\r\n\r\n  shapeDecoration(_: Shape<ShapeData>): IShapeDecoration {\r\n    return this._shapeDecoration\r\n  }\r\n\r\n  overbound(_: Shape<ShapeData>): number { return 1 }\r\n}\r\n\r\nGaia.registerFactory(FactoryEnum.Default, () => new DefaultFactory(), { name: 'bulit-in Factory', desc: 'bulit-in Factory' })","import { Shape } from \"../../shape/base/Shape\";\r\nimport { ShapeData } from \"../../shape/base/Data\";\r\nimport { ShapeEventEnum, ShapeEventMap } from \"../../shape/base/ShapeEvent\";\r\nimport { IDot } from \"../../utils/Dot\";\r\nimport { Numbers } from \"../../utils/Numbers\";\r\nimport { Rect } from \"../../utils/Rect\";\r\n\r\nexport class ShapeRotator extends Shape<ShapeData> {\r\n  get target() { return this._target }\r\n  private _target: Shape | undefined\r\n  private _ctrlDot = new Rect(0, 0, 0, 0)\r\n  private _oY: number = 0;\r\n  private _oX: number = 0;\r\n  private get _distance() { return this.board?.factory.rotator.distance || 30 }\r\n  private get _width() { return this.board?.factory.rotator.size || 10 }\r\n  constructor() {\r\n    super({}, ShapeData);\r\n    this.data.ghost = true\r\n    this.data.visible = false\r\n  }\r\n\r\n  private _update = (shape: Shape) => {\r\n    this.beginDirty()\r\n    const { x: mx, y: my } = shape.rotatedMid\r\n    const w = this._width\r\n    const d = this._distance\r\n    const v = shape.visible && shape.selected && !shape.locked && !!shape.board\r\n    if (v) {\r\n      this.data.w = w\r\n      this.data.h = shape.h + d * 2\r\n      this.data.x = mx - this.halfW\r\n      this.data.y = my - this.halfH\r\n      this.data.rotation = shape.rotation\r\n      const s = this.board?.factory.rotator.size || 10\r\n      this._ctrlDot.w = s;\r\n      this._ctrlDot.h = s;\r\n    }\r\n    this.data.visible = v\r\n    this.endDirty()\r\n  }\r\n\r\n  private _listener1 = (e: ShapeEventMap[ShapeEventEnum.EndDirty]) => this._update(e.detail.shape)\r\n  private _listener2 = (e: ShapeEventMap[ShapeEventEnum.BoardChanged]) => this._update(e.detail.shape)\r\n\r\n  follow(shape: Shape) {\r\n    this.unfollow()\r\n    shape.addEventListener(ShapeEventEnum.EndDirty, this._listener1);\r\n    shape.addEventListener(ShapeEventEnum.BoardChanged, this._listener2);\r\n    this._update(shape)\r\n    this._target = shape\r\n  }\r\n\r\n  unfollow() {\r\n    this._target?.removeEventListener(ShapeEventEnum.EndDirty, this._listener1)\r\n    this._target?.removeEventListener(ShapeEventEnum.BoardChanged, this._listener2)\r\n    delete this._target\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.visible) return;\r\n    this.beginDraw(ctx)\r\n    const { x, y, w, h } = this._ctrlDot\r\n    const mx = Math.floor(x + w / 2) - 0.5\r\n    const t = Math.floor(y) + 0.5\r\n    const l = Math.floor(x) - 0.5\r\n    ctx.strokeStyle = \"black\"\r\n    ctx.fillStyle = \"white\"\r\n    ctx.lineWidth = 1\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x + w / 2, y + w / 2, w / 2, 0, Math.PI * 2)\r\n    ctx.fill()\r\n    ctx.stroke()\r\n    // ctx.fillRect(x, y, w, h)\r\n    // ctx.strokeRect(l, t, w, h)\r\n    ctx.beginPath();\r\n    ctx.moveTo(mx, y + h)\r\n    ctx.lineTo(mx, this._distance)\r\n    ctx.stroke()\r\n    this.endDraw(ctx)\r\n  }\r\n\r\n  pointerDown(dot: IDot): boolean {\r\n    const ret = this.visible && !!this._target && this.hit(dot)\r\n    if (ret) {\r\n      this._oX = this._target!.midX;\r\n      this._oY = this._target!.midY;\r\n    }\r\n    return ret\r\n  }\r\n\r\n  pointerDraw(dot: IDot): void {\r\n    const dx = this._oX - dot.x;\r\n    const dy = this._oY - dot.y;\r\n    if (Numbers.equals(dx + dy, 0)) return;\r\n    this._target?.rotateTo(Math.atan2(dy, dx) - Math.PI / 2);\r\n  }\r\n\r\n  hit(dot: IDot): boolean {\r\n    return this._ctrlDot.hit(this.map2me(dot.x, dot.y))\r\n  }\r\n}","import { ResizeDirection, Shape, ShapeData, ShapeRect } from \"../../shape\";\r\nimport { IDot } from \"../../utils/Dot\";\r\nimport { Rect } from \"../../utils/Rect\";\r\n\r\nexport class ShapeSelector extends ShapeRect {\r\n  constructor() {\r\n    super(new ShapeData);\r\n    this.data.lineWidth = 2\r\n    this.data.strokeStyle = '#003388FF'\r\n    this.data.fillStyle = '#00338855'\r\n    this.data.ghost = true;\r\n  }\r\n}\r\n\r\ninterface Target {\r\n  shape: Shape;\r\n  midX: number;\r\n  midY: number;\r\n  rotation: number;\r\n  distance: number;\r\n  degree: number;\r\n}\r\nexport class ShapePicking extends ShapeRect {\r\n  private _targets: Target[] = [];\r\n  private _geo = new Rect(\r\n    Number.MAX_VALUE,\r\n    Number.MAX_VALUE,\r\n    -Number.MAX_VALUE,\r\n    -Number.MAX_VALUE,\r\n  )\r\n  constructor() {\r\n    super(new ShapeData);\r\n    this.data.selected = true;\r\n    this.data.visible = false;\r\n  }\r\n\r\n  hit(dot: IDot): [ResizeDirection, Rect | undefined] | null {\r\n    if (!this.visible) return null;\r\n    const d = this.map2me(dot.x, dot.y).plus(this.data)\r\n    if (!this.getGeo().hit(d)) return null\r\n    return this.resizeDirection(d.x, d.y);\r\n  }\r\n\r\n  reset(): void {\r\n    this._targets = [];\r\n    this.visible = false;\r\n    this._geo.x = Number.MAX_VALUE;\r\n    this._geo.y = Number.MAX_VALUE;\r\n    this._geo.w = -Number.MAX_VALUE;\r\n    this._geo.h = -Number.MAX_VALUE;\r\n    this.rotateTo(0);\r\n  }\r\n\r\n  setShapes(shapes: Shape[]): void {\r\n    this.reset();\r\n    const rotation = this.data.rotation;\r\n    const geo = this._geo;\r\n    this._targets = []\r\n    for (let i = 0, len = shapes.length; i < len; ++i) {\r\n      const shape = shapes[i]\r\n      const {\r\n        rotatedTopLeft: a, rotatedTopRight: b,\r\n        rotatedBottomLeft: c, rotatedBottomRight: d,\r\n        locked,\r\n      } = shape;\r\n      if (locked) continue;\r\n      this._targets.push({\r\n        shape,\r\n        midX: shape.midX,\r\n        midY: shape.midY,\r\n        rotation: shape.rotation - rotation,\r\n        degree: 0,\r\n        distance: 0,\r\n      });\r\n      geo.left = Math.min(geo.left, a.x, b.x, c.x, d.x)\r\n      geo.right = Math.max(geo.right, a.x, b.x, c.x, d.x)\r\n      geo.top = Math.min(geo.top, a.y, b.y, c.y, d.y)\r\n      geo.bottom = Math.max(geo.bottom, a.y, b.y, c.y, d.y)\r\n    }\r\n    const { x: mx, y: my } = geo.mid()\r\n    for (let i = 0, len = this._targets.length; i < len; ++i) {\r\n      const { midX: x, midY: y } = this._targets[i];\r\n      const dx = x - mx;\r\n      const dy = y - my;\r\n      this._targets[i].distance = Math.sqrt(dx * dx + dy * dy);\r\n      this._targets[i].degree = Math.atan2(dy, dx) - rotation;\r\n    }\r\n    this.setGeo(geo);\r\n    this.visible = true\r\n  }\r\n\r\n  override rotateTo(r: number): void {\r\n    super.rotateTo(r)\r\n\r\n    const { midX, midY } = this;\r\n    for (let i = 0, len = this._targets.length; i < len; ++i) {\r\n      const { shape, rotation, distance, degree } = this._targets[i];\r\n      shape.rotateTo(r + rotation);\r\n      const cr = Math.cos(r + degree);\r\n      const sr = Math.sin(r + degree);\r\n      shape.move(\r\n        cr * distance + midX - shape.w / 2,\r\n        sr * distance + midY - shape.h / 2\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { Board } from \"../../board\"\r\nimport { EventEnum } from \"../../event\"\r\nimport { Events } from \"../../event/Events\"\r\nimport { Gaia } from \"../../mgr/Gaia\"\r\nimport { ShapeText, TextTool } from \"../../shape\"\r\nimport { ResizeDirection, Shape } from \"../../shape/base\"\r\nimport { Arrays, Degrees, Rect } from \"../../utils\"\r\nimport { IDot } from \"../../utils/Dot\"\r\nimport { RectHelper } from \"../../utils/RectHelper\"\r\nimport { throttle } from \"../../utils/Throttle\"\r\nimport { IVector, Vector } from \"../../utils/Vector\"\r\nimport { ToolEnum, ToolType } from \"../ToolEnum\"\r\nimport { ITool } from \"../base/Tool\"\r\nimport { ShapeRotator } from \"./ShapeRotator\"\r\nimport { ShapePicking, ShapeSelector } from \"./ShapeSelector\"\r\nexport enum SelectorStatus {\r\n  Idle = 0,\r\n  ReadyForDragging,\r\n  Dragging,\r\n  ReadyForSelecting,\r\n  Selecting,\r\n  ReadyForResizing,\r\n  Resizing,\r\n  ReadyForRotating,\r\n  Rotating,\r\n}\r\nexport class SelectorTool implements ITool {\r\n  get type(): ToolType { return ToolEnum.Selector }\r\n  private _doubleClickTimer = 0;\r\n  private _picking = new ShapePicking()\r\n  private _selector = new ShapeSelector()\r\n  private _rectHelper = new RectHelper()\r\n  private _status = SelectorStatus.Idle\r\n  private _prevPos: IVector = { x: 0, y: 0 }\r\n  private _resizer = {\r\n    direction: ResizeDirection.None,\r\n    anchor: { x: 0, y: 0 },\r\n    offset: { x: 0, y: 0 },\r\n    shape: <Shape | null>null\r\n  }\r\n  private _rotator = new ShapeRotator()\r\n  private _windowPointerDown = () => this.deselect();\r\n\r\n  private _shapes: {\r\n    shape: Shape,\r\n    prevData: Events.IShapeGeoData,\r\n    startData: Events.IShapeGeoData,\r\n  }[] = []\r\n\r\n  get board(): Board { return this._selector.board!!; }\r\n  set board(v: Board) {\r\n    this._selector.board = v;\r\n    this._rotator.board = v;\r\n    this._picking.board = v;\r\n    v.addEventListener(EventEnum.ShapesSelected, this.onSelectChanged)\r\n    v.addEventListener(EventEnum.ShapesDeselected, this.onSelectChanged)\r\n  }\r\n  private onSelectChanged = () => {\r\n    this._picking.reset();\r\n    const { selects } = this.board;\r\n    if (selects.length > 1) {\r\n      this._picking.setShapes(selects);\r\n      this._rotator.follow(this._picking);\r\n    } else {\r\n      this._picking.reset();\r\n    }\r\n  }\r\n\r\n  get rect(): RectHelper { return this._rectHelper }\r\n\r\n  set cursor(v: string) {\r\n    this.board.element.style.cursor = v;\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D): void {\r\n    this._selector.render(ctx)\r\n    this._rotator.render(ctx)\r\n    this._picking.render(ctx)\r\n  }\r\n  start(): void {\r\n    this.board.element.style.cursor = ''\r\n    document.addEventListener('pointerdown', this._windowPointerDown)\r\n  }\r\n  end(): void {\r\n    this.board.element.style.cursor = ''\r\n    document.removeEventListener('pointerdown', this._windowPointerDown)\r\n    this.deselect();\r\n    this._rotator.unfollow()\r\n  }\r\n  deselect() {\r\n    const { board } = this;\r\n    if (!board) { return; }\r\n    board.deselect(true);\r\n  }\r\n  connect(shapes: Shape[]): this;\r\n  connect(shapes: Shape[], startX: number, startY: number): this;\r\n  connect(shapes: Shape[], startX?: number, startY?: number): this {\r\n    let x = startX;\r\n    let y = startY;\r\n    this._shapes = shapes.map(v => {\r\n      const data = {\r\n        i: v.data.i,\r\n        x: v.data.x,\r\n        y: v.data.y,\r\n        w: v.data.w,\r\n        h: v.data.h,\r\n        r: v.data.r,\r\n      }\r\n      if (startX === void 0) {\r\n        x = x === void 0 ? v.data.x : Math.min(x, v.data.x);\r\n        y = y === void 0 ? v.data.y : Math.min(y, v.data.y);\r\n      }\r\n      return {\r\n        shape: v,\r\n        prevData: data,\r\n        startData: data,\r\n      }\r\n    })\r\n    this._prevPos = { x: x!, y: y! }\r\n    return this;\r\n  }\r\n\r\n  move(curX: number, curY: number): this {\r\n    return this.moveBy(\r\n      curX - this._prevPos.x,\r\n      curY - this._prevPos.y\r\n    );\r\n  }\r\n\r\n  moveBy(diffX: number, diffY: number): this {\r\n    this._prevPos.x += diffX;\r\n    this._prevPos.y += diffY;\r\n    for (let i = 0, len = this._shapes.length; i < len; ++i) {\r\n      const v = this._shapes[i]\r\n      const {\r\n        rotatedTopLeft: a, rotatedTopRight: b,\r\n        rotatedBottomLeft: c, rotatedBottomRight: d,\r\n        locked,\r\n      } = v.shape\r\n      if (locked) continue;\r\n      v.prevData = Events.pickShapePosData(v.shape.data)\r\n      v.shape.moveBy(diffX, diffY)\r\n    }\r\n    this._picking.moveBy(diffX, diffY)\r\n    return this;\r\n  }\r\n\r\n  pointerDown(dot: IDot): void {\r\n    const { board, _status } = this\r\n    if (_status !== SelectorStatus.Idle) return;\r\n\r\n    const { x, y } = dot\r\n    if (this._rotator.pointerDown(dot)) {\r\n      this._status = SelectorStatus.ReadyForRotating;\r\n      this.connect([this._rotator.target!], x, y);\r\n      return\r\n    }\r\n    if (this._picking.hit(dot)) {\r\n      this._status = SelectorStatus.ReadyForDragging;\r\n      this.connect(board.selects, x, y);\r\n      return\r\n    }\r\n\r\n    this._rectHelper.start(x, y)\r\n    this.updateGeo()\r\n    const shapes = board.hits({ x, y, w: 0, h: 0 }); // 点击位置的全部图形\r\n    const shape = Arrays.firstOf(shapes, it => (it.selected && !it.locked) ? it : null) || shapes[0]\r\n\r\n    if (!shape || shape.locked) {\r\n      // 点击的位置无任何未锁定图形，则框选图形, 并取消选择以选择的图形\r\n      this._status = SelectorStatus.ReadyForSelecting;\r\n      this._selector.visible = true;\r\n      this.deselect();\r\n    } else if (!shape.selected) {\r\n      // 点击位置存在图形，且图形未被选择，则选择点中的图形。\r\n      this._status = SelectorStatus.ReadyForDragging;\r\n      this._rotator.follow(shape)\r\n      board.setSelects([shape], true)\r\n    } else {\r\n      // 点击位置存在图形，且图形已被选择，则判断是否点击尺寸调整。\r\n      const dot = shape.map2me(x, y).plus(shape.data)\r\n      const [direction, resizerRect] = shape.resizeDirection(dot.x, dot.y);\r\n      if (direction) {\r\n        this._resizer.direction = direction;\r\n        this._resizer.shape = shape\r\n        switch (direction) {\r\n          case ResizeDirection.Top:\r\n            this._resizer.offset.x = 0\r\n            this._resizer.offset.y = resizerRect!.top - dot.y\r\n            this._resizer.anchor = shape.rotatedMidBottom;\r\n            break\r\n          case ResizeDirection.Bottom:\r\n            this._resizer.offset.x = 0\r\n            this._resizer.offset.y = resizerRect!.bottom - dot.y\r\n            this._resizer.anchor = shape.rotatedMidTop;\r\n            break\r\n          case ResizeDirection.Left:\r\n            this._resizer.offset.x = resizerRect!.left - dot.x\r\n            this._resizer.offset.y = 0\r\n            this._resizer.anchor = shape.rotatedMidRight;\r\n            break\r\n          case ResizeDirection.Right:\r\n            this._resizer.offset.x = resizerRect!.right - dot.x\r\n            this._resizer.offset.y = 0\r\n            this._resizer.anchor = shape.rotatedMidLeft;\r\n            break\r\n          case ResizeDirection.TopLeft:\r\n            this._resizer.offset.x = resizerRect!.left - dot.x\r\n            this._resizer.offset.y = resizerRect!.top - dot.y\r\n            this._resizer.anchor = shape.rotatedBottomRight;\r\n            break\r\n          case ResizeDirection.TopRight:\r\n            this._resizer.offset.x = resizerRect!.right - dot.x\r\n            this._resizer.offset.y = resizerRect!.top - dot.y\r\n            this._resizer.anchor = shape.rotatedBottomLeft;\r\n            break\r\n          case ResizeDirection.BottomLeft:\r\n            this._resizer.offset.x = resizerRect!.left - dot.x\r\n            this._resizer.offset.y = resizerRect!.bottom - dot.y\r\n            this._resizer.anchor = shape.rotatedTopRight;\r\n            break\r\n          case ResizeDirection.BottomRight:\r\n            this._resizer.offset.x = resizerRect!.right - dot.x\r\n            this._resizer.offset.y = resizerRect!.bottom - dot.y\r\n            this._resizer.anchor = shape.rotatedTopLeft;\r\n            break\r\n        }\r\n        this._status = SelectorStatus.ReadyForResizing;\r\n        board.setSelects([shape], true)\r\n      } else {\r\n        this._status = SelectorStatus.ReadyForDragging;\r\n      }\r\n    }\r\n    this.connect(board.selects, x, y);\r\n  }\r\n\r\n  pointerMove(dot: IDot): void {\r\n    if (this._rotator.hit(dot)) {\r\n      this.cursor = 'crosshair';\r\n      return;\r\n    }\r\n\r\n    const temp = this._picking.hit(dot)\r\n    if (temp) {\r\n      this.cursor = this.getReiszerCursor(temp[0], this._picking);\r\n      return;\r\n    }\r\n\r\n    const result = Arrays.firstOf(this.board.selects, it => {\r\n      const { x, y } = it.map2me(dot.x, dot.y).plus(it.data)\r\n      if (it.locked) return null;\r\n      const hit = it.getGeo().hit({ x, y })\r\n      if (!hit) return null;\r\n      const [direction] = it.resizeDirection(x, y)\r\n      return [direction, it] as const\r\n    })\r\n    this.cursor = result ? this.getReiszerCursor(...result) : ''\r\n  }\r\n\r\n  private getReiszerCursor(direction: ResizeDirection, shape: Shape) {\r\n    const { rotation } = shape;\r\n    if (!direction) return 'move';\r\n    const deg = Math.floor(\r\n      (\r\n        25 + Degrees.angle(\r\n          Degrees.normalized(rotation + (direction - 1) * Math.PI * 0.25)\r\n        )\r\n      ) / 45\r\n    ) % 8;\r\n    switch (deg) {\r\n      case 0: case 4: return 'ns-resize';\r\n      case 2: case 6: return 'ew-resize';\r\n      case 3: case 7: return 'nw-resize';\r\n      case 1: case 5: return 'ne-resize';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  pointerDraw(dot: IDot): void {\r\n    const board = this.board\r\n    if (!board) return\r\n    switch (this._status) {\r\n      case SelectorStatus.ReadyForRotating: // let it fall-through\r\n        this._status = SelectorStatus.Rotating;\r\n      case SelectorStatus.Rotating:\r\n        this._rotator.pointerDraw(dot);\r\n        this.emitGeoEvent(false);\r\n        break;\r\n      case SelectorStatus.ReadyForSelecting: // let it fall-through\r\n        if (Vector.manhattan(this._prevPos, dot) < 5) { return; }\r\n        this._status = SelectorStatus.Selecting;\r\n      case SelectorStatus.Selecting: {\r\n        this._rectHelper.end(dot.x, dot.y)\r\n        this.updateGeo();\r\n        board.selectAt(this._selector.data, true);\r\n        return\r\n      }\r\n      case SelectorStatus.ReadyForDragging: // let it fall-through\r\n        if (Vector.manhattan(this._prevPos, dot) < 5) { return; }\r\n        this._status = SelectorStatus.Dragging;\r\n      case SelectorStatus.Dragging: {\r\n        this.move(dot.x, dot.y).emitGeoEvent(false);\r\n        return\r\n      }\r\n      case SelectorStatus.ReadyForResizing: // let it fall-through\r\n        if (Vector.manhattan(this._prevPos, dot) < 5) { return; }\r\n        this._status = SelectorStatus.Resizing;\r\n      case SelectorStatus.Resizing: {\r\n        const { shape, offset, anchor, direction } = this._resizer\r\n        if (!shape) return\r\n\r\n        const geo = shape.getGeo()\r\n        const rs = board.factory.resizer.size\r\n        const { y: roy, x: rox } = offset\r\n        const { x, y } = shape.map2me(dot.x, dot.y).plus(shape)\r\n        const { left: l, right: r, bottom: b, top: t } = geo\r\n        switch (direction) {\r\n          case ResizeDirection.Top:\r\n            geo.top = Math.min(roy + y, b - rs * 3)\r\n            break\r\n          case ResizeDirection.Bottom:\r\n            geo.bottom = Math.max(roy + y, t + rs * 3)\r\n            break\r\n          case ResizeDirection.Left:\r\n            geo.left = Math.min(rox + x, r - rs * 3)\r\n            break\r\n          case ResizeDirection.Right:\r\n            geo.right = Math.max(rox + x, l + rs * 3)\r\n            break\r\n          case ResizeDirection.TopLeft:\r\n            geo.top = Math.min(roy + y, b - rs * 3)\r\n            geo.left = Math.min(rox + x, r - rs * 3)\r\n            break\r\n          case ResizeDirection.TopRight:\r\n            geo.top = Math.min(roy + y, b - rs * 3)\r\n            geo.right = Math.max(rox + x, l + rs * 3)\r\n            break\r\n          case ResizeDirection.BottomLeft:\r\n            geo.bottom = Math.max(roy + y, t + rs * 3)\r\n            geo.left = Math.min(rox + x, r - rs * 3)\r\n            break\r\n          case ResizeDirection.BottomRight:\r\n            geo.bottom = Math.max(roy + y, t + rs * 3)\r\n            geo.right = Math.max(rox + x, l + rs * 3)\r\n            break\r\n        }\r\n        const degree: number = shape.data.r ?? 0\r\n        const rd = direction - 1\r\n        const beveling = (rd == 0 || rd == 4) ? geo.h : (rd == 2 || rd == 6) ? geo.w : Math.sqrt(geo.w * geo.w + geo.h * geo.h)\r\n        let deg = degree + Math.PI * rd / 4;\r\n        if (rd == 1 || rd == 5)\r\n          deg += Math.atan2(geo.w, geo.h) - Math.PI / 4\r\n        else if (rd == 3 || rd == 7)\r\n          deg += Math.atan2(geo.h, geo.w) - Math.PI / 4\r\n        const sinV = Math.sin(deg);\r\n        const cosV = Math.cos(deg);\r\n        const midX = anchor.x + sinV * beveling / 2;\r\n        const midY = anchor.y - cosV * beveling / 2;\r\n        shape.geo(\r\n          midX - geo.w / 2,\r\n          midY - geo.h / 2,\r\n          geo.w,\r\n          geo.h\r\n        )\r\n        this.emitGeoEvent(false)\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  pointerUp(): void {\r\n    switch (this._status) {\r\n      case SelectorStatus.ReadyForDragging: {\r\n        // 双击判定\r\n        if (!this._doubleClickTimer) {\r\n          this._doubleClickTimer = setTimeout(() => this._doubleClickTimer = 0, 500);\r\n        } else {\r\n          clearTimeout(this._doubleClickTimer);\r\n          this._doubleClickTimer = 0;\r\n          this.doubleClick();\r\n        }\r\n        break;\r\n      }\r\n      case SelectorStatus.Rotating:\r\n      case SelectorStatus.Resizing:\r\n      case SelectorStatus.Dragging: {\r\n        this.emitGeoEvent.enforce(true)\r\n        break;\r\n      }\r\n    }\r\n    this._selector.visible = false\r\n    this._rectHelper.clear()\r\n    this._status = SelectorStatus.Idle\r\n  }\r\n\r\n  doubleClick() {\r\n    const { board } = this\r\n    if (!board) { return; };\r\n\r\n    // 双击某个文本时，切换到文本编辑工具，编辑此文本，当文本编辑框失去焦点时，回到选择器工具；\r\n    if (this._shapes.length && this._shapes[0].shape instanceof ShapeText) {\r\n      board.setToolType(ToolEnum.Text);\r\n      const textTool = board.tool as TextTool;\r\n\r\n      textTool.selectorCallback = () => board.setToolType(ToolEnum.Selector);\r\n      textTool.editor.addEventListener('blur', textTool.selectorCallback, { once: true });\r\n      textTool.connect(this._shapes[0].shape);\r\n    }\r\n  }\r\n\r\n  emitGeoEvent = throttle(1000 / 30, (isLast: boolean) => {\r\n    const { board, _shapes } = this;\r\n    if (!board || !_shapes.length) return;\r\n    if (isLast) {\r\n      board.emitEvent(EventEnum.ShapesGeoChanged, {\r\n        operator: board.whoami,\r\n        tool: this.type,\r\n        shapeDatas: this._shapes.map(v => [\r\n          Events.pickShapeGeoData(v.shape.data), v.startData\r\n        ] as const)\r\n      });\r\n    } else {\r\n      board.emitEvent(EventEnum.ShapesGeoChanging, {\r\n        operator: board.whoami,\r\n        tool: this.type,\r\n        shapeDatas: this._shapes.map(v => [\r\n          Events.pickShapeGeoData(v.shape.data), v.prevData\r\n        ] as const)\r\n      });\r\n    }\r\n  })\r\n\r\n  private updateGeo() {\r\n    const { x, y, w, h } = this._rectHelper.gen()\r\n    this._selector.geo(x, y, w, h)\r\n  }\r\n}\r\n\r\nGaia.registerTool(ToolEnum.Selector, () => new SelectorTool, {\r\n  name: 'Selector',\r\n  desc: 'pick shapes'\r\n})\r\n","\r\nexport interface ThrottleCallback<F extends (...args: any[]) => any> {\r\n  (...args: Parameters<F>): ReturnType<F>;\r\n  enforce: F;\r\n}\r\n\r\nexport function throttle<F extends (...args: any[]) => any>(interval: number, cb: F): ThrottleCallback<F> {\r\n  let _waiting = false;\r\n  let _result: ReturnType<F> | undefined = void 0;\r\n  let ret = function (...args: Parameters<F>) {\r\n    if (_waiting) return _result!;\r\n    _waiting = true;\r\n    _result = cb(...args);\r\n    setTimeout(() => _waiting = false, interval);\r\n    return _result!\r\n  }\r\n  return Object.assign(ret, { enforce: cb });\r\n}","import type { Board } from \"../board/Board\";\r\nimport { EventEnum } from \"../event/EventType\";\r\nimport { Gaia } from \"../mgr\";\r\nimport { IShapeData } from \"../shape/base/Data\";\r\nimport { ToolEnum } from \"../tools\";\r\n\r\nexport class ActionQueue {\r\n  setActor(actor: Board | undefined): this {\r\n    this._cancellers.forEach(v => v())\r\n    this._cancellers = [];\r\n    if (!actor) { return this; }\r\n\r\n    Gaia.listActions().forEach(eventType => {\r\n      const handler = Gaia.action(eventType);\r\n      if (!handler) { return }\r\n      const func: any = (e: CustomEvent) => {\r\n        if (e.detail.operator !== actor.whoami) {\r\n          return;\r\n        }\r\n        if (!handler.isAction(actor, e)) {\r\n          return;\r\n        }\r\n        if (this._actionsIdx < this._actions.length - 1) {\r\n          this._actions = this._actions.slice(0, this._actionsIdx);\r\n        }\r\n        this._actions.push([\r\n          () => handler.undo(actor, e),\r\n          () => handler.redo(actor, e),\r\n        ]);\r\n        this._actionsIdx = this._actions.length - 1;\r\n      };\r\n      actor.addEventListener(eventType, func);\r\n      const canceller = () => actor.removeEventListener(eventType, func);\r\n      this._cancellers.push(canceller);\r\n    })\r\n    return this;\r\n  }\r\n  undo(): this {\r\n    if (this._actionsIdx < 0) {\r\n      console.log('[ActionQueue] no more undo.')\r\n      return this;\r\n    }\r\n    this._actions[this._actionsIdx][0]();\r\n    --this._actionsIdx;\r\n    return this;\r\n  }\r\n  redo(): this {\r\n    if (this._actionsIdx >= this._actions.length - 1) {\r\n      console.log('[ActionQueue] no more redo.')\r\n      return this;\r\n    }\r\n    ++this._actionsIdx;\r\n    this._actions[this._actionsIdx][1]();\r\n    return this;\r\n  }\r\n  get index() { return this._actionsIdx }\r\n  get length() { return this._actions.length }\r\n  get canRedo() { return this._actionsIdx < this._actions.length - 1 }\r\n  get canUndo() { return this._actionsIdx >= 0 }\r\n  private _maxLen: number | undefined;\r\n  private _actionsIdx: number = -1;\r\n  private _actions: [() => void, () => void][] = [];\r\n  private _cancellers: (() => void)[] = []\r\n}\r\nconst _changeShapes = (board: Board, shapeDatas: (readonly [Partial<IShapeData>, Partial<IShapeData>])[], which: 0 | 1) => {\r\n  shapeDatas.forEach((currAndPrev) => {\r\n    const data = currAndPrev[which];\r\n    const id = data.i;\r\n    id && board!.find(id)?.merge(data);\r\n  });\r\n}\r\nconst _addShapes = (board: Board, shapeDatas: IShapeData[]) => {\r\n  const shapes = shapeDatas.map(v => board.factory.newShape(v));\r\n  board.add(shapes, { operator: 'action_queue' });\r\n}\r\nconst _removeShapes = (board: Board, shapeDatas: IShapeData[]) => {\r\n  const shapes = shapeDatas?.map(data => board.find(data.i)!).filter(v => v);\r\n  board.remove(shapes, { operator: 'action_queue' });\r\n}\r\nGaia.registAction(EventEnum.ShapesDone, {\r\n  isAction: () => true,\r\n  undo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _removeShapes(board, shapeDatas)\r\n  },\r\n  redo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _addShapes(board, shapeDatas)\r\n  }\r\n})\r\nGaia.registAction(EventEnum.ShapesRemoved, {\r\n  isAction: () => true,\r\n  undo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _addShapes(board, shapeDatas)\r\n  },\r\n  redo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _removeShapes(board, shapeDatas)\r\n  }\r\n})\r\nGaia.registAction(EventEnum.ShapesGeoChanged, {\r\n  isAction: (board, event) => {\r\n    const ret = event.detail.tool === ToolEnum.Selector\r\n    console.log(\"isAction:\", ret)\r\n    return ret\r\n  },\r\n  undo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _changeShapes(board, shapeDatas, 1);\r\n    board.emitEvent(EventEnum.ShapesGeoChanged, {\r\n      operator: 'action_queue',\r\n      tool: ToolEnum.Invalid,\r\n      shapeDatas: shapeDatas.map(arr => [arr[1], arr[0]]) as typeof shapeDatas\r\n    })\r\n  },\r\n  redo: (board, event) => {\r\n    const { detail: { shapeDatas } } = event;\r\n    _changeShapes(board, shapeDatas, 0);\r\n    board.emitEvent(EventEnum.ShapesGeoChanged, {\r\n      operator: 'action_queue',\r\n      tool: ToolEnum.Invalid,\r\n      shapeDatas\r\n    })\r\n  }\r\n})"],"names":["Events","EventEnum","Degrees","exports","pickShapePosData","data","i","x","y","pickShapeGeoData","w","h","r","BinaryRange","constructor","f","t","this","from","to","set","range","mid","hit","other","BinaryTree","opts","_range","_items","_itemCount","_level","_opts","Object","assign","children","_child0","_child1","maxItems","parent","_parent","level","itemCount","items","child0","child1","genChild0","childRange0","genChild1","childRange1","_childRange0","_childRange1","split","item","itemRange","inChild0","inChild1","hitCount","length","getItemRange","splice","insert","onTreeChanged","needSplit","push","removeOnlyUnderMe","idx","indexOf","remove","getTree","tree","result","treeNeedMerge","_a","_b","merge","_c","_d","forEach","child","Rect","top","left","right","bottom","v","arguments","undefined","pure","o","b","toString","moveTo","create","rect","bounds","r1","r2","Math","min","max","a","intersect","QuadTree","_rect","_child2","_child3","child2","child3","childRect0","childRect1","genChild2","childRect2","genChild3","childRect3","_childRect0","_childRect1","midX","_childRect2","midY","_childRect3","itemRect","inChild2","inChild3","getItemRect","_e","_f","_g","_h","Vector","plus","add","v0","v1","factor","distance","sqrt","pow","manhattan","abs","dot","multiply","n","RotatedRect","axisX","_axisX","axisY","_axisY","_r","_cr","cos","_sr","sin","middleX","middleY","realA","realB","centerDistanceVertor","axes","len","projection","axis","px","py","equals","Number","EPSILON","normalized","PI","angle","firstOf","arr","transform","isNum","isStr","enumNameGetter","name","e","value","k","findKey","obj","keys","find","ShapeEnum","getShapeName","ShapeStatus","visible","selected","s","editing","locked","ghost","g","read","copy","getPrototypeOf","ShapeStyle","fillStyle","strokeStyle","lineCap","c","lineDash","d","Array","isArray","lineDashOffset","lineJoin","lineWidth","miterLimit","ShapeData","z","style","status","type","id","scaleX","scaleY","layer","l","needFill","needStroke","rotation","wash","ShapeEventEnum","ResizeDirection","Resizable","ToolEnum","Shape","cls","_relCount","board","prev","dispatchEvent","shape","beginDirty","endDirty","resizable","markDirty","boundingRect","move","geo","resize","halfW","halfH","topLeft","bottomLeft","topRight","bottomRight","leftTop","leftBottom","rightTop","rightBottom","rotatedTopLeft","map2world","rotatedBottomLeft","rotatedTopRight","rotatedBottomRight","rotatedLeftTop","rotatedLeftBottom","rotatedRightTop","rotatedRightBottom","midTop","midBottom","midLeft","midRight","rotatedMidTop","rotatedMidBottom","rotatedMidLeft","rotatedMidRight","rotatedMid","rotateBy","rotateTo","getGeo","setGeo","moveBy","resizeBy","geoBy","render","ctx","decoration","factory","shapeDecoration","beginDraw","call","endDraw","debug","drawingRect","floor","selectorRect","hlw","offset","overbound1","overbound","overbound2","ceil","getResizerNumbers","resizer","size","lx","rx","ty","by","mx","lw","my","map2me","arg0","arg1","ix","iy","cr","sr","dx","dy","resizeDirection","pointerX","pointerY","pos","save","hw","hh","translate","rotate","scale","restore","addEventListener","arg2","_ele","document","createElement","once","removeEventListener","detail","CustomEvent","ShapeNeedPath","super","path","Error","fill","setLineDash","stroke","CrossData","getToolName","Tag$2","Gaia","registerFactory","creator","info","_factorys","has","console","warn","_factoryInfos","listFactories","get","registerTool","_tools","_toolInfos","desc","listTools","tool","toolInfo","editToolInfo","func","registerShape","dataCreator","shapeCreator","_shapeInfos","_shapeDatas","_shapes","listShapes","shapeInfo","shapeData","registAction","eventType","handler","_actionHandler","listActions","action","Map","ShapeCross","beginPath","quadraticCurveTo","GenMode","LockMode","ObjectFit","ChangeType","RectHelper","_from","NaN","_to","ok","isNaN","start","end","clear","gen","x0","y0","x1","y1","SimpleTool","_type","shapeType","_keys","keydown","key","applyRect","keyup","_shapeType","holdingKey","window","_curShape","_board","pointerMove","pointerDown","newShape","updateGeo","pointerDraw","pointerUp","state","_prevData","_startData","curr","emitEvent","operator","whoami","shapeDatas","HalfTickData","ShapeHalfTick","bezierCurveTo","lineTo","ImgData","src","objectFit","ShapeImg","_loaded","_error","onLoad","onError","target","img","_src","_img","Image","drawImage","width","height","dw","dh","sx","sy","sw","sh","drawText","text","fillRect","font","fontBoundingBoxDescent","fd","fontBoundingBoxAscent","fa","actualBoundingBoxLeft","al","measureText","fillText","LinesData","coords","u","ShapeLines","_srcGeo","_path2D","Path2D","updatePath","updateSrcGeo","startIdx","endIdx","minX","MAX_VALUE","minY","maxX","MIN_VALUE","maxY","pushDot","editDot","LinesTool","_pressingShift","_pressingControl","_keydown","_keyup","_blur","addDot","setTimeout","moveDot","prevX","prevY","atan2","OvalData","ShapeOval","arc","closePath","OvalTool","PenData","dotsType","slice","ShapePen","_lineFactor","_smoothFactor","prev_dot","prev_x","prev_y","prev_t","prev_t_x","prev_t_y","t_x_0","t_y_0","t_x_1","t_y_1","c_x_0","c_y_0","c_x_1","c_y_1","appendDot","PenTool","p","PolygonData","dots","map","ShapePolygon","RectData","ShapeRect","TextData","m","q","f_d","t_l","t_r","t_t","t_b","join","font_style","font_variant","font_weight","font_size","font_family","TextSelection","equal","measurer","getContext","ShapeText","setText","selection","_selection","setSelection","selectionRects","_selectionRects","offscreen","_offscreen","_lines","_cursorVisible","_calculateLines","_calculateSectionRects","fontSize","_setCursorVisible","_setCursorFlashing","_cursorFlashingTimer","clearInterval","setInterval","_applyStyle","dirty","totalH","totalW","str","tm","bl","lineStart","lineEnd","pre","substring","tm0","tm1","halfLineW","strokeRect","octx","globalCompositeOperation","line","strokeText","TextTool","curShape","preShape","_updateEditorStyle","editor","display","_newTxt","world","minWidth","minHeight","maxWidth","maxHeight","paddingLeft","paddingTop","toFixed","_updateShapeText","selectionStart","selectionEnd","_docPointerdown","ctrlKey","stopPropagation","wrap","classList","styles","onscreen","parentElement","appendChild","shapeText","shapes","hits","newShapeText","connect","focus","TickData","ShapeTick","LayerInfo","inits","Layer","_info","_onscreen","_ctx","_octx","opacity","_own_onscreen","_own_offscreen","setAttribute","draggable","destory","Board","lb_down","_mousebuttons","mb_down","viewport","_viewport","_world","_whoami","_layers","markViewDirty","scroll_to","scroll_by","addLayer","error","pointerEvents","_element","newLayer","removeLayer","layerId","delete","removeChild","editLayer","_editingLayerId","addLayers","layers","values","element","options","_toolType","_selects","_own_element","_world_drag_start_pos","_wheel","shiftKey","deltaY","world_rect_changing","_pointerdown","button","getDot","preventDefault","_pointermove","_pointerup","_factory","_shapesMgr","newShapesMgr","scrollWidth","scrollHeight","toolType","newLayerId","newLayerName","tabIndex","outline","toSnapshot","fromSnapshot","snapshot","removeAll","toJson","replacer","space","JSON","stringify","fromJson","json","parse","exists","setToolType","_tool","selectorCallback","newTool","selects","emit","ret","remains","filter","setSelects","removeSelected","selectAll","deselect","selectAt","selecteds","desecteds","ev","ele","getBoundingClientRect","pressure","clientX","clientY","tools","form","requested","_dirty","requestAnimationFrame","clearRect","br","tx","DefaultShapeDecoration","dashSroke","segments","DefaultShapesMgr","_kvs","_len","_key","_len2","_key2","sort","_len3","_key3","findIndex","_","InvalidTool","FactoryEnum","getFactoryName","check","fontFamilys","arial","canvas","willReadFrequently","textAlign","textBaseline","_drawTxt","fontFamily","getImageData","toLowerCase","builtInFontFamilies","builtInFontNames","Tag","DefaultFactory","_z","_time","_shapeTemplates","rotator","_shapeDecoration","shapeTemplate","newShapeData","setShapeTemplate","template","newWhiteBoard","newId","Date","now","newZ","isNew","remainInits","__rest","remainInfo","_inits","fontFamilies","fontName","ShapeRotator","_target","_distance","_width","_ctrlDot","_oY","_oX","_update","_listener1","_listener2","follow","unfollow","ShapeSelector","ShapePicking","_targets","_geo","reset","setShapes","degree","SelectorStatus","SelectorTool","_doubleClickTimer","_picking","_selector","_rectHelper","_status","_prevPos","_resizer","direction","anchor","_rotator","_windowPointerDown","onSelectChanged","emitGeoEvent","interval","cb","_result","_waiting","enforce","throttle","isLast","startData","prevData","cursor","startX","startY","curX","curY","diffX","diffY","it","resizerRect","temp","getReiszerCursor","rs","roy","rox","rd","beveling","deg","sinV","cosV","clearTimeout","doubleClick","textTool","_changeShapes","which","currAndPrev","_addShapes","_removeShapes","isAction","undo","event","redo","log"],"sourceRoot":""}