import { Delay } from "./Delay"

test('animation Delay case 0', () => {
  const anim = new Delay(10086).set_duration(1000)
  anim.start()
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(0)
  expect(anim.value).toBe(10086)
  anim.update(800)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(200)
  expect(anim.done).toBe(true)
  expect(anim.count).toBe(1)
  expect(anim.value).toBe(10086)

  anim.start()
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(0)
  expect(anim.value).toBe(10086)
  anim.update(800)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(199)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(2)
  expect(anim.done).toBe(true)
  expect(anim.count).toBe(1)
  expect(anim.value).toBe(10086)

  anim.set_times(3)
  anim.start()
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(0)
  expect(anim.value).toBe(10086)
  anim.update(800)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(199)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(2)
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(1)
  expect(anim.value).toBe(10086)
  anim.update(2000)
  expect(anim.done).toBe(true)
  expect(anim.count).toBe(3)
  expect(anim.value).toBe(10086)

  anim.reverse = true;
  anim.times = 1;
  anim.start()
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(0)
  expect(anim.value).toBe(10086)
  anim.update(800)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(199)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(2)
  expect(anim.done).toBe(true)
  expect(anim.count).toBe(1)
  expect(anim.value).toBe(10086)

  anim.set_times(3)
  anim.start()
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(0)
  expect(anim.value).toBe(10086)
  anim.update(800)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(199)
  expect(anim.done).toBe(false)
  expect(anim.value).toBe(10086)
  anim.update(2)
  expect(anim.done).toBe(false)
  expect(anim.count).toBe(1)
  expect(anim.value).toBe(10086)

  anim.update(2000)
  expect(anim.done).toBe(true)
  expect(anim.count).toBe(3)
  expect(anim.value).toBe(10086)
})